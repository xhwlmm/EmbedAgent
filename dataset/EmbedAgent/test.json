[
    {
        "id": 0,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to create an interactive game using three LEDs (led_red, led_yellow, led_green), three pushbuttons (btn_stop, btn_back, btn_forward), and a 7-segment display (sevseg1). The game involves reacting to the LEDs by pressing the correct button within a time limit to score points.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, all LEDs should be turned off, and the 7-segment display should show \"0\" to indicate the initial score.\n\nPreparation Phase: Wait for 3 seconds, during which all LEDs remain off, the 7-segment display shows \"0\", and the serial monitor outputs \"Ready Go!\". After this, one of the LEDs (red, yellow, or green) will randomly light up.\n\nGame Phase:\n1. **Red LED (led_red)**: The red LED will stay lit for 5 seconds. The player must press the \"Stop\" button (btn_stop) within this time. If the correct button is pressed, the serial monitor will output \"Good Job! xN\" (where N is the current score, starting at 0 and incrementing by 1 for each correct response), and the game will proceed to the next round. If the wrong button is pressed, the serial monitor will output \"Come On!\", and the player can try again within the remaining time. If no button is pressed within 5 seconds, the serial monitor will output \"Time's up!\", and the game will proceed to the next round.\n\n2. **Yellow LED (led_yellow)**: The yellow LED will stay lit for 5 seconds. The player must press the \"Back\" button (btn_back) within this time. The same rules as the red LED apply for correct, incorrect, or no button presses.\n\n3. **Green LED (led_green)**: The green LED will stay lit for 5 seconds. The player must press the \"Forward\" button (btn_forward) within this time. The same rules as the red LED apply for correct, incorrect, or no button presses.\n\nGame Repetition: The game will repeat for a total of 5 rounds, with each round having a 2-second interval between LED activations. During these 5 rounds, each LED (red, yellow, and green) must light up at least once.\n\nGame End: After 5 rounds, all LEDs will turn off, and the 7-segment display will show the final score. The serial monitor will output \"Game Over! Your score is N\", where N is the final score.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led_red",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led_yellow",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led_green",
                        "top": -70.8,
                        "left": 128.6,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn_stop",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn_back",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn_forward",
                        "top": -195.4,
                        "left": 190.8,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led_red:C",
                        "black"
                    ],
                    [
                        "led_red:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led_yellow:C",
                        "black"
                    ],
                    [
                        "led_yellow:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led_green:C",
                        "black"
                    ],
                    [
                        "led_green:A",
                        "mega:4",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "btn_stop:2.r",
                        "black"
                    ],
                    [
                        "mega:5",
                        "btn_stop:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn_back:2.r",
                        "black"
                    ],
                    [
                        "mega:6",
                        "btn_back:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn_forward:2.r",
                        "black"
                    ],
                    [
                        "mega:7",
                        "btn_forward:1.l",
                        "green"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int ledRed = 2;       \nconst int ledYellow = 3;    \nconst int ledGreen = 4;     \nconst int btnStop = 5;      \nconst int btnBack = 6;      \nconst int btnForward = 7;   \nconst int dataPin = A0;     \nconst int clockPin = A2;    \nconst int latchPin = A1;    \nconst byte digit[10] = {\n  0b11000000,\n  0b11111001,\n  0b10100100,\n  0b10110000,\n  0b10011001,\n  0b10010010,\n  0b10000010,\n  0b11111000,\n  0b10000000,\n  0b10010000,\n};\nint score = 0;\nvoid setup() {\n  Serial.begin(9600);\n  pinMode(ledRed, OUTPUT);\n  pinMode(ledYellow, OUTPUT);\n  pinMode(ledGreen, OUTPUT);\n  pinMode(btnStop, INPUT_PULLUP);\n  pinMode(btnBack, INPUT_PULLUP);\n  pinMode(btnForward, INPUT_PULLUP);\n  pinMode(dataPin, OUTPUT);\n  pinMode(clockPin, OUTPUT);\n  pinMode(latchPin, OUTPUT);\n  displayScore(0);\n  delay(3000);\n  Serial.println(\"Ready Go!\");\n}\nvoid displayScore(int num) {\n  digitalWrite(latchPin, LOW);\n  shiftOut(dataPin, clockPin, MSBFIRST, digit[num]);\n  digitalWrite(latchPin, HIGH);\n}\nvoid loop() {\n  int colors[5];\n  colors[0] = 0;\n  colors[1] = 1;\n  colors[2] = 2;\n  colors[3] = random(3);\n  colors[4] = random(3);\n  for(int i = 0; i < 5; i++) {\n    int j = random(5);\n    int temp = colors[i];\n    colors[i] = colors[j];\n    colors[j] = temp;\n  }\n  for(int i = 0; i < 5; i++) {\n    int color = colors[i];\n    digitalWrite(ledRed, LOW);\n    digitalWrite(ledYellow, LOW);\n    digitalWrite(ledGreen, LOW);\n    if(color == 0) {\n      digitalWrite(ledRed, HIGH);\n    } else if(color == 1) {\n      digitalWrite(ledYellow, HIGH);\n    } else if(color == 2) {\n      digitalWrite(ledGreen, HIGH);\n    }\n    unsigned long startTime = millis();\n    bool isCorrect = false;\n    int targetButton = -1;\n    if(color == 0) {\n      targetButton = btnStop;\n    } else if(color == 1) {\n      targetButton = btnBack;\n    } else if(color == 2) {\n      targetButton = btnForward;\n    }\n    while(millis() - startTime < 5000) {\n      if(digitalRead(targetButton) == LOW) {\n        isCorrect = true;\n        break;\n      } else {\n        if((color != 0 && digitalRead(btnStop) == LOW) ||\n           (color != 1 && digitalRead(btnBack) == LOW) ||\n           (color != 2 && digitalRead(btnForward) == LOW)) {\n          Serial.println(\"Come On!\");\n          delay(200);\n        }\n      }\n    }\n    digitalWrite(ledRed, LOW);\n    digitalWrite(ledYellow, LOW);\n    digitalWrite(ledGreen, LOW);\n    if(isCorrect) {\n      score++;\n      Serial.print(\"Good Job! x\");\n      Serial.println(score);\n      displayScore(score);\n      delay(2000);\n    } else {\n      Serial.println(\"Time's up!\");\n      delay(2000);\n    }\n  }\n  digitalWrite(ledRed, LOW);\n  digitalWrite(ledYellow, LOW);\n  digitalWrite(ledGreen, LOW);\n  digitalWrite(latchPin, LOW);\n  digitalWrite(latchPin, HIGH);\n  Serial.print(\"Game Over! Your score is \");\n  Serial.println(score);\n  while(1);\n}",
        "hardware_lst": [
            3,
            3,
            0,
            1,
            0,
            0,
            0,
            1,
            0
        ]
    },
    {
        "id": 1,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two LEDs (led1 and led2) in a specific sequence.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, both LEDs (led1 and led2) should be off.\nSequence of Operation:\n1. After 5 seconds, LED1 (led1) should turn on.\n2. After another 5 seconds (total of 10 seconds from start), LED2 (led2) should turn on.\n3. After another 5 seconds (total of 15 seconds from start), both LEDs (led1 and led2) should turn off simultaneously.\n4. The sequence should then repeat after a 5-second delay.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "void setup() {\n  pinMode(2, OUTPUT);\n  pinMode(3, OUTPUT);\n}\nvoid loop() {\n  digitalWrite(2, LOW);\n  digitalWrite(3, LOW);\n  delay(5000);\n  digitalWrite(2, HIGH);\n  delay(5000);\n  digitalWrite(3, HIGH);\n  delay(5000);\n  digitalWrite(2, LOW);\n  digitalWrite(3, LOW);\n  delay(5000);\n}",
        "hardware_lst": [
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 2,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an RGB LED (rgb1) using a push button (k1).\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the RGB LED should be off.\nButton Interaction: Each press of the button (k1) should cycle the RGB LED through a sequence of colors:\nFirst Press: LED displays red.\nSecond Press: LED displays green.\nThird Press: LED displays blue.\nFourth Press: LED turns off.\nThis sequence should repeat with each subsequent press of the button.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "k1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black",
                        []
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red",
                        []
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green",
                        []
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "k1:2.r",
                        "black",
                        []
                    ],
                    [
                        "mega:5",
                        "k1:1.l",
                        "green",
                        []
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int buttonPin = 5;\nconst int redPin = 2;\nconst int greenPin = 3;\nconst int bluePin = 4;\nint buttonState = 0;\nint lastButtonState = 0;\nint mode = 0;\nvoid setup() {\n  pinMode(buttonPin, INPUT);\n  pinMode(redPin, OUTPUT);\n  pinMode(greenPin, OUTPUT);\n  pinMode(bluePin, OUTPUT);\n  digitalWrite(redPin, LOW);\n  digitalWrite(greenPin, LOW);\n  digitalWrite(bluePin, LOW);\n  lastButtonState = digitalRead(buttonPin); \n}\nvoid loop() {\n  buttonState = digitalRead(buttonPin);\n  if (buttonState == LOW && lastButtonState == HIGH) {\n    mode = (mode + 1) % 4;\n    updateLED();\n    delay(200); \n  }\n  lastButtonState = buttonState;\n}\nvoid updateLED() {\n  switch (mode) {\n    case 0:\n      digitalWrite(redPin, LOW);\n      digitalWrite(greenPin, LOW);\n      digitalWrite(bluePin, LOW);\n      break;\n    case 1:\n      digitalWrite(redPin, HIGH);\n      digitalWrite(greenPin, LOW);\n      digitalWrite(bluePin, LOW);\n      break;\n    case 2:\n      digitalWrite(redPin, LOW);\n      digitalWrite(greenPin, HIGH);\n      digitalWrite(bluePin, LOW);\n      break;\n    case 3:\n      digitalWrite(redPin, LOW);\n      digitalWrite(greenPin, LOW);\n      digitalWrite(bluePin, HIGH);\n      break;\n  }\n}",
        "hardware_lst": [
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 3,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an RGB LED (led1) using three push buttons (k1, k2, k3). The RGB LED should cycle through red, green, and blue colors upon startup, and the buttons should allow the user to control the LED's behavior.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the RGB LED (led1) should start cycling through red, green, and blue colors, with each color displayed for 2 seconds.\n\nButton Interaction:\n1. Pressing btn1 (k1) should stop the color cycling and keep the LED displaying the current color.\n2. Pressing btn2 (k2) should resume the color cycling from the point it was stopped.\n3. Pressing btn3 (k3) should turn off the RGB LED (led1), making it completely dark.\n\nState Transitions:\n- **Cycling Mode**: The LED cycles through red, green, and blue, each for 2 seconds.\n- **Hold Mode**: The LED stops cycling and remains on the last color displayed before btn1 was pressed.\n- **Off Mode**: The LED turns off completely.\n\nThe system should respond to button presses immediately and transition between these states as described.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "led1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r1",
                        "left": 460.8,
                        "top": -14.6,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r2",
                        "left": 460.8,
                        "top": 4.6,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r3",
                        "left": 460.8,
                        "top": 23.8,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "k1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "k2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "k3",
                        "top": -195.4,
                        "left": 190.8,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r4",
                        "left": 460.8,
                        "top": 43.0,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r5",
                        "left": 460.8,
                        "top": 62.2,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r6",
                        "left": 460.8,
                        "top": 81.4,
                        "attrs": {
                            "value": "1000"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "led1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "led1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "led1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "k1:2.r",
                        "black"
                    ],
                    [
                        "mega:5",
                        "k1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "k2:2.r",
                        "black"
                    ],
                    [
                        "mega:6",
                        "k2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "k3:2.r",
                        "black"
                    ],
                    [
                        "mega:7",
                        "k3:1.l",
                        "green"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "int redPin = 2;    \nint greenPin = 3;  \nint bluePin = 4;   \nint buttonK1 = 5;  \nint buttonK2 = 6;  \nint buttonK3 = 7;  \nint state = 0; \nint currentColor = 0; \nunsigned long previousMillis = 0;\nconst long interval = 2000; \nvoid setup() {\n  pinMode(redPin, OUTPUT);\n  pinMode(greenPin, OUTPUT);\n  pinMode(bluePin, OUTPUT);\n  pinMode(buttonK1, INPUT_PULLUP);\n  pinMode(buttonK2, INPUT_PULLUP);\n  pinMode(buttonK3, INPUT_PULLUP);\n  digitalWrite(redPin, HIGH);\n  digitalWrite(greenPin, LOW);\n  digitalWrite(bluePin, LOW);\n}\nvoid loop() {\n  unsigned long currentMillis = millis();\n  if (state == 0) { \n    if (currentMillis - previousMillis >= interval) {\n      previousMillis = currentMillis;\n      currentColor = (currentColor + 1) % 3; \n      updateLED();\n    }\n  } else if (state == 1) { \n  } else if (state == 2) {\n    digitalWrite(redPin, LOW);\n    digitalWrite(greenPin, LOW);\n    digitalWrite(bluePin, LOW);\n  }\n  checkButtons();\n}\nvoid updateLED() {\n  switch (currentColor) {\n    case 0:\n      digitalWrite(redPin, HIGH); \n      digitalWrite(greenPin, LOW); \n      digitalWrite(bluePin, LOW); \n      break;\n    case 1:\n      digitalWrite(redPin, LOW); \n      digitalWrite(greenPin, HIGH); \n      digitalWrite(bluePin, LOW); \n      break;\n    case 2:\n      digitalWrite(redPin, LOW); \n      digitalWrite(greenPin, LOW); \n      digitalWrite(bluePin, HIGH); \n      break;\n  }\n}\nvoid checkButtons() {\n  if (digitalRead(buttonK1) == LOW) {\n    delay(20); \n    if (digitalRead(buttonK1) == LOW) {\n      state = 1; \n      while (digitalRead(buttonK1) == LOW); \n    }\n  }\n  if (digitalRead(buttonK2) == LOW) {\n    delay(20); \n    if (digitalRead(buttonK2) == LOW) {\n      state = 0; \n      previousMillis = millis(); \n      while (digitalRead(buttonK2) == LOW); \n    }\n  }\n  if (digitalRead(buttonK3) == LOW) {\n    delay(20); \n    if (digitalRead(buttonK3) == LOW) {\n      state = 2; \n      while (digitalRead(buttonK3) == LOW); \n    }\n  }\n}",
        "hardware_lst": [
            0,
            3,
            1,
            0,
            0,
            0,
            6,
            0,
            0
        ]
    },
    {
        "id": 4,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an RGB LED (rgb1) so that it blinks in different colors according to a specific sequence.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the RGB LED should be off.\nColor Sequence: The RGB LED should follow a sequence of colors, each lasting for 3 seconds:\nFirst 3 Seconds: The LED should display red.\nNext 3 Seconds: The LED should display yellow (a combination of red and green).\nFollowing 3 Seconds: The LED should display white (a combination of red, green, and blue).\nFinal 3 Seconds: The LED should turn off.\nThis sequence should repeat indefinitely after the final step.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "void setup() {\n  pinMode(2, OUTPUT); \n  pinMode(3, OUTPUT); \n  pinMode(4, OUTPUT); \n}\nvoid loop() {\n  digitalWrite(2, HIGH); \n  digitalWrite(3, LOW);  \n  digitalWrite(4, LOW);  \n  delay(3000);\n  digitalWrite(2, HIGH); \n  digitalWrite(3, HIGH); \n  digitalWrite(4, LOW);  \n  delay(3000);\n  digitalWrite(2, HIGH); \n  digitalWrite(3, HIGH); \n  digitalWrite(4, HIGH); \n  delay(3000);\n  digitalWrite(2, LOW); \n  digitalWrite(3, LOW); \n  digitalWrite(4, LOW); \n  delay(3000);\n}",
        "hardware_lst": [
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 5,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a single-color LED (led1) using a pushbutton (k1). The goal is to toggle the LED's state (on/off) each time the button is pressed.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the LED should be in the \"on\" state.\nButton Interaction: Each press of the button (k1) should toggle the LED's state:\nFirst Press: LED turns off.\nSecond Press: LED turns on.\nThird Press: LED turns off.\nFourth Press: LED turns on.\nThis toggling sequence should continue with each subsequent press of the button. The LED should maintain its current state until the button is pressed again.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "k1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "k1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "k1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:3",
                        "red"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int buttonPin = 2;    \nconst int ledPin = 3;        \nint buttonState;            \nint lastButtonState = HIGH; \nint ledState = HIGH;         \nunsigned long lastDebounceTime = 0;  \nunsigned long debounceDelay = 50;    \nvoid setup() {\n  pinMode(buttonPin, INPUT_PULLUP);  \n  pinMode(ledPin, OUTPUT);\n  digitalWrite(ledPin, ledState);\n}\nvoid loop() {\n  int reading = digitalRead(buttonPin);\n  if (reading != lastButtonState) {\n    lastDebounceTime = millis();\n  }\n  if ((millis() - lastDebounceTime) > debounceDelay) {\n    if (reading != buttonState) {\n      buttonState = reading;\n      if (buttonState == LOW) {\n        ledState = !ledState;  \n        digitalWrite(ledPin, ledState);\n      }\n    }\n  }\n  lastButtonState = reading;\n}",
        "hardware_lst": [
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 6,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an RGB LED (rgb1) using a slide potentiometer (pot1). The goal is to adjust the color of the RGB LED based on the position of the slide potentiometer.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the RGB LED should be off.\nSlide Potentiometer Interaction: The position of the slide potentiometer (pot1) should determine the color of the RGB LED (rgb1) as follows:\n- When the potentiometer is in the first third of its range, the LED should display red.\n- When the potentiometer is in the second third of its range, the LED should display green.\n- When the potentiometer is in the final third of its range, the LED should display blue.\nThe LED should continuously update its color based on the current position of the potentiometer.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -148.4,
                        "left": -188,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black",
                        []
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red",
                        []
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green",
                        []
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue",
                        []
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black",
                        []
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red",
                        []
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black",
                        []
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int redPin = 2;\nconst int greenPin = 3;\nconst int bluePin = 4;\nconst int potPin = A3;  \nvoid setup() {\n  pinMode(redPin, OUTPUT);\n  pinMode(greenPin, OUTPUT);\n  pinMode(bluePin, OUTPUT);\n}\nvoid loop() {\n  int potValue = analogRead(potPin);\n  int third = 1023 / 3; \n  int red = 0;\n  int green = 0;\n  int blue = 0;\n  if (potValue < third) {\n    red = map(potValue, 0, third, 255, 255);\n    green = 0;\n    blue = 0;\n  } else if (potValue < 2 * third) {\n    red = 0;\n    green = map(potValue, third, 2 * third, 255, 255);\n    blue = 0;\n  } else {\n    red = 0;\n    green = 0;\n    blue = map(potValue, 2 * third, 1023, 255, 255);\n  }\n  analogWrite(redPin, red);\n  analogWrite(greenPin, green);\n  analogWrite(bluePin, blue);\n}",
        "hardware_lst": [
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0
        ]
    },
    {
        "id": 7,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control the brightness of a single-color LED (led1) using three slide potentiometers (pot1, pot2, pot3). The potentiometers will determine the upper and lower bounds of the LED's brightness, as well as the actual brightness level.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the LED (led1) should be off.\nPotentiometer Interaction:\n1. The first potentiometer (pot1) determines the upper bound of the LED's brightness. The value of pot1 is mapped uniformly from 0 to 1.\n2. The second potentiometer (pot2) determines the lower bound of the LED's brightness. The value of pot2 is also mapped uniformly from 0 to 1.\n3. The third potentiometer (pot3) controls the actual brightness of the LED. The value of pot3 is mapped uniformly from the lower bound (pot2) to the upper bound (pot1).\n4. If the upper bound (pot1) is greater than or equal to the lower bound (pot2), the LED's brightness should be set according to the mapped value of pot3.\n5. If the upper bound (pot1) is less than the lower bound (pot2), the LED should remain off.\nThe LED's brightness should be updated continuously based on the current values of the potentiometers.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -418.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black",
                        []
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red",
                        []
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black",
                        []
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red",
                        []
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black",
                        []
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black",
                        []
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red",
                        []
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black",
                        []
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black",
                        []
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red",
                        []
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black",
                        []
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "void setup() {\n    pinMode(2, OUTPUT);  \n}\nvoid loop() {\n    float port1_value = analogRead(A3) / 1023.0;  \n    float port2_value = analogRead(A4) / 1023.0;  \n    float port3_value = analogRead(A5) / 1023.0;  \n    if (port1_value >= port2_value) {\n        float led_brightness = port2_value + port3_value * (port1_value - port2_value);\n        led_brightness *= 255;  \n        analogWrite(2, led_brightness);  \n    } else {\n        analogWrite(2, 0);  \n    }\n    delay(10);  \n}",
        "hardware_lst": [
            1,
            0,
            0,
            0,
            0,
            3,
            0,
            0,
            0
        ]
    },
    {
        "id": 8,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an LED bar graph (bargraph1). The goal is to create a sequence where the LEDs on the bar graph alternate between even and odd positions.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the LED bar graph should have all LEDs in the even positions lit (A0 A2 ....).\nSequence: After 2 seconds, the LEDs in the even positions should turn off, and the LEDs in the odd positions should turn on.\nAlternation: This sequence should continue indefinitely, with the LEDs alternating between even and odd positions every 2 seconds.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0.6,
                        "left": -3.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "top": -14.2,
                        "left": 417.6,
                        "attrs": {
                            "color": "lime"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r1",
                        "top": -14.6,
                        "left": 460.8,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r2",
                        "top": 4.6,
                        "left": 460.8,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r3",
                        "top": 23.8,
                        "left": 460.8,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r4",
                        "top": 43,
                        "left": 460.8,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r5",
                        "top": 62.2,
                        "left": 460.8,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r6",
                        "top": 81.4,
                        "left": 460.8,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r7",
                        "top": 100.6,
                        "left": 460.8,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r8",
                        "top": 119.8,
                        "left": 460.8,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r9",
                        "top": 139,
                        "left": 460.8,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r10",
                        "top": 158.2,
                        "left": 460.8,
                        "attrs": {
                            "value": "1000"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:2",
                        "bargraph1:A1",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black",
                        []
                    ],
                    [
                        "mega:3",
                        "bargraph1:A2",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black",
                        []
                    ],
                    [
                        "mega:4",
                        "bargraph1:A3",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black",
                        []
                    ],
                    [
                        "mega:5",
                        "bargraph1:A4",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black",
                        []
                    ],
                    [
                        "mega:6",
                        "bargraph1:A5",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black",
                        []
                    ],
                    [
                        "mega:7",
                        "bargraph1:A6",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black",
                        []
                    ],
                    [
                        "mega:8",
                        "bargraph1:A7",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black",
                        []
                    ],
                    [
                        "mega:9",
                        "bargraph1:A8",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black",
                        []
                    ],
                    [
                        "mega:10",
                        "bargraph1:A9",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black",
                        []
                    ],
                    [
                        "mega:11",
                        "bargraph1:A10",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black",
                        []
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "int evenPins[] = {3, 5, 7, 9, 11};\nint oddPins[] = {2, 4, 6, 8, 10};\nvoid setup() {\n  for(int i = 0; i < 5; i++) {\n    pinMode(evenPins[i], OUTPUT);\n    pinMode(oddPins[i], OUTPUT);\n  }\n}\nvoid loop() {\n  for(int i = 0; i < 5; i++) {\n    digitalWrite(evenPins[i], HIGH);\n  }\n  delay(2000); \n  for(int i = 0; i < 5; i++) {\n    digitalWrite(evenPins[i], LOW);\n    digitalWrite(oddPins[i], HIGH);\n  }\n  delay(2000); \n  for(int i = 0; i < 5; i++) {\n    digitalWrite(oddPins[i], LOW);\n  }\n}",
        "hardware_lst": [
            0,
            0,
            0,
            0,
            1,
            0,
            10,
            0,
            0
        ]
    },
    {
        "id": 9,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an LED bar graph (bargraph1) using a push button (btn1). The goal is to sequentially light up the LEDs in the bar graph from the bottom up, two at a time, each time the button is pressed. When all LEDs are lit, they should turn off and the sequence should restart from the bottom.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, all LEDs in the LED bar graph should be off.\nButton Interaction: Each press of the button (btn1) should light up the next two LEDs in the bar graph, starting from the bottom. The sequence should continue as follows:\nFirst Press: The first two LEDs (from `A10` to `A0`) light up.\nSecond Press: The next two LEDs light up, making a total of four LEDs lit.\nThird Press: The next two LEDs light up, making a total of six LEDs lit.\nFourth Press: The next two LEDs light up, making a total of eight LEDs lit.\nFifth Press: The next two LEDs light up, making all ten LEDs lit.\nSixth Press: All LEDs turn off, and the sequence restarts from the first two LEDs.\nThis sequence should repeat with each subsequent press of the button.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r1",
                        "left": 460.8,
                        "top": -14.6,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r2",
                        "left": 460.8,
                        "top": 4.6,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r3",
                        "left": 460.8,
                        "top": 23.8,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r4",
                        "left": 460.8,
                        "top": 43.0,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r5",
                        "left": 460.8,
                        "top": 62.2,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r6",
                        "left": 460.8,
                        "top": 81.4,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r7",
                        "left": 460.8,
                        "top": 100.6,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r8",
                        "left": 460.8,
                        "top": 119.8,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r9",
                        "left": 460.8,
                        "top": 139.0,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r10",
                        "left": 460.8,
                        "top": 158.2,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:2",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:3",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ],
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:12",
                        "btn1:1.l",
                        "green"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int buttonPin = 12;  \nconst int ledPins[10] = {11, 10, 9, 8, 7, 6, 5, 4, 3, 2};\nint count = 0;\nvoid setup() {\n  pinMode(buttonPin, INPUT_PULLUP);\n  for(int i = 0; i < 10; i++) {\n    pinMode(ledPins[i], OUTPUT);\n  }\n}\nvoid loop() {\n  static int lastButtonState = HIGH;\n  int currentButtonState = digitalRead(buttonPin);\n  if (currentButtonState != lastButtonState) {\n    if (currentButtonState == LOW) {\n      delay(20); \n      if (digitalRead(buttonPin) == LOW) {\n        count += 2;\n        if (count > 10) {\n          count = 0;\n        }\n        for (int i = 0; i < 10; i++) {\n          if (i < count) {\n            digitalWrite(ledPins[i], HIGH);\n          } else {\n            digitalWrite(ledPins[i], LOW);\n          }\n        }\n      }\n    }\n    lastButtonState = currentButtonState;\n  }\n}",
        "hardware_lst": [
            0,
            1,
            0,
            0,
            1,
            0,
            10,
            0,
            0
        ]
    },
    {
        "id": 10,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an LED bar graph (bargraph1) using a slide potentiometer (pot1) and a pushbutton (btn1). The number of LEDs lit on the bar graph should change based on the value of the potentiometer. Additionally, pressing the button should reverse the order in which the LEDs are lit.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the LED bar graph should be off.\nPotentiometer Interaction: As the value of the potentiometer increases, the number of LEDs lit on the bar graph should increase, starting from the first LED (with pin: A10).\nButton Interaction: When the button is pressed, the order in which the LEDs are lit should reverse. Specifically, the LEDs should start lighting from the last LED (with pin: A1) instead of the first.\nState After Each Step:\n1. When the potentiometer value increases, more LEDs should light up starting from the first LED.\n2. When the potentiometer value decreases, fewer LEDs should remain lit, starting from the first LED.\n3. When the button is pressed, the order of lighting the LEDs should reverse, and the number of LEDs lit should still correspond to the potentiometer value.\n4. When the button is pressed again, the order of lighting the LEDs should return to the original sequence.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r1",
                        "left": 460.8,
                        "top": -14.6,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r2",
                        "left": 460.8,
                        "top": 4.6,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r3",
                        "left": 460.8,
                        "top": 23.8,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r4",
                        "left": 460.8,
                        "top": 43.0,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r5",
                        "left": 460.8,
                        "top": 62.2,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r6",
                        "left": 460.8,
                        "top": 81.4,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r7",
                        "left": 460.8,
                        "top": 100.6,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r8",
                        "left": 460.8,
                        "top": 119.8,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r9",
                        "left": 460.8,
                        "top": 139.0,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-resistor",
                        "id": "r10",
                        "left": 460.8,
                        "top": 158.2,
                        "attrs": {
                            "value": "1000"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:2",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:3",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:12",
                        "btn1:1.l",
                        "green"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Arduino.h>\nconst int potPin = A3;        \nconst int btnPin = 12;        \nconst int ledPins[] = {11, 10, 9, 8, 7, 6, 5, 4, 3, 2}; \nint mappedValue = 0;          \nbool buttonPressed = false;   \nint previousButtonState = HIGH;\nvoid setup() {\n  pinMode(btnPin, INPUT_PULLUP);\n  for (int i = 0; i < 10; i++) {\n    pinMode(ledPins[i], OUTPUT);\n  }\n}\nvoid loop() {\n  int potValue = analogRead(potPin);\n  mappedValue = map(potValue, 0, 1023, 0, 10);\n  if (mappedValue > 10) mappedValue = 10;\n  int currentButtonState = digitalRead(btnPin);\n  if (currentButtonState != previousButtonState) {\n    currentButtonState = digitalRead(btnPin);\n    if (currentButtonState != previousButtonState) {\n      buttonPressed = !buttonPressed;\n    }\n    delay(200); \n  }\n  int ledIndex;\n  if (buttonPressed) {\n    ledIndex = 10 - mappedValue;\n  } else {\n    ledIndex = mappedValue;\n  }\n  for (int i = 0; i < 10; i++) {\n    if (i < ledIndex) {\n      if (buttonPressed) {\n        digitalWrite(ledPins[i], LOW); \n      }\n      else{\n        digitalWrite(ledPins[i], HIGH); \n      }\n    } else {\n      if (buttonPressed) {\n        digitalWrite(ledPins[i], HIGH); \n      }\n      else{\n        digitalWrite(ledPins[i], LOW); \n      }\n    }\n  }\n  delay(100);\n}",
        "hardware_lst": [
            0,
            1,
            0,
            0,
            1,
            1,
            10,
            0,
            0
        ]
    },
    {
        "id": 11,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 7-segment display (sevseg1) using a 74HC595 shift register (sr1). The goal is to display specific characters on the 7-segment display in a timed sequence.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment display should be off.\nDisplay Sequence: The 7-segment display should follow a sequence of displays, each lasting 2 seconds:\nFirst 2 Seconds: Display the character '0'.\nNext 2 Seconds: Display the character 'A'.\nFinal 2 Seconds: Display the character 'P'.\nThis sequence should repeat continuously after the final display.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "void setup() {\n  pinMode(A0, OUTPUT);  \n  pinMode(A1, OUTPUT);  \n  pinMode(A2, OUTPUT);  \n}\nvoid loop() {\n  display(0); \n  delay(2000); \n  display('A'); \n  delay(2000); \n  display('P'); \n  delay(2000); \n}\nvoid display(char c) {\n  byte data = 0;\n  switch(c) {\n    case 0:\n      data = 0b1000000; \n      break;\n    case 'A':\n      data = 0b0001000; \n      break;\n    case 'P':\n      data = 0b0001100; \n      break;\n  }\n  shiftOut(A0, A2, MSBFIRST, data);  \n  digitalWrite(A1, HIGH);  \n  delayMicroseconds(1);\n  digitalWrite(A1, LOW);\n  delayMicroseconds(1);\n}",
        "hardware_lst": [
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0
        ]
    },
    {
        "id": 12,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 7-segment display (sevseg1) using a push button (btn1). The goal is to create a counter that increments by 3 each time the button is pressed, and the current count is displayed on the 7-segment display. The counter should reset to 0 after reaching 9.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment display should show 0.\nButton Interaction: Each press of the button (btn1) should increment the counter by 3. The counter should wrap around to 0 after reaching 9. The updated count should be immediately displayed on the 7-segment display.\nDebouncing: Ensure that the button press is debounced to avoid multiple increments from a single press.\nDisplay Update: The 7-segment display should accurately reflect the current count after each button press.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Arduino.h>\nconst byte digit[10] = {\n  0b11000000,\n  0b11111001,\n  0b10100100,\n  0b10110000,\n  0b10011001,\n  0b10010010,\n  0b10000010,\n  0b11111000,\n  0b10000000,\n  0b10010000,\n};\nint count = 0;\nvoid setup() {\n  pinMode(A0, OUTPUT); \n  pinMode(A1, OUTPUT); \n  pinMode(A2, OUTPUT); \n  pinMode(2, INPUT_PULLUP);  \n  displayNumber(count);\n}\nvoid loop() {\n  if (digitalRead(2) == LOW) {\n    delay(20); \n    if (digitalRead(2) == LOW) {\n      count = (count + 3) % 10;\n      displayNumber(count);\n      while (digitalRead(2) == LOW); \n    }\n  }\n}\nvoid displayNumber(int num) {\n  byte segCode = digit[num];\n  shiftOut(A0, A2, MSBFIRST, segCode);\n  digitalWrite(A1, HIGH); \n  digitalWrite(A1, LOW);\n}",
        "hardware_lst": [
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            0
        ]
    },
    {
        "id": 13,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three LEDs (led_red, led_yellow, led_green) and a 7-segment display (sevseg1) using a shift register (sr1). The goal is to randomly light up 0 to 3 LEDs every 2 seconds and display the number of currently lit LEDs on the 7-segment display.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, all LEDs should be off, and the 7-segment display should show '0'.\nRandomization: Every 2 seconds, the system should randomly select 0 to 3 LEDs to light up. The selection of which LEDs to light should be random each time.\nDisplay Update: The 7-segment display should immediately update to show the number of LEDs that are currently lit.\nCycle Continuation: This process should repeat indefinitely, with the LEDs and 7-segment display updating every 2 seconds.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led_red",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led_yellow",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led_green",
                        "top": -70.8,
                        "left": 128.6,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led_red:C",
                        "black"
                    ],
                    [
                        "led_red:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led_yellow:C",
                        "black"
                    ],
                    [
                        "led_yellow:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led_green:C",
                        "black"
                    ],
                    [
                        "led_green:A",
                        "mega:4",
                        "red"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int ledPins[] = {2, 3, 4};  \nconst int numLEDs = 3;\nconst int latchPin = A1;  \nconst int clockPin = A2;  \nconst int dataPin = A0;   \nconst byte digit[4] = {\n  0b11000000,\n  0b11111001,\n  0b10100100,\n  0b10110000,\n};\nunsigned long previousMillis = 0;\nconst long interval = 2000;\nint ledCount = 0;\nbool ledStates[3] = {false, false, false};\nvoid shuffleArray(int arr[], int size) {\n  for (int i = 0; i < size; i++) {\n    int j = random(0, size);\n    int temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nvoid setup() {\n  for (int i = 0; i < numLEDs; i++) {\n    pinMode(ledPins[i], OUTPUT);\n    digitalWrite(ledPins[i], LOW);\n  }\n  pinMode(latchPin, OUTPUT);\n  pinMode(clockPin, OUTPUT);\n  pinMode(dataPin, OUTPUT);\n  previousMillis = millis() - interval; \n}\nvoid loop() {\n  if (millis() - previousMillis >= interval) {\n    ledCount = random(0, 4);\n    int leds[] = {0, 1, 2};\n    shuffleArray(leds, 3);\n    for (int i = 0; i < 3; i++) {\n      digitalWrite(ledPins[i], LOW);\n    }\n    for (int i = 0; i < ledCount; i++) {\n      switch (leds[i]) {\n        case 0:\n          digitalWrite(ledPins[i], HIGH);\n          break;\n        case 1:\n          digitalWrite(ledPins[i], HIGH);\n          break;\n        case 2:\n          digitalWrite(ledPins[i], HIGH);\n          break;\n      }\n    }\n    displayNumber(ledCount);\n    previousMillis += interval;\n  }\n}\nvoid displayNumber(int number) {\n  digitalWrite(latchPin, LOW);\n  shiftOut(dataPin, clockPin, MSBFIRST, digit[number]);\n  digitalWrite(latchPin, HIGH);\n}",
        "hardware_lst": [
            3,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0
        ]
    },
    {
        "id": 14,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 7-segment display (sevseg1) using a 74HC595 shift register (sr1). The goal is to create a timer that increments by 2 seconds every real-time second, and once the timer exceeds 10 seconds, only the last digit of the timer should be displayed on the 7-segment display.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment display should be off.\nTimer Operation: Every real-time second, the timer should increment by 2 seconds. The 7-segment display should update to show the current timer value.\nDisplay Rule: If the timer value exceeds 10 seconds, only the last digit of the timer value should be displayed on the 7-segment display. For example, if the timer is at 12 seconds, the display should show '2'.\nThe timer should continue to increment and update the display accordingly, following the above rules.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int dataPin = A0;   \nconst int clockPin = A2;  \nconst int latchPin = A1;  \nconst byte digit[10] = {\n  0b11000000,\n  0b11111001,\n  0b10100100,\n  0b10110000,\n  0b10011001,\n  0b10010010,\n  0b10000010,\n  0b11111000,\n  0b10000000,\n  0b10010000,\n};\nvoid displayDigit(int digitValue) {\n  digitalWrite(latchPin, LOW);\n  shiftOut(dataPin, clockPin, MSBFIRST, digit[digitValue]);\n  digitalWrite(latchPin, HIGH);\n}\nunsigned long previousMillis = -1000;\nconst unsigned long interval = 1000; \nint seconds = -2;\nvoid setup() {\n  pinMode(dataPin, OUTPUT);\n  pinMode(clockPin, OUTPUT);\n  pinMode(latchPin, OUTPUT);\n}\nvoid loop() {\n  unsigned long currentMillis = millis();\n  if(currentMillis - previousMillis >= interval) {\n    previousMillis = currentMillis;\n    seconds += 2;\n    int display = seconds % 10;\n    displayDigit(display);\n  }\n}",
        "hardware_lst": [
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0
        ]
    },
    {
        "id": 15,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two 7-segment displays (sevseg1, sevseg2) using two shift registers (sr1, sr2). The goal is to create a timer that increments by 6 seconds for every real-world second that passes. Once the timer exceeds 99 seconds, it should only display the last two digits.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment displays should show \"0\". The sevseg1 is in the extinguished state and sevseg2 show \"0\".\nTimer Operation: Every real-world second, the timer should increment by 6 seconds. The updated time should be displayed on the 7-segment displays.\nDisplay Rules: If the timer exceeds 99 seconds, only the last two digits of the timer should be displayed on the 7-segment displays. For example, if the timer reaches 102 seconds, the displays should show \"2\".\nThe timer should continue to increment and update the display every second, following the above rules.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int dataPin = A0;   \nconst int clockPin = A2;  \nconst int latchPin = A1;  \nconst byte digit[10] = {\n  0b11000000,\n  0b11111001,\n  0b10100100,\n  0b10110000,\n  0b10011001,\n  0b10010010,\n  0b10000010,\n  0b11111000,\n  0b10000000,\n  0b10010000,\n};\nvoid sendScore(uint8_t high, uint8_t low) {\n  digitalWrite(latchPin, LOW);\n  shiftOut(dataPin, clockPin, MSBFIRST, low);\n  shiftOut(dataPin, clockPin, MSBFIRST, high);\n  digitalWrite(latchPin, HIGH);\n}\nunsigned long previousMillis = -1000;\nconst unsigned long interval = 1000; \nint seconds = -6;\nvoid setup() {\n  pinMode(dataPin, OUTPUT);\n  pinMode(clockPin, OUTPUT);\n  pinMode(latchPin, OUTPUT);\n}\nvoid loop() {\n  unsigned long currentMillis = millis();\n  if(currentMillis - previousMillis >= interval) {\n    previousMillis = currentMillis;\n    seconds += 6;\n    int high = seconds % 100 / 10;\n    int low = seconds % 10;\n    sendScore(high ? digit[high] : 0xff, digit[low]);\n  }\n}",
        "hardware_lst": [
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            2,
            0
        ]
    },
    {
        "id": 16,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two 7-segment displays (sevseg1, sevseg2) using two shift registers (sr1, sr2) and a push button (btn1). The 7-segment displays will show a two-digit number, where one display represents the tens digit and the other represents the units digit. The push button will increment the displayed number by 37 each time it is pressed. If the number exceeds 99, it should reset to 0.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment displays should show \"00\".\nButton Interaction: Each press of the button (btn1) should increment the displayed number by 37. The number should be displayed on the two 7-segment displays, with the tens digit on one display (sevseg1) and the units digit on the other (sevseg2).\nReset Condition: If the number exceeds 99 after incrementing, both displays should reset to \"00\".\nDisplay Update: The 7-segment displays should immediately update to reflect the new number after each button press.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 28.8,
                        "attrs": {
                            "color": "green"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red",
                        []
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray",
                        []
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple",
                        []
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue",
                        []
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red",
                        []
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red",
                        []
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black",
                        []
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black",
                        []
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green",
                        []
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray",
                        []
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple",
                        []
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue",
                        []
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red",
                        []
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red",
                        []
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black",
                        []
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red",
                        []
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green",
                        []
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green",
                        []
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green",
                        []
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green",
                        []
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green",
                        []
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green",
                        []
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green",
                        []
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black",
                        []
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green",
                        []
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int BUTTON_PIN = 2;\nconst byte segmentCodes[] = {\n  0b11000000,\n  0b11111001,\n  0b10100100,\n  0b10110000,\n  0b10011001,\n  0b10010010,\n  0b10000010,\n  0b11111000,\n  0b10000000,\n  0b10010000,\n};\nint currentNumber = 0;\nvoid setup() {\n  Serial.begin(9600);\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(BUTTON_PIN, INPUT_PULLUP); \n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, segmentCodes[0]); \n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, segmentCodes[0]);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid loop() {\n  if (digitalRead(BUTTON_PIN) == LOW) {\n    delay(20); \n    if (digitalRead(BUTTON_PIN) == LOW) {\n      currentNumber += 37;\n      if (currentNumber > 99) {\n        currentNumber = 0;\n      }\n      displayNumber(currentNumber);\n      while (digitalRead(BUTTON_PIN) == LOW); \n    }\n  }\n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            0,
            1,
            0,
            2,
            0,
            0,
            0,
            2,
            0
        ]
    },
    {
        "id": 17,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a red LED (led1), a blue LED (led2), and an RGB LED (rgb1). The goal is to create a sequence where the red LED and the RGB LED display red, followed by the blue LED and the RGB LED displaying blue, in a continuous loop.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the red LED (led1) should be on, the blue LED (led2) should be off, and the RGB LED (rgb1) should display red.\nSequence:\n1. First State: The red LED (led1) is on, the blue LED (led2) is off, and the RGB LED (rgb1) displays red. This state should last for 2 seconds.\n2. Second State: The red LED (led1) turns off, the blue LED (led2) turns on, and the RGB LED (rgb1) displays blue. This state should also last for 2 seconds.\nThe sequence should repeat indefinitely, alternating between the two states every 2 seconds.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71,
                        "attrs": {
                            "color": "red"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black",
                        []
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black",
                        []
                    ],
                    [
                        "mega:3",
                        "rgb1:R",
                        "red",
                        []
                    ],
                    [
                        "mega:4",
                        "rgb1:G",
                        "green",
                        []
                    ],
                    [
                        "mega:5",
                        "rgb1:B",
                        "blue",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black",
                        []
                    ],
                    [
                        "led2:A",
                        "mega:6",
                        "red",
                        []
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "void setup() {\n  pinMode(2, OUTPUT);  \n  pinMode(3, OUTPUT);  \n  pinMode(4, OUTPUT);  \n  pinMode(5, OUTPUT);  \n  pinMode(6, OUTPUT);  \n}\nvoid loop() {\n  digitalWrite(2, HIGH);  \n  digitalWrite(3, HIGH);   \n  digitalWrite(4, LOW);  \n  digitalWrite(5, LOW);   \n  digitalWrite(6, LOW);   \n  delay(2000);            \n  digitalWrite(2, LOW);   \n  digitalWrite(3, LOW);  \n  digitalWrite(4, LOW);   \n  digitalWrite(5, HIGH);   \n  digitalWrite(6, HIGH);  \n  delay(2000);            \n}",
        "hardware_lst": [
            2,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 18,
        "problem": "\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three RGB LEDs (rgb1, rgb2, rgb3) in a specific sequence. The LEDs should cycle through a predefined pattern of colors, with each color being displayed for 2 seconds.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, all RGB LEDs should be off.\nLED Sequence: The LEDs should cycle through the following color patterns in order, with each pattern lasting for 2 seconds:\n1. First Pattern: \n   - LED1 (rgb1) displays red.\n   - LED2 (rgb2) displays blue.\n   - LED3 (rgb3) displays green.\n2. Second Pattern: \n   - LED1 (rgb1) displays green.\n   - LED2 (rgb2) displays red.\n   - LED3 (rgb3) displays blue.\n3. Third Pattern: \n   - LED1 (rgb1) displays blue.\n   - LED2 (rgb2) displays green.\n   - LED3 (rgb3) displays red.\nThis sequence should repeat indefinitely after the third pattern.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb3",
                        "top": -130.4,
                        "left": 154.7,
                        "attrs": {
                            "common": "cathode"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb3:COM",
                        "black"
                    ],
                    [
                        "mega:8",
                        "rgb3:R",
                        "red"
                    ],
                    [
                        "mega:9",
                        "rgb3:G",
                        "green"
                    ],
                    [
                        "mega:10",
                        "rgb3:B",
                        "blue"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int rgb1R = 2; \nconst int rgb1G = 3; \nconst int rgb1B = 4;  \nconst int rgb2R = 5;\nconst int rgb2G = 6;\nconst int rgb2B = 7;\nconst int rgb3R = 8;\nconst int rgb3G = 9;\nconst int rgb3B = 10;\nvoid setup() {\n  pinMode(rgb1R, OUTPUT);\n  pinMode(rgb1G, OUTPUT);\n  pinMode(rgb1B, OUTPUT);\n  pinMode(rgb2R, OUTPUT);\n  pinMode(rgb2G, OUTPUT);\n  pinMode(rgb2B, OUTPUT);\n  pinMode(rgb3R, OUTPUT);\n  pinMode(rgb3G, OUTPUT);\n  pinMode(rgb3B, OUTPUT);\n}\nvoid setLED1Color(int r, int g, int b) {\n  digitalWrite(rgb1R, r);\n  digitalWrite(rgb1G, g);\n  digitalWrite(rgb1B, b);\n}\nvoid setLED2Color(int r, int g, int b) {\n  digitalWrite(rgb2R, r);\n  digitalWrite(rgb2G, g);\n  digitalWrite(rgb2B, b);\n}\nvoid setLED3Color(int r, int g, int b) {\n  digitalWrite(rgb3R, r);\n  digitalWrite(rgb3G, g);\n  digitalWrite(rgb3B, b);\n}\nvoid loop() {\n  setLED1Color(HIGH, LOW, LOW);  \n  setLED2Color(LOW, LOW, HIGH);  \n  setLED3Color(LOW, HIGH, LOW);  \n  delay(2000);\n  setLED1Color(LOW, HIGH, LOW);  \n  setLED2Color(HIGH, LOW, LOW);  \n  setLED3Color(LOW, LOW, HIGH);  \n  delay(2000);\n  setLED1Color(LOW, LOW, HIGH);  \n  setLED2Color(LOW, HIGH, LOW);  \n  setLED3Color(HIGH, LOW, LOW);  \n  delay(2000);\n}",
        "hardware_lst": [
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 19,
        "problem": "\n**Task**:  \nYou are tasked with programming an Arduino (uno) to control an LED (led1) in a specific on-off sequence.  \n\n**Detail Rules**:  \nInitialization: Upon powering on or resetting, the LED should be off.  \nOperation Sequence: The LED should follow a repeating cycle of on and off states with specific durations:  \n1. First, the LED should turn on and remain lit for 1 second.  \n2. Then, the LED should turn off and remain off for 2 seconds.  \n3. Next, the LED should turn on again and remain lit for 3 seconds.  \n4. Finally, the LED should turn off and remain off for 3 seconds.  \nThis sequence should repeat indefinitely.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Arduino.h>\nvoid setup() {\n  pinMode(2, OUTPUT);\n}\nvoid loop() {\n  digitalWrite(2, HIGH);\n  delay(1000);\n  digitalWrite(2, LOW);\n  delay(2000);\n  digitalWrite(2, HIGH);\n  delay(3000);\n  digitalWrite(2, LOW);\n  delay(3000);\n}",
        "hardware_lst": [
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 20,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a servo motor (servo1). The servo motor should sweep its position back and forth between 0° and 180° in increments of 10°, with each position held for 2 seconds before moving to the next.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the servo motor (servo1) should start at the 0° position.\nSweep Operation:\n1. The servo motor should move from 0° to 180° in increments of 10°, holding each position for 2 seconds.\n2. After reaching 180°, the servo motor should reverse direction and move back to 0° in decrements of 10°, again holding each position for 2 seconds.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:2",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nint currentPosition = 0;\nint increment = 10;\nvoid setup() {\n  servo1.attach(2);  \n  servo1.write(currentPosition);  \n}\nvoid loop() {\n  for (currentPosition = 0; currentPosition <= 180; currentPosition += increment) {\n    servo1.write(currentPosition);  \n    delay(2000);  \n  }\n  for (currentPosition = 180; currentPosition >= 0; currentPosition -= increment) {\n    servo1.write(currentPosition);  \n    delay(2000);  \n  }\n}",
        "hardware_lst": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            1
        ]
    },
    {
        "id": 21,
        "problem": "\n\nTask:\nYou are tasked with programming an Arduino (uno) to control three servo motors (servo1, servo2, servo3). The servos should rotate in a synchronized sequence, where each servo moves to a specific angle, pauses for 2 seconds, and then moves to the next angle. The sequence should repeat indefinitely.\n\nDetail Rules:\nInitialization: Upon powering on or resetting, all servos (servo1, servo2, servo3) should start at their 0-degree position.\nSequence of Operation:\n1. Servo1 moves to 0 degrees, Servo2 moves to 0 degrees, and Servo3 moves to 0 degrees. They move immediately and then maintain this position for 2 seconds.\n2. Servo1 moves to 0 degrees, Servo2 moves to 45 degrees, and Servo3 moves to 90 degrees. They move immediately and then maintain this position for 2 seconds.\n3. Servo1 moves to 45 degrees, Servo2 moves to 90 degrees, and Servo3 moves to 135 degrees. They move immediately and then maintain this position for 2 seconds.\n4. Servo1 moves to 90 degrees, Servo2 moves to 135 degrees, and Servo3 moves to 180 degrees. They move immediately and then maintain this position for 2 seconds.\n5. Servo1 moves to 135 degrees, Servo2 moves to 180 degrees, and Servo3 moves to 0 degrees. They move immediately and then maintain this position for 2 seconds.\n6. Servo1 moves to 180 degrees, Servo2 moves to 0 degrees, and Servo3 moves to 45 degrees. They move immediately and then maintain this position for 2 seconds.\n7. The sequence should then repeat from step 2.\nAll servo movements should be smooth.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:2",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:3",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:4",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nServo servo3;\nvoid setup() {\n  servo1.attach(2);  \n  servo2.attach(3);  \n  servo3.attach(4);  \n  servo1.write(0);   \n  servo2.write(0);   \n  servo3.write(0);   \n  delay(2000);       \n}\nvoid loop() {\n  servo1.write(0);\n  servo2.write(45);\n  servo3.write(90);\n  delay(2000);\n  servo1.write(45);\n  servo2.write(90);\n  servo3.write(135);\n  delay(2000);\n  servo1.write(90);\n  servo2.write(135);\n  servo3.write(180);\n  delay(2000);\n  servo1.write(135);\n  servo2.write(180);\n  servo3.write(0);\n  delay(2000);\n  servo1.write(180);\n  servo2.write(0);\n  servo3.write(45);\n  delay(2000);\n}",
        "hardware_lst": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
        ]
    },
    {
        "id": 22,
        "problem": "\n  \n**Task**:  \nYou are tasked with programming an Arduino (uno) to control the color of an RGB LED (rgb1) using three slide potentiometers (pot1, pot2, pot3). Each potentiometer will independently adjust the intensity of one of the RGB LED's color channels (red, green, or blue), allowing the user to mix colors dynamically.  \n\n**Detail Rules**:  \n1. **Initialization**:  \n   - The RGB LED (rgb1) must start in an **off state** when the Arduino is powered on or reset.  \n\n2. **Potentiometer Interaction**:  \n   - The first potentiometer (pot1) controls the **red** channel intensity.  \n   - The second potentiometer (pot2) controls the **green** channel intensity.  \n   - The third potentiometer (pot3) controls the **blue** channel intensity.  \n   - The analog values from the potentiometers (0-1023) must be mapped to the PWM range (0-255) for controlling the LED brightness.  \n\n3. **LED Behavior**:  \n   - The RGB LED (rgb1) must update its color **continuously** based on the current values of the potentiometers.  \n   - If all potentiometers are at their minimum value (0), the LED must remain off.  \n\n4. **Hardware Usage**:  \n   - All components (Arduino, three potentiometers, RGB LED) must be utilized as described.  \n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -408.8,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    }
                ],
                "connections": [
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int RED_PIN = 2;  \nconst int GREEN_PIN = 3;  \nconst int BLUE_PIN = 4;  \nvoid setup() {  \n  pinMode(RED_PIN, OUTPUT);  \n  pinMode(GREEN_PIN, OUTPUT);  \n  pinMode(BLUE_PIN, OUTPUT);  \n  analogWrite(RED_PIN, 0);  \n  analogWrite(GREEN_PIN, 0);  \n  analogWrite(BLUE_PIN, 0);  \n}  \nvoid loop() {  \n  int redValue = analogRead(A3);  \n  int greenValue = analogRead(A4);  \n  int blueValue = analogRead(A5);  \n  analogWrite(RED_PIN, map(redValue, 0, 1023, 0, 255));  \n  analogWrite(GREEN_PIN, map(greenValue, 0, 1023, 0, 255));  \n  analogWrite(BLUE_PIN, map(blueValue, 0, 1023, 0, 255));  \n  delay(20); \n}  ",
        "hardware_lst": [
            0,
            0,
            1,
            0,
            0,
            3,
            0,
            0,
            0
        ]
    },
    {
        "id": 23,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an RGB LED (rgb1) using a slide potentiometer (pot1). The potentiometer will select one of eight predefined colors, which the RGB LED should display based on the potentiometer's position.\n\n**Detail Rules**:\n1. The RGB LED (rgb1) must display one of eight colors corresponding to the potentiometer's (pot1) value divided into eight equal ranges:\n   - **0-127**: All LEDs off  \n   - **128-255**: Red  \n   - **256-383**: Green  \n   - **384-511**: Blue  \n   - **512-639**: Red + Green (Yellow)  \n   - **640-767**: Red + Blue (Magenta)  \n   - **768-895**: Green + Blue (Cyan)  \n   - **896-1023**: All LEDs on (White)  \n2. The displayed color must update immediately when the potentiometer is adjusted to a new range.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    }
                ],
                "connections": [
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int R_PIN = 2;\nconst int G_PIN = 3;\nconst int B_PIN = 4;\nconst int POT_PIN = A3;\nvoid setup() {\n  pinMode(R_PIN, OUTPUT);\n  pinMode(G_PIN, OUTPUT);\n  pinMode(B_PIN, OUTPUT);\n}\nvoid loop() {\n  int potValue = analogRead(POT_PIN);\n  int colorRange = potValue / 128;  \n  digitalWrite(R_PIN, LOW);\n  digitalWrite(G_PIN, LOW);\n  digitalWrite(B_PIN, LOW);\n  switch(colorRange) {\n    case 1:  \n      digitalWrite(R_PIN, HIGH);\n      break;\n    case 2:  \n      digitalWrite(G_PIN, HIGH);\n      break;\n    case 3:  \n      digitalWrite(B_PIN, HIGH);\n      break;\n    case 4:  \n      digitalWrite(R_PIN, HIGH);\n      digitalWrite(G_PIN, HIGH);\n      break;\n    case 5:  \n      digitalWrite(R_PIN, HIGH);\n      digitalWrite(B_PIN, HIGH);\n      break;\n    case 6:  \n      digitalWrite(G_PIN, HIGH);\n      digitalWrite(B_PIN, HIGH);\n      break;\n    case 7:  \n      digitalWrite(R_PIN, HIGH);\n      digitalWrite(G_PIN, HIGH);\n      digitalWrite(B_PIN, HIGH);\n      break;\n  }\n  delay(10);\n}",
        "hardware_lst": [
            0,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0
        ]
    },
    {
        "id": 24,
        "problem": "\n\nTask:\nYou are tasked with programming an Arduino (uno) to control a servo motor (servo1) using three slide potentiometers (pot1, pot2, pot3). The servo motor's position will be determined by the combined input from the three potentiometers. Each potentiometer will control a specific aspect of the servo's behavior: one for the minimum angle, one for the maximum angle, and one for the current position.\n\nDetail Rules:\nInitialization: Upon powering on or resetting, the servo motor (servo1) should be set to its default position (0 degrees).\nPotentiometer Interaction:\n1. The first potentiometer (pot1) determines the minimum angle of the servo motor. The value of pot1 is mapped to a range of 0 to 90 degrees.\n2. The second potentiometer (pot2) determines the maximum angle of the servo motor. The value of pot2 is mapped to a range of 90 to 180 degrees.\n3. The third potentiometer (pot3) controls the current position of the servo motor. The value of pot3 is mapped to the range defined by the minimum (pot1) and maximum (pot2) angles.\n4. The servo motor's position should be updated continuously based on the current values of the potentiometers.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -408.8,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black"
                    ],
                    [
                        "mega:2",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nconst int POT1_PIN = A3;  \nconst int POT2_PIN = A4;  \nconst int POT3_PIN = A5;  \nconst int SERVO_PIN = 2;  \nvoid setup() {\n  servo1.attach(SERVO_PIN);\n  servo1.write(0); \n}\nvoid loop() {\n  int pot1Value = analogRead(POT1_PIN);\n  int pot2Value = analogRead(POT2_PIN);\n  int pot3Value = analogRead(POT3_PIN);\n  int minAngle = map(pot1Value, 0, 1023, 0, 90);\n  int maxAngle = map(pot2Value, 0, 1023, 90, 180);\n  int currentAngle = map(pot3Value, 0, 1023, minAngle, maxAngle);\n  servo1.write(currentAngle);\n  delay(20); \n}",
        "hardware_lst": [
            0,
            0,
            0,
            0,
            0,
            3,
            0,
            0,
            1
        ]
    },
    {
        "id": 25,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three servo motors (servo1, servo2, servo3) using two slide potentiometers (pot1, pot2). The first potentiometer (pot1) will control the angle of the first servo (servo1), while the second potentiometer (pot2) will control the angles of the second and third servos (servo2, servo3) simultaneously. The servos should move smoothly in response to changes in the potentiometer values.\n\n**Detail Rules**:\n1. **Servo Control**:\n   - The first servo (servo1) should be controlled by the first potentiometer (pot1). The angle of servo1 should range from 0° to 180°, corresponding to the potentiometer's value (0 to 1023).\n   - The second and third servos (servo2, servo3) should be controlled by the second potentiometer (pot2). Both servos should move in unison, with their angles ranging from 0° to 180°, corresponding to the potentiometer's value (0 to 1023).\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "mega:2",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:3",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:4",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nServo servo3;\nconst int POT1_PIN = A3;  \nconst int POT2_PIN = A4;  \nconst int SERVO1_PIN = 2; \nconst int SERVO2_PIN = 3; \nconst int SERVO3_PIN = 4; \nvoid setup() {\n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  servo3.attach(SERVO3_PIN);\n}\nvoid loop() {\n  int pot1Value = analogRead(POT1_PIN);  \n  int pot2Value = analogRead(POT2_PIN);  \n  int servo1Angle = map(pot1Value, 0, 1023, 0, 180);  \n  int servo2Angle = map(pot2Value, 0, 1023, 0, 180);  \n  int servo3Angle = map(pot2Value, 0, 1023, 0, 180);  \n  servo1.write(servo1Angle);  \n  servo2.write(servo2Angle);  \n  servo3.write(servo3Angle);  \n  delay(20);  \n}",
        "hardware_lst": [
            0,
            0,
            0,
            0,
            0,
            2,
            0,
            0,
            3
        ]
    },
    {
        "id": 26,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two LED bar graphs (bargraph1, bargraph2). The LED bar graphs will display a pattern where the LEDs light up sequentially from left to right and then from right to left, creating a \"knight rider\" effect. Both bar graphs should synchronize their patterns.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, all LEDs in both bar graphs (bargraph1, bargraph2) should be off.\nPattern Execution:\n1. The LEDs in both bar graphs should light up sequentially from left to right. For bargrapth1, it should start with LED 1 and proceed to LED 10 (pin:A1 to pin:A10). when bargraph1 reaches LED i, bargraph2 should reach with LED i-1. If bargraph1 reaches LED 1, bargraph2 should turn off.\n2. After reaching the rightmost LED (LED 10), the LEDs should light up sequentially from right to left (LED 10 to LED 1) with the same delay.For bargrapth1, it should start with LED 10 and proceed to LED 1 (pin:A10 to pin:A1). when bargraph1 reaches LED i, bargraph2 should reach with LED i-1. If bargraph1 reaches LED 1, bargraph2 should turn off. The time delay between each LED lighting up should be 2 seconds.\n3. This pattern should repeat indefinitely.\nSynchronization: Both bar graphs (bargraph1, bargraph2) must display the same pattern simultaneously.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0.6,
                        "left": -3.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "top": -14.2,
                        "left": 417.6,
                        "attrs": {
                            "color": "lime"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph2",
                        "top": 101,
                        "left": 417.6,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:2",
                        "bargraph1:A1",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black",
                        []
                    ],
                    [
                        "mega:3",
                        "bargraph1:A2",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black",
                        []
                    ],
                    [
                        "mega:4",
                        "bargraph1:A3",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black",
                        []
                    ],
                    [
                        "mega:5",
                        "bargraph1:A4",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black",
                        []
                    ],
                    [
                        "mega:6",
                        "bargraph1:A5",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black",
                        []
                    ],
                    [
                        "mega:7",
                        "bargraph1:A6",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black",
                        []
                    ],
                    [
                        "mega:8",
                        "bargraph1:A7",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black",
                        []
                    ],
                    [
                        "mega:9",
                        "bargraph1:A8",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black",
                        []
                    ],
                    [
                        "mega:10",
                        "bargraph1:A9",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black",
                        []
                    ],
                    [
                        "mega:11",
                        "bargraph1:A10",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black",
                        []
                    ],
                    [
                        "mega:3",
                        "bargraph2:A1",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph2:C1",
                        "black",
                        []
                    ],
                    [
                        "mega:4",
                        "bargraph2:A2",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph2:C2",
                        "black",
                        []
                    ],
                    [
                        "mega:5",
                        "bargraph2:A3",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph2:C3",
                        "black",
                        []
                    ],
                    [
                        "mega:6",
                        "bargraph2:A4",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph2:C4",
                        "black",
                        []
                    ],
                    [
                        "mega:7",
                        "bargraph2:A5",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph2:C5",
                        "black",
                        []
                    ],
                    [
                        "mega:8",
                        "bargraph2:A6",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph2:C6",
                        "black",
                        []
                    ],
                    [
                        "mega:9",
                        "bargraph2:A7",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph2:C7",
                        "black",
                        []
                    ],
                    [
                        "mega:10",
                        "bargraph2:A8",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph2:C8",
                        "black",
                        []
                    ],
                    [
                        "mega:11",
                        "bargraph2:A9",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph2:C9",
                        "black",
                        []
                    ],
                    [
                        "mega:12",
                        "bargraph2:A10",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph2:C10",
                        "black",
                        []
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int ledPins[] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11}; \nconst int numLeds = 10; \nvoid setup() {\n  for (int i = 0; i < numLeds; i++) {\n    pinMode(ledPins[i], OUTPUT); \n    digitalWrite(ledPins[i], LOW); \n  }\n}\nvoid loop() {\n  for (int i = 0; i < numLeds; i++) {\n    digitalWrite(ledPins[i], HIGH); \n    delay(2000); \n    digitalWrite(ledPins[i], LOW); \n  }\n  for (int i = numLeds - 1; i >= 0; i--) {\n    digitalWrite(ledPins[i], HIGH); \n    delay(2000); \n    digitalWrite(ledPins[i], LOW); \n  }\n}",
        "hardware_lst": [
            0,
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 27,
        "problem": "\n\n**Task**:\nProgram the Arduino (uno) to control three servo motors (servo1, servo2, servo3) and a 10-segment LED bar graph (bargraph1). The servos will move in synchronized increments, and the LED bar graph will visually represent the combined position of all servos.\n\n**Detail Rules**:\n1. **Initialization**: All servos start at 0° position, and the LED bar graph (bargraph1) remains off.\n2. **Servo Movement**:\n   - Every 2 seconds, each servo increases its angle by 18° until reaching 180°, then decreases by 18° until reaching 0°, repeating indefinitely.\n3. **LED Display**:\n   - The total of all three servo angles (0-540) is divided into 10 equal ranges (54 units per LED).\n   - The number of lit LEDs corresponds to the current total (e.g., total=162 lights 3 LEDs).\n   - LED lights from pin A1 to A10.\n4. **Synchronization**: All servos update their angles simultaneously every 2 seconds.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:2",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:3",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:4",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nServo servo3;\nint currentAngle = 0;\nint directionFlag = 1;  \nvoid setup() {\n  servo1.attach(2);  \n  servo2.attach(3);  \n  servo3.attach(4);  \n  for (int pin = 5; pin <= 14; pin++) {  \n    pinMode(pin, OUTPUT);\n  }\n  updateServos(0);\n  updateLEDs(0);\n}\nvoid loop() {\n  delay(2000);\n  currentAngle += 18 * directionFlag;\n  if (currentAngle >= 180 || currentAngle <= 0) {\n    directionFlag *= -1;\n  }\n  currentAngle = constrain(currentAngle, 0, 180);\n  updateServos(currentAngle);\n  int total = currentAngle * 3;\n  int leds = total / 54;\n  updateLEDs(leds);\n}\nvoid updateServos(int angle) {\n  servo1.write(angle);\n  servo2.write(angle);\n  servo3.write(angle);\n}\nvoid updateLEDs(int numLeds) {\n  numLeds = constrain(numLeds, 0, 10);\n  for (int i = 5; i <= 14; i++) {  \n    digitalWrite(i, (i - 5) < numLeds ? HIGH : LOW);\n  }\n}",
        "hardware_lst": [
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            3
        ]
    },
    {
        "id": 28,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to synchronize three servo motors (servo1, servo2, servo3) with a 10-segment LED bar graph (bargraph1). The servos must rotate sequentially to their maximum angle, while the LED bar graph visually indicates the progression of their movements. All components must work in a coordinated sequence.\n\n**Detail Rules**:\n1. **Initialization**:  \n   - All servos start at 0° (neutral position).  \n   - All segments of the LED bar graph (bargraph1) remain off.  \n\n2. **Sequential Activation**:  \n   - **Phase 1**:  \n     - Servo1 (servo1) rotates to 180° and keep for 2 seconds.  \n     - The first 3 segments of the LED bar graph(pin:A1 to pin:A3) light up and stay illuminated for 2 seconds.  \n   - **Phase 2**:  \n     - Servo2 (servo2) rotates to 180° and keep for 2 seconds.  \n     - The next 3 segments of the LED bar graph light up (pin:A1 to pin:A6,total 6 segments) and stay illuminated for 2 seconds.  \n   - **Phase 3**:  \n     - Servo3 (servo3) rotates to 180° and keep for 2 seconds.  \n     - The final 4 segments of the LED bar graph light up (pin:A1 to pin:A10,total 10 segments) and stay illuminated for 2 seconds.  \n\n3. **Reset**:  \n   - All servos return to 0° simultaneously.  \n   - All LED segments turn off.  \n   - The system pauses for 2 seconds before restarting the sequence.  \n\n4. **Timing**:  \n   - Each phase (servo movement + LED illumination) must maintain its state for **at least 2 seconds**.  \n   - The reset state must also persist for 2 seconds.  \n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:2",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:3",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:4",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nServo servo3;\nconst int LED_PINS[] = {5, 6, 7, 8, 9, 10, 11, 12, 13, 44};\nvoid setup() {\n  servo1.attach(2);  \n  servo2.attach(3);  \n  servo3.attach(4);  \n  for (int i = 0; i < 10; i++) {\n    pinMode(LED_PINS[i], OUTPUT);\n    digitalWrite(LED_PINS[i], LOW);\n  }\n}\nvoid loop() {\n  servo1.write(180);\n  servo2.write(0);\n  servo3.write(0);\n  for (int i = 0; i < 3; i++) digitalWrite(LED_PINS[i], HIGH);\n  delay(2000);\n  servo2.write(180);\n  for (int i = 3; i < 6; i++) digitalWrite(LED_PINS[i], HIGH);\n  delay(2000);\n  servo3.write(180);\n  for (int i = 6; i < 10; i++) digitalWrite(LED_PINS[i], HIGH);\n  delay(2000);\n  servo1.write(0);\n  servo2.write(0);\n  servo3.write(0);\n  for (int i = 0; i < 10; i++) digitalWrite(LED_PINS[i], LOW);\n  delay(2000);\n}",
        "hardware_lst": [
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            3
        ]
    },
    {
        "id": 29,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 10-segment LED bar graph (bargraph1) using three slide potentiometers (pot1, pot2, pot3). Each potentiometer controls the number of lit LEDs in a specific section of the bar graph, creating a dynamic visual representation of the analog inputs.\n\n**Detail Rules**:\n1. **Section Division**:\n   - The LED bar graph is divided into three sections:\n     - Section 1: First 3 LEDs (controlled by pot1)\n     - Section 2: Next 3 LEDs (controlled by pot2)\n     - Section 3: Last 4 LEDs (controlled by pot3)\n2. **LED Activation**:\n   - Each potentiometer’s value (0-1023) determines the number of LEDs lit in its respective section:\n     - pot1: 0-1023 maps to 0-3 LEDs in Section 1 (pin A1-A3)\n     - pot2: 0-1023 maps to 0-3 LEDs in Section 2 (pin A4-A6)\n     - pot3: 0-1023 maps to 0-4 LEDs in Section 3 (pin A7-A10)\n   - LEDs in each section must light up sequentially from the first LED of the section. For example, if pot1 is set to light 2 LEDs, the first two LEDs of Section 1 should be on.\n3. **Update Behavior**:\n   - The display updates continuously to reflect the current potentiometer values.\n4. **Initial State**:\n   - All LEDs must be off when the system starts or resets.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -408.8,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black"
                    ],
                    [
                        "mega:2",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:3",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "void setup() {\n  for (int pin = 2; pin <= 11; pin++) {\n    pinMode(pin, OUTPUT);  \n    digitalWrite(pin, LOW);  \n  }\n}\nvoid loop() {\n  int pot1Value = analogRead(A3);  \n  int pot2Value = analogRead(A4);  \n  int pot3Value = analogRead(A5);  \n  int ledsSection1 = map(pot1Value, 0, 1023, 0, 3);\n  int ledsSection2 = map(pot2Value, 0, 1023, 0, 3);\n  int ledsSection3 = map(pot3Value, 0, 1023, 0, 4);\n  updateSection(2, 4, ledsSection1);  \n  updateSection(5, 7, ledsSection2);  \n  updateSection(8, 11, ledsSection3);  \n}\nvoid updateSection(int startPin, int endPin, int activeLEDs) {\n  for (int pin = startPin; pin <= endPin; pin++) {\n    bool state = (pin - startPin) < activeLEDs;\n    digitalWrite(pin, state ? HIGH : LOW);\n  }\n}",
        "hardware_lst": [
            0,
            0,
            0,
            0,
            1,
            3,
            0,
            0,
            0
        ]
    },
    {
        "id": 30,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 10-segment LED bar graph (bargraph1) using three slide potentiometers (pot1, pot2, pot3). The potentiometers will define an active range of LEDs and determine how many LEDs within that range are lit.\n\n**Detail Rules**:\n1. **Initialization**: All LEDs in the bar graph (bargraph1) must be off when the system starts.\n2. **Range Definition**:\n   - The first potentiometer (pot1) sets the lower bound of the active range (0-9) of graph (bargraph1). (pins: A1-A10)\n   - The second potentiometer (pot2) sets the upper bound of the active range (0-9) of graph (bargraph1). (pins: A1-A10)\n3. **Fill Control**:\n   - The third potentiometer (pot3) determines the fill percentage (0-100%) within the active range. This percentage dictates how many LEDs between the lower and upper bounds are lit.\n4. **Direction Handling**:\n   - If the lower bound ≤ upper bound, LEDs light up sequentially from the lower to upper bound (both endpoints inclusive) based on the fill percentage.\n   - If the lower bound > upper bound, LEDs light up sequentially from the upper to lower bound (both endpoints inclusive) based on the fill percentage.\n5. **Display Update**:\n   - The LED bar graph updates continuously to reflect changes in potentiometer values.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -408.8,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black"
                    ],
                    [
                        "mega:2",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:3",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "void setup() {\n  for (int pin = 2; pin < 12; pin++) {\n    pinMode(pin, OUTPUT);  \n  }\n}\nvoid loop() {\n  int lower = map(analogRead(A3), 0, 1023, 2, 11);       \n  int upper = map(analogRead(A4), 0, 1023, 2, 11);       \n  int fillPercent = map(analogRead(A5), 0, 1023, 0, 100); \n  int start = min(lower, upper);\n  int end = max(lower, upper);\n  int numLEDs = end - start + 1;\n  int fillCount = round((fillPercent / 100.0) * numLEDs); \n  for (int led = 2; led < 12; led++) {\n    bool isActive = false;\n    if (led >= start && led <= end) {\n      int position = (lower <= upper) ? (led - start) : (end - led);\n      isActive = (position < fillCount);\n    }\n    digitalWrite(led, isActive ? HIGH : LOW); \n  }\n  delay(20); \n}",
        "hardware_lst": [
            0,
            0,
            0,
            0,
            1,
            3,
            0,
            0,
            0
        ]
    },
    {
        "id": 31,
        "problem": "\n\n**Task**:\nProgram the Arduino (uno) to control three servo motors (servo1, servo2, servo3) and a 10-segment LED bar graph (bargraph1) using two slide potentiometers (pot1, pot2). The potentiometers adjust the angles of the servos, while the LED bar visually represents the combined input level.\n\n**Detail Rules**:\n- **Initialization**: All servos start at 0 degrees, and the LED bar (bargraph1) is completely off.\n- **Potentiometer Control**:\n  1. pot1 directly controls the angle of servo1 (servo1) from 0 to 180 degrees.\n  2. pot2 directly controls the angle of servo2 (servo2) from 0 to 180 degrees.\n  3. The average value of pot1 and pot2 (rounded to the nearest integer) determines the angle of servo3 (servo3) from 0 to 180 degrees.\n- **LED Bar Display**: The number of lit segments in the LED bar (bargraph1) corresponds to the average value of the two potentiometers, scaled to 0-10 segments (0 = all off, 10 = all on) (The order of the segments is from pin:A1 to pin:A10).\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "mega:2",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:3",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:4",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nServo servo3;\nvoid setup() {\n  servo1.attach(2);  \n  servo2.attach(3);  \n  servo3.attach(4);  \n  for (int pin = 5; pin <= 13; pin++) {  \n    pinMode(pin, OUTPUT);\n    digitalWrite(pin, LOW);\n  }\n  pinMode(44, OUTPUT);  \n  digitalWrite(44, LOW);\n}\nvoid loop() {\n  int pot1Value = analogRead(A3);  \n  int pot2Value = analogRead(A4);  \n  int angle1 = map(pot1Value, 0, 1023, 0, 180);\n  int angle2 = map(pot2Value, 0, 1023, 0, 180);\n  int avgValue = (pot1Value + pot2Value + 1) / 2;\n  int angle3 = map(avgValue, 0, 1023, 0, 180);\n  servo1.write(angle1);\n  servo2.write(angle2);\n  servo3.write(angle3);\n  int ledSegments = map(avgValue, 0, 1023, 0, 10);\n  for (int i = 5; i <= 13; i++) {  \n    digitalWrite(i, (i - 5) < ledSegments ? HIGH : LOW);  \n  }\n  digitalWrite(44, (10 - 5) < ledSegments ? HIGH : LOW);  \n  delay(20);\n}",
        "hardware_lst": [
            0,
            0,
            0,
            0,
            1,
            2,
            0,
            0,
            3
        ]
    },
    {
        "id": 32,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to synchronize two servo motors (servo1, servo2) and a 10-segment LED bar graph (bargraph1) using a slide potentiometer (pot1). The potentiometer will control the angular position of both servos and the number of illuminated LEDs in the bar graph simultaneously.\n\n**Detail Rules**:\n1. **Initialization**:  \n   - Both servos (servo1, servo2) must start at 0° when powered on.  \n   - All LEDs in the bar graph (bargraph1) must be off initially.  \n\n2. **Potentiometer Control**:  \n   - The slide potentiometer (pot1) value (0-1023) must be linearly mapped to:  \n     - Servo angles: 0° (minimum) to 180° (maximum) for servo1, and 180° to 0° for servo2 (opposite direction).  \n     - Active LEDs: 0 (all off) to 10 (all on) in the bar graph. (from pin A1 to A10) \n\n3. **Synchronization**:  \n   - When the potentiometer is at 0%:  \n     - servo1 = 0°, servo2 = 180°, all LEDs off.  \n   - When the potentiometer is at 50%:  \n     - servo1 = 90°, servo2 = 90°, exactly 5 LEDs lit.  \n   - When the potentiometer is at 100%:  \n     - servo1 = 180°, servo2 = 0°, all LEDs lit.  \n\n4. **LED Behavior**:  \n   - LEDs must light up sequentially from left to right as the potentiometer value increases.  \n   - No flickering or partial brightness is allowed, LEDs must be fully on or off.  \n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "mega:2",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:3",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\n#define POT_PIN A3  \n#define LED_START_PIN 4  \n#define TOTAL_LEDS 10\nServo servo1;\nServo servo2;\nvoid setup() {\n  servo1.attach(2);  \n  servo2.attach(3);  \n  for(int pin = LED_START_PIN; pin < LED_START_PIN + TOTAL_LEDS; pin++) {\n    pinMode(pin, OUTPUT);\n    digitalWrite(pin, LOW);\n  }\n}\nvoid loop() {\n  int potValue = analogRead(POT_PIN);\n  int angle1 = map(potValue, 0, 1023, 0, 180);\n  int angle2 = map(potValue, 0, 1023, 180, 0);\n  servo1.write(angle1);\n  servo2.write(angle2);\n  int ledsToLight = map(potValue, 0, 1023, 0, TOTAL_LEDS);\n  for(int i = 0; i < TOTAL_LEDS; i++) {\n    digitalWrite(LED_START_PIN + i, (i < ledsToLight) ? HIGH : LOW);\n  }\n  delay(20);  \n}",
        "hardware_lst": [
            0,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            2
        ]
    },
    {
        "id": 33,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two 7-segment displays (sevseg1, sevseg2) using two shift registers (sr1, sr2) and three servo motors (servo1, servo2, servo3). The 7-segment displays will show a two-digit number, where one display represents the tens digit and the other represents the units digit. The servos will rotate to specific angles based on the displayed number. The number will increment every 2 seconds, and the servos will update their positions accordingly.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment displays should show \"00\", and all servos (servo1, servo2, servo3) should be at their 0-degree position.\nNumber Increment: Every 2 seconds, the displayed number should increment by 1. If the number exceeds 99, it should reset to 0.\nServo Control: The servos should rotate to specific angles based on the displayed number:\n- Servo1 (servo1) should rotate to an angle equal to the displayed number multiplied by 1.8 (e.g., for number 10, the angle is 18 degrees).\n- Servo2 (servo2) should rotate to an angle equal to the displayed number multiplied by 1.2 (e.g., for number 10, the angle is 12 degrees).\n- Servo3 (servo3) should rotate to an angle equal to the displayed number multiplied by 0.6 (e.g., for number 10, the angle is 6 degrees).\nDisplay Update: The 7-segment displays should immediately update to reflect the new number after each increment.\nServo Update: The servos should immediately update their positions to the new angles after each number increment.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ],
                    [
                        "mega:2",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:3",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:4",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nconst int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nServo servo1;\nServo servo2;\nServo servo3;\nconst byte segmentCodes[] = {\n  0b11000000,\n  0b11111001,\n  0b10100100,\n  0b10110000,\n  0b10011001,\n  0b10010010,\n  0b10000010,\n  0b11111000,\n  0b10000000,\n  0b10010000,\n};\nint currentNumber = 0;\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  servo1.attach(2);  \n  servo2.attach(3);  \n  servo3.attach(4);  \n  displayNumber(currentNumber);\n  updateServos(currentNumber);\n}\nvoid loop() {\n  delay(2000); \n  currentNumber++;\n  if (currentNumber > 99) {\n    currentNumber = 0;\n  }\n  displayNumber(currentNumber);\n  updateServos(currentNumber);\n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateServos(int number) {\n  servo1.write(number * 1.8);\n  servo2.write(number * 1.2);\n  servo3.write(number * 0.6);\n}",
        "hardware_lst": [
            0,
            0,
            0,
            2,
            0,
            0,
            0,
            2,
            3
        ]
    },
    {
        "id": 34,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 7-segment display (sevseg1) and three servo motors (servo1, servo2, servo3). The 7-segment display will show a number that increments from 0 to 9, and each servo motor will rotate to a specific angle based on the displayed number. The servos should move in sequence, with each servo completing its movement before the next one starts.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment display should show \"0\", and all servos (servo1, servo2, servo3) should be at their initial position (0 degrees).\nDisplay and Servo Interaction:\n1. The 7-segment display (sevseg1) will increment its displayed number from 0 to 9, with each number displayed for 2 seconds.\n2. When the number changes, the servos will move to specific angles based on the displayed number:\n   - For numbers 0-2: servo1 moves to 0 degrees, servo2 to 45 degrees, and servo3 to 90 degrees.\n   - For numbers 3-5: servo1 moves to 45 degrees, servo2 to 90 degrees, and servo3 to 135 degrees.\n   - For numbers 6-8: servo1 moves to 90 degrees, servo2 to 135 degrees, and servo3 to 180 degrees.\n   - For number 9: all servos return to 0 degrees.\n3. After reaching 9, the display should reset to 0, and the cycle should repeat.\n4. The servos should move immediately and accurately to their target positions.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "mega:2",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:3",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:4",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nServo servo3;\nconst int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nint currentNumber = 0;\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  servo1.attach(2);  \n  servo2.attach(3);  \n  servo3.attach(4);  \n  servo1.write(0);\n  servo2.write(0);\n  servo3.write(0);\n  displayNumber(currentNumber);\n}\nvoid loop() {\n  for (int i = 0; i <= 9; i++) {\n    currentNumber = i;\n    displayNumber(currentNumber);\n    moveServos(currentNumber);\n    delay(2000);  \n  }\n}\nvoid displayNumber(int number) {\n  byte code = segmentCodes[number];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, code);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid moveServos(int number) {\n  if (number >= 0 && number <= 2) {\n    servo1.write(0); \n    servo2.write(45);\n    servo3.write(90);\n  } else if (number >= 3 && number <= 5) {\n    servo1.write(45);\n    servo2.write(90);\n    servo3.write(135);\n  } else if (number >= 6 && number <= 8) {\n    servo1.write(90);\n    servo2.write(135);\n    servo3.write(180);\n  } else if (number == 9) {\n    servo1.write(0);\n    servo2.write(0);\n    servo3.write(0);\n  }\n}",
        "hardware_lst": [
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            3
        ]
    },
    {
        "id": 35,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two 7-segment displays (sevseg1, sevseg2) using two shift registers (sr1, sr2) and a slide potentiometer (pot1). The 7-segment displays will show a two-digit number, where one display represents the tens digit and the other represents the units digit. The slide potentiometer will control the displayed number, with its value mapped to a range between 0 and 99. The number should update dynamically as the potentiometer is adjusted.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment displays should show \"00\".\nPotentiometer Interaction: The value of the slide potentiometer (pot1) should be mapped to a range between 0 and 99. The mapped value should be displayed on the two 7-segment displays, with the tens digit on one display (sevseg1) and the units digit on the other (sevseg2).\nDisplay Update: The 7-segment displays should update dynamically to reflect the current value of the potentiometer.\nRange Handling: If the potentiometer value maps to a number outside the 0-99 range, the displays should show \"00\".\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int POT_PIN = A3;   \nconst byte segmentCodes[] = {\n  0b11000000,  \n  0b11111001,  \n  0b10100100,  \n  0b10110000,  \n  0b10011001,  \n  0b10010010,  \n  0b10000010,  \n  0b11111000,  \n  0b10000000,  \n  0b10010000,  \n};\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  displayNumber(0); \n}\nvoid loop() {\n  int potValue = analogRead(POT_PIN); \n  int mappedValue = map(potValue, 0, 1023, 0, 99); \n  displayNumber(mappedValue); \n  delay(200); \n}\nvoid displayNumber(int number) {\n  if (number < 0 || number > 99) {\n    number = 0; \n  }\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            0,
            0,
            0,
            2,
            0,
            1,
            0,
            2,
            0
        ]
    },
    {
        "id": 36,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 7-segment display (sevseg1) using a shift register (sr1) and two slide potentiometers (pot1, pot2). The 7-segment display will show a number between 0 and 9, which is determined by the combined values of the two potentiometers. The first potentiometer (pot1) will control the tens digit, and the second potentiometer (pot2) will control the units digit. The displayed number will be the sum of the mapped values of the two potentiometers.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment display should show \"0\".\nPotentiometer Interaction:\n1. The first potentiometer (pot1) will control the first digit. Its value (0 to 1023) will be mapped to a range of 0 to 9.\n2. The second potentiometer (pot2) will control the second digit. Its value (0 to 1023) will also be mapped to a range of 0 to 9.\n3. The displayed number on the 7-segment display will be the sum of the mapped values of the two potentiometers.\n4. If the sum exceeds 9, the display should show the last digit of the sum (e.g., 12 → 2, 15 → 5).\n5. The display should update continuously based on the current values of the potentiometers.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int POT1_PIN = A3;  \nconst int POT2_PIN = A4;  \nconst byte segmentCodes[] = {\n  0b11000000,  \n  0b11111001,  \n  0b10100100,  \n  0b10110000,  \n  0b10011001,  \n  0b10010010,  \n  0b10000010,  \n  0b11111000,  \n  0b10000000,  \n  0b10010000,  \n};\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  displayNumber(0);  \n}\nvoid loop() {\n  int pot1Value = analogRead(POT1_PIN);  \n  int pot2Value = analogRead(POT2_PIN);  \n  int tens = map(pot1Value, 0, 1023, 0, 9);  \n  int units = map(pot2Value, 0, 1023, 0, 9);  \n  int sum = tens + units;  \n  int displayValue = sum % 10;  \n  displayNumber(displayValue);  \n  delay(200);  \n}\nvoid displayNumber(int number) {\n  byte code = segmentCodes[number];  \n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, code);  \n  digitalWrite(STCP_PIN, HIGH);  \n  digitalWrite(STCP_PIN, LOW);  \n}",
        "hardware_lst": [
            0,
            0,
            0,
            1,
            0,
            2,
            0,
            1,
            0
        ]
    },
    {
        "id": 37,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 7-segment display (sevseg1) and three servo motors (servo1, servo2, servo3) using a shift register (sr1) and two slide potentiometers (pot1, pot2). The 7-segment display will show a number between 0 and 9, which is determined by the value of the first potentiometer (pot1). The three servo motors will rotate to angles determined by the second potentiometer (pot2), with each servo representing a different range of angles.\n\n**Detail Rules**:\n1. **7-Segment Display**:\n   - The 7-segment display (sevseg1) should show a number between 0 and 9, mapped from the value of the first potentiometer (pot1). The value of pot1 ranges from 0 to 1023, and it should be mapped to a number between 0 and 9.\n   - The displayed number should update continuously as the potentiometer is adjusted.\n\n2. **Servo Motors**:\n   - The second potentiometer (pot2) controls the angles of the three servo motors (servo1, servo2, servo3).\n   - The value of pot2 ranges from 0 to 1023 and should be mapped to angles as follows:\n     - Servo1 (servo1): 0° to 90°.\n     - Servo2 (servo2): 90° to 180°.\n     - Servo3 (servo3): 180° to 270° (if the servo supports it, otherwise clamp to 180°).\n   - The servos should move smoothly to their respective angles as the potentiometer is adjusted.\n\n3. **State Maintenance**:\n   - Each state of the 7-segment display and servo motors should be maintained for at least 2 seconds to allow for verification.\n\n4. **Hardware Usage**:\n   - All components (7-segment display, shift register, potentiometers, and servos) must be used in the solution.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "mega:2",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:3",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:4",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nconst int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int POT1_PIN = A3;  \nconst int POT2_PIN = A4;  \nServo servo1;\nServo servo2;\nServo servo3;\nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  servo1.attach(2);  \n  servo2.attach(3);  \n  servo3.attach(4);  \n}\nvoid loop() {\n  int pot1Value = analogRead(POT1_PIN);\n  int pot2Value = analogRead(POT2_PIN);\n  int displayNumber = map(pot1Value, 0, 1023, 0, 9);\n  displayNumberOn7Segment(displayNumber);\n  int servo1Angle = map(pot2Value, 0, 1023, 0, 90);\n  int servo2Angle = map(pot2Value, 0, 1023, 90, 180);\n  int servo3Angle = map(pot2Value, 0, 1023, 180, 270);\n  servo1.write(servo1Angle);\n  servo2.write(servo2Angle);\n  servo3.write(servo3Angle);\n  delay(20);  \n}\nvoid displayNumberOn7Segment(int number) {\n  if (number < 0 || number > 9) return;  \n  byte segmentCode = segmentCodes[number];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, segmentCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            0,
            0,
            0,
            1,
            0,
            2,
            0,
            1,
            3
        ]
    },
    {
        "id": 38,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two 7-segment displays (sevseg1, sevseg2) using two shift registers (sr1, sr2), two slide potentiometers (pot1, pot2), and two servo motors (servo1, servo2). The 7-segment displays will show a two-digit number, where one display represents the tens digit (pot1) and the other represents the units digit (pot2). The slide potentiometers will control the angle of the two servo motors (sr1 for servo1, sr2 for servo2), and the 7-segment displays will show the corresponding angles of servo1 in degrees (0-99). The servos should move smoothly to the angles set by the potentiometers, and the displays should update in real-time.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment displays should show \"00\", and both servo motors (servo1, servo2) should be at their 0-degree position.\nPotentiometer Interaction:\n1. The first potentiometer (pot1) controls the angle of the first servo motor (servo1). The value of pot1 is mapped to a range of 0 to 99 degrees.\n2. The second potentiometer (pot2) controls the angle of the second servo motor (servo2). The value of pot2 is also mapped to a range of 0 to 99 degrees.\nDisplay Update: The 7-segment displays should show the current angles of servo1. The tens digit should be displayed on one display (sevseg1), and the units digit should be displayed on the other display (sevseg2).\nServo Movement: The servo motors should move smoothly to the angles set by the potentiometers. The movement should be updated continuously based on the potentiometer values.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "mega:2",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:3",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nconst int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int POT1_PIN = A3;  \nconst int POT2_PIN = A4;  \nconst int SERVO1_PIN = 2; \nconst int SERVO2_PIN = 3; \nServo servo1;\nServo servo2;\nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  displayNumber(0); \n  servo1.write(0);\n  servo2.write(0);\n}\nvoid loop() {\n  int pot1Value = analogRead(POT1_PIN);\n  int pot2Value = analogRead(POT2_PIN);\n  int angle1 = map(pot1Value, 0, 1023, 0, 99);\n  int angle2 = map(pot2Value, 0, 1023, 0, 99);\n  servo1.write(angle1);\n  servo2.write(angle2);\n  displayNumber(angle1); \n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            0,
            0,
            0,
            2,
            0,
            2,
            0,
            2,
            2
        ]
    },
    {
        "id": 39,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 7-segment display (sevseg1) and a 10-segment LED bar graph (bargraph1) using a shift register (sr1). The 7-segment display will show a single digit, and the LED bar graph will visually represent the same number by lighting up a corresponding number of LEDs. The number displayed should increment every 2 seconds, and when it reaches 9, it should reset to 0.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment display (sevseg1) should show \"0\", and the LED bar graph (bargraph1) should have no LEDs lit.\nIncrementing: Every 2 seconds, the number displayed on the 7-segment display (sevseg1) should increment by 1. Simultaneously, the LED bar graph (bargraph1) should light up a number of LEDs equal to the current number (from pin A1 to A10).\nReset Condition: When the number reaches 9, it should reset to 0, and the LED bar graph (bargraph1) should turn off all LEDs.\nDisplay Update: The 7-segment display (sevseg1) and the LED bar graph (bargraph1) should update immediately to reflect the new number.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "mega:2",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:3",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int BARGRAPH_PINS[] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11}; \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nint currentNumber = 0;\nunsigned long lastUpdateTime = 0;\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  for (int i = 0; i < 10; i++) {\n    pinMode(BARGRAPH_PINS[i], OUTPUT);\n    digitalWrite(BARGRAPH_PINS[i], LOW);\n  }\n  displayNumber(currentNumber);\n  updateBarGraph(currentNumber);\n}\nvoid loop() {\n  unsigned long currentTime = millis();\n  if (currentTime - lastUpdateTime >= 2000) {\n    lastUpdateTime = currentTime;\n    currentNumber++;\n    if (currentNumber > 9) {\n      currentNumber = 0;\n    }\n    displayNumber(currentNumber);\n    updateBarGraph(currentNumber);\n  }\n}\nvoid displayNumber(int number) {\n  byte code = segmentCodes[number];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, code);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateBarGraph(int number) {\n  for (int i = 0; i < 10; i++) {\n    digitalWrite(BARGRAPH_PINS[i], (i < number) ? HIGH : LOW);\n  }\n}",
        "hardware_lst": [
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0
        ]
    },
    {
        "id": 40,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to synchronize a 7-segment display (sevseg1) and a 10-LED bar graph (bargraph1) using a shift register (sr1). The system will cycle through values 0 to 9, where the 7-segment displays the numeric value and the bar graph visually represents the same value through illuminated LEDs.\n\n**Detail Rules**:\n1. **Initialization**:  \n   - The 7-segment display (sevseg1) shows \"0\" and the bar graph (bargraph1) has no LEDs lit when the system starts.\n\n2. **Automatic Cycling**:  \n   - The displayed value increments by 1 every 2 seconds. After reaching 9, it resets to 0 and repeats indefinitely.\n\n3. **Display Synchronization**:  \n   - The 7-segment display (sevseg1) must show the current numeric value (0-9) using its segments.\n   - The bar graph (bargraph1) must light up a number of LEDs equal to the current value. For example, if the value is 3, 3 LEDs are lit. (The order of LEDs is from pin:A1 to A10)\n\n4. **Hardware Utilization**:  \n   - The shift register (sr1) must drive the 7-segment display (sevseg1).  \n   - The Arduino (uno) must directly control the bar graph (bargraph1) via its GPIO pins.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "mega:2",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:3",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst byte segmentCodes[10] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nint currentValue = 0;\nunsigned long lastUpdate = 0;\nconst int interval = 2000;\nvoid setup() {\n  for (int pin = 2; pin <= 11; pin++) {\n    pinMode(pin, OUTPUT);\n  }\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  updateDisplays(0); \n}\nvoid loop() {\n  if (millis() - lastUpdate >= interval) {\n    currentValue = (currentValue + 1) % 10;\n    updateDisplays(currentValue);\n    lastUpdate = millis();\n  }\n}\nvoid updateDisplays(int value) {\n  digitalWrite(STCP_PIN, LOW);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, segmentCodes[value]);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n  for (int led = 2; led <= 11; led++) {\n    digitalWrite(led, (led - 2 < value) ? HIGH : LOW);\n  }\n}",
        "hardware_lst": [
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0
        ]
    },
    {
        "id": 41,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two 7-segment displays (sevseg1, sevseg2), a 10-segment LED bar graph (bargraph1), and two servo motors (servo1, servo2). The 7-segment displays will show a two-digit number, the LED bar graph will visually represent the number as a percentage (0-100%), and the servo motors will rotate to positions corresponding to the number. The number will increment every 2 seconds, and the system should reset to 0 after reaching 99.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment displays should show \"00\", the LED bar graph should be off, and both servo motors should be at their 0-degree position.\nNumber Increment: Every 2 seconds, the displayed number should increment by 1. The number should be displayed on the two 7-segment displays, with the tens digit on one display (sevseg1) and the units digit on the other (sevseg2).\nLED Bar Graph: The LED bar graph (bargraph1) should light up a number of LEDs proportional to the displayed number. For example, if the number is 50, 5 LEDs should be lit.\nServo Motors: The two servo motors (servo1, servo2) should rotate to positions corresponding to the displayed number. The angle of each servo should be calculated as (number * 1.8) degrees, providing a range of 0 to 178.2 degrees.\nReset Condition: If the number exceeds 99, it should reset to 0, and all components should update accordingly.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "top": -14.2,
                        "left": 417.6,
                        "attrs": {
                            "color": "lime"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "top": -30.8,
                        "left": -201.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "top": 79.4,
                        "left": -201.6,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red",
                        []
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray",
                        []
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple",
                        []
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue",
                        []
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red",
                        []
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red",
                        []
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black",
                        []
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black",
                        []
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green",
                        []
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray",
                        []
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple",
                        []
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue",
                        []
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red",
                        []
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red",
                        []
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black",
                        []
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red",
                        []
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green",
                        []
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green",
                        []
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green",
                        []
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green",
                        []
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green",
                        []
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green",
                        []
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green",
                        []
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black",
                        []
                    ],
                    [
                        "mega:2",
                        "bargraph1:A1",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black",
                        []
                    ],
                    [
                        "mega:3",
                        "bargraph1:A2",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black",
                        []
                    ],
                    [
                        "mega:4",
                        "bargraph1:A3",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black",
                        []
                    ],
                    [
                        "mega:5",
                        "bargraph1:A4",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black",
                        []
                    ],
                    [
                        "mega:6",
                        "bargraph1:A5",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black",
                        []
                    ],
                    [
                        "mega:7",
                        "bargraph1:A6",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black",
                        []
                    ],
                    [
                        "mega:8",
                        "bargraph1:A7",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black",
                        []
                    ],
                    [
                        "mega:9",
                        "bargraph1:A8",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black",
                        []
                    ],
                    [
                        "mega:10",
                        "bargraph1:A9",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black",
                        []
                    ],
                    [
                        "mega:11",
                        "bargraph1:A10",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black",
                        []
                    ],
                    [
                        "mega:12",
                        "servo1:PWM",
                        "orange",
                        []
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black",
                        []
                    ],
                    [
                        "mega:13",
                        "servo2:PWM",
                        "orange",
                        []
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black",
                        []
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nconst int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int LED_PINS[] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11}; \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nServo servo1;\nServo servo2;\nint currentNumber = 0;\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  for (int i = 0; i < 10; i++) {\n    pinMode(LED_PINS[i], OUTPUT);\n    digitalWrite(LED_PINS[i], LOW);\n  }\n  servo1.attach(12); \n  servo2.attach(13); \n  servo1.write(0);\n  servo2.write(0);\n  displayNumber(currentNumber);\n  updateLEDBarGraph(currentNumber);\n}\nvoid loop() {\n  delay(2000); \n  currentNumber++;\n  if (currentNumber > 99) {\n    currentNumber = 0;\n  }\n  displayNumber(currentNumber);\n  updateLEDBarGraph(currentNumber);\n  updateServos(currentNumber);\n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateLEDBarGraph(int number) {\n  int ledsToLight = map(number, 0, 99, 0, 10); \n  for (int i = 0; i < 10; i++) {\n    digitalWrite(LED_PINS[i], i < ledsToLight ? HIGH : LOW);\n  }\n}\nvoid updateServos(int number) {\n  int angle = 1.8*number; \n  servo1.write(angle);\n  servo2.write(angle);\n}",
        "hardware_lst": [
            0,
            0,
            0,
            2,
            1,
            0,
            0,
            2,
            2
        ]
    },
    {
        "id": 42,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a system that includes two 7-segment displays (sevseg1, sevseg2), a 10-segment LED bar graph (bargraph1), and three servos (servo1, servo2, servo3). The 7-segment displays will show a two-digit number, the LED bar graph will visually represent the number's value, and the servos will rotate to specific angles based on the number. The number will increment by 1 every 2 seconds, and the system should update all components accordingly.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment displays should show \"00\", the LED bar graph should be off, and all servos should be at 0 degrees.\nNumber Increment: Every 2 seconds, the number displayed on the 7-segment displays should increment by 1. If the number exceeds 99, it should reset to 0.\nLED Bar Graph: The LED bar graph (bargraph1) should light up a number of LEDs equal to the tens digit of the current number. For example, if the number is 37, 3 LEDs should be lit.\nServo Control: The servos (servo1, servo2, servo3) should rotate to angles based on the units digit of the current number. The angle for each servo is calculated as follows:\n- servo1: units digit * 18 degrees\n- servo2: units digit * 18 degrees + 60 degrees\n- servo3: units digit * 18 degrees + 120 degrees\nWhen sevseg displays 9, hold this state for 2 seconds, then rotate servo 1, servo 2, servo 3 to 0 degrees.\nDisplay Update: The 7-segment displays, LED bar graph, and servos should update immediately after each number increment.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ],
                    [
                        "mega:2",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:3",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ],
                    [
                        "mega:12",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:13",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:44",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nconst int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int LED_PINS[] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11}; \nServo servo1;\nServo servo2;\nServo servo3;\nint currentNumber = 0;\nunsigned long lastUpdateTime = 0;\nconst unsigned long updateInterval = 2000; \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  for (int i = 0; i < 10; i++) {\n    pinMode(LED_PINS[i], OUTPUT);\n    digitalWrite(LED_PINS[i], LOW);\n  }\n  servo1.attach(12); \n  servo2.attach(13); \n  servo3.attach(44); \n  servo1.write(0);\n  servo2.write(0);\n  servo3.write(0);\n  displayNumber(currentNumber);\n  updateLEDBarGraph(currentNumber);\n  updateServos(currentNumber);\n}\nvoid loop() {\n  unsigned long currentTime = millis();\n  if (currentTime - lastUpdateTime >= updateInterval) {\n    lastUpdateTime = currentTime;\n    currentNumber++;\n    if (currentNumber > 99) {\n      currentNumber = 0;\n    }\n    displayNumber(currentNumber);\n    updateLEDBarGraph(currentNumber);\n    updateServos(currentNumber);\n  }\n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateLEDBarGraph(int number) {\n  int tens = number / 10;\n  for (int i = 0; i < 10; i++) {\n    digitalWrite(LED_PINS[i], i < tens ? HIGH : LOW);\n  }\n}\nvoid updateServos(int number) {\n  int units = number % 10;\n  servo1.write(units * 18);\n  servo2.write(units * 18 + 60);\n  servo3.write(units * 18 + 120);\n}",
        "hardware_lst": [
            0,
            0,
            0,
            2,
            1,
            0,
            0,
            2,
            3
        ]
    },
    {
        "id": 43,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 7-segment display (sevseg1), a 10-segment LED bar graph (bargraph1), and three slide potentiometers (pot1, pot2, pot3). The 7-segment display will show a single digit (0-9), and the LED bar graph will light up a number of segments corresponding to the digit displayed. The slide potentiometers will control the brightness of the LED bar graph and the speed at which the digit changes.\n\n**Detail Rules**:\n1. **7-Segment Display (sevseg1)**:\n   - The display will show a single digit (0-9).\n   - The digit will increment by 1 every 2 seconds, looping back to 0 after 9.\n\n2. **LED Bar Graph (bargraph1)**:\n   - The number of lit segments on the bar graph will correspond to the digit displayed on the 7-segment display. For example, if the digit is 3, 3 segments will light up.\n   - The brightness of the lit segments will be controlled by the first potentiometer (pot1). The brightness value will range from 0 (off) to 255 (maximum brightness).\n\n3. **Slide Potentiometers**:\n   - The first potentiometer (pot1) will control the brightness of the LED bar graph.\n   - The third potentiometer (pot2) will control the speed at which the digit on the 7-segment display changes. The speed will range from 1 second to 2 seconds.\n   - The third potentiometer (pot3) will control the speed at which the digit on the 7-segment display changes. The speed will range from 1 second to 2 seconds.\n   - The final speed will be the sum of the values from pot2 and pot3.\n\n4. **State Maintenance**:\n   - The system should continuously update based on the current values of the potentiometers.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -408.8,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "mega:2",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:3",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int POT1_PIN = A3;  \nconst int POT2_PIN = A4;  \nconst int POT3_PIN = A5;  \nconst int BARGRAPH_PINS[] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11};  \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nint currentDigit = 0;\nunsigned long lastUpdateTime = 0;\nint updateInterval = 2000; \nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  for (int i = 0; i < 10; i++) {\n    pinMode(BARGRAPH_PINS[i], OUTPUT);\n  }\n  displayDigit(currentDigit);\n  updateBarGraph(currentDigit);\n}\nvoid loop() {\n  unsigned long currentTime = millis();\n  int brightness = map(analogRead(POT1_PIN), 0, 1023, 0, 255);\n  int speed2 = map(analogRead(POT2_PIN), 0, 1023, 1000, 2000);\n  int speed3 = map(analogRead(POT3_PIN), 0, 1023, 1000, 2000);\n  updateInterval = speed2+speed3;\n  if (currentTime - lastUpdateTime >= updateInterval) {\n    currentDigit = (currentDigit + 1) % 10;\n    displayDigit(currentDigit);\n    updateBarGraph(currentDigit);\n    lastUpdateTime = currentTime;\n  }\n  for (int i = 0; i < 10; i++) {\n    analogWrite(BARGRAPH_PINS[i], (i < currentDigit) ? brightness : 0);\n  }\n}\nvoid displayDigit(int digit) {\n  byte code = segmentCodes[digit];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, code);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateBarGraph(int digit) {\n  for (int i = 0; i < 10; i++) {\n    digitalWrite(BARGRAPH_PINS[i], (i < digit) ? HIGH : LOW);\n  }\n}",
        "hardware_lst": [
            0,
            0,
            0,
            1,
            1,
            3,
            0,
            1,
            0
        ]
    },
    {
        "id": 44,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two 7-segment displays (sevseg1, sevseg2) and a 10-segment LED bar graph (bargraph1) using a slide potentiometer (pot1) and two shift registers (sr1, sr2). The potentiometer will set a numeric value displayed on the 7-segment displays, while the LED bar graph will visually represent the magnitude of this value.\n\n**Detail Rules**:\n1. **Initialization**:  \n   - On startup, both 7-segment displays show \"00\". \n   - the sevseg1 shows the tens digit and sevseg2 shows the units digit.\n   - All segments of the LED bar graph (bargraph1) must remain off.  \n\n2. **Potentiometer Control**:  \n   - The potentiometer (pot1) determines a value between 0 and 99. This value must be displayed in real-time on the two 7-segment displays, with sevseg1 showing the tens digit and sevseg2 showing the units digit.  \n   - The LED bar graph (bargraph1) must light up a number of segments proportional to the potentiometer value. For example:  \n     - 0-9: 0 LEDs lit  \n     - 10-19: 1 LED lit  \n     - ...  \n     - 90-99: 9 LEDs lit  \n\n3. **Behavior Constraints**:  \n   - The 7-segment displays and LED bar graph must update continuously without noticeable delay as the potentiometer is adjusted.  \n   - If the potentiometer is set to its maximum value (99), all 9 LEDs of the bar graph (indices 0-8) must light up.  \n   - Ensure the system remains responsive to potentiometer changes at all times.  \n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "mega:2",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:3",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Arduino.h>\nconst int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  for (int i = 2; i <= 11; i++) {\n    pinMode(i, OUTPUT);\n    digitalWrite(i, LOW);\n  }\n  updateDisplay(0);\n}\nvoid loop() {\n  int sensorValue = analogRead(A3);\n  int displayValue = map(sensorValue, 0, 1023, 0, 99);\n  updateDisplay(displayValue);\n  updateBarGraph(displayValue);\n  delay(10);\n}\nvoid updateDisplay(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, segmentCodes[ones]);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, segmentCodes[tens]);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateBarGraph(int value) {\n  int ledsToLight = map(value, 0, 99, 0, 10);\n  for (int i = 2; i <= 11; i++) {\n    digitalWrite(i, (i - 2 < ledsToLight) ? HIGH : LOW);\n  }\n}",
        "hardware_lst": [
            0,
            0,
            0,
            2,
            1,
            1,
            0,
            2,
            0
        ]
    },
    {
        "id": 45,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three RGB LEDs (rgb1, rgb2, rgb3) and three servos (servo1, servo2, servo3). The RGB LEDs will cycle through a sequence of colors, and the servos will move to specific angles in sync with the color changes. The system should create a synchronized light and motion display.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, all RGB LEDs should be off, and all servos should be at their 0-degree position.\nColor and Servo Sequence:\n1. The RGB LEDs (rgb1, rgb2, rgb3) will cycle through the following colors in sequence: red, green, blue, yellow, cyan, magenta, and white.\n2. Each color should be displayed for 2 seconds.\n3. When the color changes, the servos (servo1, servo2, servo3) should move to specific angles corresponding to the current color:\n   - Red: Servo1 at 0°, Servo2 at 45°, Servo3 at 90°.\n   - Green: Servo1 at 45°, Servo2 at 90°, Servo3 at 135°.\n   - Blue: Servo1 at 90°, Servo2 at 135°, Servo3 at 180°.\n   - Yellow: Servo1 at 135°, Servo2 at 180°, Servo3 at 0°.\n   - Cyan: Servo1 at 180°, Servo2 at 0°, Servo3 at 45°.\n   - Magenta: Servo1 at 0°, Servo2 at 45°, Servo3 at 90°.\n   - White: Servo1 at 90°, Servo2 at 135°, Servo3 at 180°.\n4. After completing the sequence, the system should repeat the cycle indefinitely.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb3",
                        "top": -130.4,
                        "left": 154.7,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb3:COM",
                        "black"
                    ],
                    [
                        "mega:8",
                        "rgb3:R",
                        "red"
                    ],
                    [
                        "mega:9",
                        "rgb3:G",
                        "green"
                    ],
                    [
                        "mega:10",
                        "rgb3:B",
                        "blue"
                    ],
                    [
                        "mega:11",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:12",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:13",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nServo servo3;\nconst int RGB1_R = 2;\nconst int RGB1_G = 3;\nconst int RGB1_B = 4;\nconst int RGB2_R = 5;\nconst int RGB2_G = 6;\nconst int RGB2_B = 7;\nconst int RGB3_R = 8;\nconst int RGB3_G = 9;\nconst int RGB3_B = 10;\nconst int SERVO1_PIN = 11;\nconst int SERVO2_PIN = 12;\nconst int SERVO3_PIN = 13;\nint currentColorIndex = 0;\nconst int colorSequence[][3] = {\n  {255, 0, 0},   \n  {0, 255, 0},   \n  {0, 0, 255},   \n  {255, 255, 0}, \n  {0, 255, 255}, \n  {255, 0, 255}, \n  {255, 255, 255}\n};\nconst int servoAngles[][3] = {\n  {0, 45, 90},   \n  {45, 90, 135}, \n  {90, 135, 180},\n  {135, 180, 0}, \n  {180, 0, 45},  \n  {0, 45, 90},   \n  {90, 135, 180} \n};\nvoid setup() {\n  pinMode(RGB1_R, OUTPUT);\n  pinMode(RGB1_G, OUTPUT);\n  pinMode(RGB1_B, OUTPUT);\n  pinMode(RGB2_R, OUTPUT);\n  pinMode(RGB2_G, OUTPUT);\n  pinMode(RGB2_B, OUTPUT);\n  pinMode(RGB3_R, OUTPUT);\n  pinMode(RGB3_G, OUTPUT);\n  pinMode(RGB3_B, OUTPUT);\n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  servo3.attach(SERVO3_PIN);\n  setColor(0, 0, 0);\n  moveServos(0, 0, 0);\n}\nvoid loop() {\n  setColor(colorSequence[currentColorIndex][0],\n           colorSequence[currentColorIndex][1],\n           colorSequence[currentColorIndex][2]);\n  moveServos(servoAngles[currentColorIndex][0],\n             servoAngles[currentColorIndex][1],\n             servoAngles[currentColorIndex][2]);\n  delay(2000);\n  currentColorIndex = (currentColorIndex + 1) % 7;\n}\nvoid setColor(int r, int g, int b) {\n  analogWrite(RGB1_R, r);\n  analogWrite(RGB1_G, g);\n  analogWrite(RGB1_B, b);\n  analogWrite(RGB2_R, r);\n  analogWrite(RGB2_G, g);\n  analogWrite(RGB2_B, b);\n  analogWrite(RGB3_R, r);\n  analogWrite(RGB3_G, g);\n  analogWrite(RGB3_B, b);\n}\nvoid moveServos(int angle1, int angle2, int angle3) {\n  servo1.write(angle1);\n  servo2.write(angle2);\n  servo3.write(angle3);\n}",
        "hardware_lst": [
            0,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            3
        ]
    },
    {
        "id": 46,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an RGB LED (rgb1) and three servo motors (servo1, servo2, servo3). The RGB LED will cycle through a sequence of colors, and each servo motor will move to a specific angle based on the current color of the RGB LED. The system should continuously cycle through the color sequence, with each color and corresponding servo positions maintained for at least 2 seconds.\n\n**Detail Rules**:\n1. **RGB LED Sequence**:\n   - The RGB LED (rgb1) should cycle through the following colors in order: Red, Green, Blue, Yellow, Cyan, Magenta, White.\n   - Each color should be displayed for 2 seconds before transitioning to the next color.\n\n2. **Servo Motor Behavior**:\n   - When the RGB LED is Red, servo1 should move to 0°, servo2 to 90°, and servo3 to 180°.\n   - When the RGB LED is Green, servo1 should move to 90°, servo2 to 180°, and servo3 to 0°.\n   - When the RGB LED is Blue, servo1 should move to 180°, servo2 to 0°, and servo3 to 90°.\n   - When the RGB LED is Yellow, servo1 should move to 45°, servo2 to 135°, and servo3 to 225° (if supported, otherwise 180°).\n   - When the RGB LED is Cyan, servo1 should move to 135°, servo2 to 225° (if supported, otherwise 180°), and servo3 to 45°.\n   - When the RGB LED is Magenta, servo1 should move to 225° (if supported, otherwise 180°), servo2 to 45°, and servo3 to 135°.\n   - When the RGB LED is White, all servos should return to their initial positions: servo1 to 0°, servo2 to 90°, and servo3 to 180°.\n\n3. **Timing**:\n   - Each color and corresponding servo positions should be maintained for 2 seconds before transitioning to the next state.\n\n4. **Hardware Usage**:\n   - The RGB LED (rgb1) and all three servo motors (servo1, servo2, servo3) must be used in the solution.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:5",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:6",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:7",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nServo servo3;\nconst int redPin = 2;    \nconst int greenPin = 3;  \nconst int bluePin = 4;   \nvoid setup() {\n  pinMode(redPin, OUTPUT);\n  pinMode(greenPin, OUTPUT);\n  pinMode(bluePin, OUTPUT);\n  servo1.attach(5);  \n  servo2.attach(6);  \n  servo3.attach(7);  \n  servo1.write(0);\n  servo2.write(90);\n  servo3.write(180);\n}\nvoid loop() {\n  setColor(255, 0, 0);\n  moveServos(0, 90, 180);\n  delay(2000);\n  setColor(0, 255, 0);\n  moveServos(90, 180, 0);\n  delay(2000);\n  setColor(0, 0, 255);\n  moveServos(180, 0, 90);\n  delay(2000);\n  setColor(255, 255, 0);\n  moveServos(45, 135, 180);\n  delay(2000);\n  setColor(0, 255, 255);\n  moveServos(135, 180, 45);\n  delay(2000);\n  setColor(255, 0, 255);\n  moveServos(180, 45, 135);\n  delay(2000);\n  setColor(255, 255, 255);\n  moveServos(0, 90, 180);\n  delay(2000);\n}\nvoid setColor(int red, int green, int blue) {\n  analogWrite(redPin, red);\n  analogWrite(greenPin, green);\n  analogWrite(bluePin, blue);\n}\nvoid moveServos(int angle1, int angle2, int angle3) {\n  servo1.write(angle1);\n  servo2.write(angle2);\n  servo3.write(angle3);\n}",
        "hardware_lst": [
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            3
        ]
    },
    {
        "id": 47,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control the colors of two RGB LEDs (rgb1, rgb2) using two slide potentiometers (pot1, pot2). The first potentiometer (pot1) will control the color of the first RGB LED (rgb1), while the second potentiometer (pot2) will control the color of the second RGB LED (rgb2). The potentiometers will determine the hue of the RGB LEDs, and the colors should change smoothly as the potentiometers are adjusted.\n\n**Detail Rules**:\n1. **Initialization**: Upon powering on or resetting, both RGB LEDs (rgb1, rgb2) should be off.\n2. **Potentiometer Interaction**:\n   - The first potentiometer (pot1) will control the hue of the first RGB LED (rgb1). The value of pot1 (0 to 1023) will be mapped to a hue value between 0 and 360 degrees.\n   - The second potentiometer (pot2) will control the hue of the second RGB LED (rgb2). The value of pot2 (0 to 1023) will also be mapped to a hue value between 0 and 360 degrees.\n3. **Color Calculation**:\n   - The hue value from each potentiometer will be converted to RGB values using the HSV-to-RGB conversion algorithm.\n   - The saturation and value (brightness) of the RGB values will be set to 1 (maximum saturation brightness).\n   - The RGB values will be used to set the brightness of the corresponding RGB LED.\n4. **LED Update**:\n   - The colors of the RGB LEDs should update continuously as the potentiometers are adjusted.\n5. **Smooth Transition**:\n   - The transition between colors should be smooth, with no abrupt changes in brightness or color.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "void hsvToRgb(float h, float s, float v, int &r, int &g, int &b) {\n  int i = int(h / 60) % 6;\n  float f = (h / 60) - i;\n  float p = v * (1 - s);\n  float q = v * (1 - f * s);\n  float t = v * (1 - (1 - f) * s);\n  switch (i) {\n    case 0: r = v * 255; g = t * 255; b = p * 255; break;\n    case 1: r = q * 255; g = v * 255; b = p * 255; break;\n    case 2: r = p * 255; g = v * 255; b = t * 255; break;\n    case 3: r = p * 255; g = q * 255; b = v * 255; break;\n    case 4: r = t * 255; g = p * 255; b = v * 255; break;\n    case 5: r = v * 255; g = p * 255; b = q * 255; break;\n  }\n}\nvoid setup() {\n  pinMode(2, OUTPUT);  \n  pinMode(3, OUTPUT);  \n  pinMode(4, OUTPUT);  \n  pinMode(5, OUTPUT);  \n  pinMode(6, OUTPUT);  \n  pinMode(7, OUTPUT);  \n}\nvoid loop() {\n  int pot1Value = analogRead(A3);  \n  int pot2Value = analogRead(A4);  \n  float hue1 = map(pot1Value, 0, 1023, 0, 360);\n  float hue2 = map(pot2Value, 0, 1023, 0, 360);\n  int r1, g1, b1;\n  hsvToRgb(hue1, 1.0, 1.0, r1, g1, b1);\n  analogWrite(2, r1);  \n  analogWrite(3, g1);  \n  analogWrite(4, b1);  \n  int r2, g2, b2;\n  hsvToRgb(hue2, 1.0, 1.0, r2, g2, b2);\n  analogWrite(5, r2);  \n  analogWrite(6, g2);  \n  analogWrite(7, b2);  \n}",
        "hardware_lst": [
            0,
            0,
            2,
            0,
            0,
            2,
            0,
            0,
            0
        ]
    },
    {
        "id": 48,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three RGB LEDs (rgb1, rgb2, rgb3), three servos (servo1, servo2, servo3), and two slide potentiometers (pot1, pot2). The RGB LEDs will display colors based on the values of the potentiometers, and the servos will rotate to positions corresponding to the potentiometer values. The system should dynamically update the colors and servo positions as the potentiometers are adjusted.\n\n**Detail Rules**:\n1. **RGB LEDs**:\n   - The first potentiometer (pot1) controls the red component of all three RGB LEDs (rgb1, rgb2, rgb3). The value of pot1 is mapped to a range of 0 to 255 for the red component.\n   - The second potentiometer (pot2) controls the green component of all three RGB LEDs (rgb1, rgb2, rgb3). The value of pot2 is mapped to a range of 0 to 255 for the green component.\n   - The blue component of all three RGB LEDs is fixed at 0 (turned off).\n   - The RGB LEDs should update their colors continuously based on the current values of the potentiometers.\n\n2. **Servos**:\n   - The first potentiometer (pot1) controls the position of the first servo (servo1). The value of pot1 is mapped to a range of 0 to 180 degrees.\n   - The second potentiometer (pot2) controls the position of the second servo (servo2). The value of pot2 is mapped to a range of 0 to 180 degrees.\n   - The third servo (servo3) should alternate between 0 and 180 degrees every 2 seconds, independent of the potentiometers.\n   - The servos should update their positions continuously based on the current values of the potentiometers or the alternating logic for servo3.\n\n3. **System Behavior**:\n   - The RGB LEDs and servos should update their states every 100 milliseconds to ensure smooth transitions.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb3",
                        "top": -130.4,
                        "left": 154.7,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb3:COM",
                        "black"
                    ],
                    [
                        "mega:8",
                        "rgb3:R",
                        "red"
                    ],
                    [
                        "mega:9",
                        "rgb3:G",
                        "green"
                    ],
                    [
                        "mega:10",
                        "rgb3:B",
                        "blue"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "mega:11",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:12",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:13",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nServo servo3;\nvoid setup() {\n  pinMode(2, OUTPUT);  \n  pinMode(3, OUTPUT);  \n  pinMode(4, OUTPUT);  \n  pinMode(5, OUTPUT);  \n  pinMode(6, OUTPUT);  \n  pinMode(7, OUTPUT);  \n  pinMode(8, OUTPUT);  \n  pinMode(9, OUTPUT);  \n  pinMode(10, OUTPUT);  \n  servo1.attach(11);    \n  servo2.attach(12);   \n  servo3.attach(13);   \n  servo3.write(0);     \n}\nvoid loop() {\n  int pot1Value = analogRead(A3);  \n  int pot2Value = analogRead(A4);  \n  int red = map(pot1Value, 0, 1023, 0, 255);\n  int green = map(pot2Value, 0, 1023, 0, 255);\n  int blue = 0;  \n  analogWrite(2, red);    \n  analogWrite(3, green);  \n  analogWrite(4, blue);   \n  analogWrite(5, red);    \n  analogWrite(6, green);  \n  analogWrite(7, blue);   \n  analogWrite(8, red);    \n  analogWrite(9, green);  \n  analogWrite(10, blue);   \n  int servo1Pos = map(pot1Value, 0, 1023, 0, 180);\n  int servo2Pos = map(pot2Value, 0, 1023, 0, 180);\n  servo1.write(servo1Pos);\n  servo2.write(servo2Pos);\n  static unsigned long lastToggleTime = 0;\n  static int servo3Pos = 0;\n  if (millis() - lastToggleTime >= 2000) {\n    servo3Pos = (servo3Pos == 0) ? 180 : 0;\n    servo3.write(servo3Pos);\n    lastToggleTime = millis();\n  }\n  delay(100);  \n}",
        "hardware_lst": [
            0,
            0,
            3,
            0,
            0,
            2,
            0,
            0,
            3
        ]
    },
    {
        "id": 49,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two RGB LEDs (rgb1, rgb2), three servos (servo1, servo2, servo3), and a slide potentiometer (pot1). The slide potentiometer will control the color of the RGB LEDs and the positions of the servos. The RGB LEDs will display a color gradient based on the potentiometer's value, and the servos will rotate to positions corresponding to the potentiometer's value.\n\n**Detail Rules**:\n1. **RGB LEDs (rgb1, rgb2)**:\n   - The potentiometer's value (0 to 1023) will determine the color of the RGB LEDs.\n   - The red, green, and blue components of the RGB LEDs will be mapped to the potentiometer's value as follows:\n     - Red: Increases from 0 to 255 as the potentiometer value increases from 0 to 341.\n     - Green: Increases from 0 to 255 as the potentiometer value increases from 342 to 682.\n     - Blue: Increases from 0 to 255 as the potentiometer value increases from 683 to 1023.\n   - Both RGB LEDs (rgb1, rgb2) should display the same color at all times.\n\n2. **Servos (servo1, servo2, servo3)**:\n   - The potentiometer's value will determine the angle of each servo.\n   - The servos will rotate to angles mapped from the potentiometer's value (0 to 1023) to a range of 0 to 180 degrees.\n   - Each servo should maintain its position for at least 2 seconds before updating to a new position.\n\n3. **Potentiometer (pot1)**:\n   - The potentiometer's value will be read continuously, and the RGB LEDs and servos will update their states accordingly.\n   - The system should respond immediately to changes in the potentiometer's value.\n\n4. **Initialization**:\n   - On startup, the RGB LEDs should display a color corresponding to the potentiometer's initial value, and the servos should move to their initial positions.\n\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "mega:8",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:9",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:10",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nServo servo3;\nconst int POT_PIN = A3;  \nconst int RGB1_RED_PIN = 2;  \nconst int RGB1_GREEN_PIN = 3;  \nconst int RGB1_BLUE_PIN = 4;  \nconst int RGB2_RED_PIN = 5;  \nconst int RGB2_GREEN_PIN = 6;  \nconst int RGB2_BLUE_PIN = 7;  \nconst int SERVO1_PIN = 8;  \nconst int SERVO2_PIN = 9;  \nconst int SERVO3_PIN = 10;  \nvoid setup() {\n  pinMode(RGB1_RED_PIN, OUTPUT);\n  pinMode(RGB1_GREEN_PIN, OUTPUT);\n  pinMode(RGB1_BLUE_PIN, OUTPUT);\n  pinMode(RGB2_RED_PIN, OUTPUT);\n  pinMode(RGB2_GREEN_PIN, OUTPUT);\n  pinMode(RGB2_BLUE_PIN, OUTPUT);\n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  servo3.attach(SERVO3_PIN);\n  updateSystem(analogRead(POT_PIN));\n}\nvoid loop() {\n  int potValue = analogRead(POT_PIN);\n  updateSystem(potValue);\n}\nvoid updateSystem(int potValue) {\n  int red, green, blue;\n  if (potValue <= 341) {\n    red = map(potValue, 0, 341, 0, 255);\n    green = 0;\n    blue = 0;\n  } else if (potValue <= 682) {\n    red = 255;\n    green = map(potValue, 342, 682, 0, 255);\n    blue = 0;\n  } else {\n    red = 255;\n    green = 255;\n    blue = map(potValue, 683, 1023, 0, 255);\n  }\n  analogWrite(RGB1_RED_PIN, red);\n  analogWrite(RGB1_GREEN_PIN, green);\n  analogWrite(RGB1_BLUE_PIN, blue);\n  analogWrite(RGB2_RED_PIN, red);\n  analogWrite(RGB2_GREEN_PIN, green);\n  analogWrite(RGB2_BLUE_PIN, blue);\n  int servoAngle = map(potValue, 0, 1023, 0, 180);\n  servo1.write(servoAngle);\n  servo2.write(servoAngle);\n  servo3.write(servoAngle);\n}",
        "hardware_lst": [
            0,
            0,
            2,
            0,
            0,
            1,
            0,
            0,
            3
        ]
    },
    {
        "id": 50,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an LED bar graph (bargraph1) and two RGB LEDs (rgb1, rgb2). The bar graph will display a sequential pattern, while the RGB LEDs will change colors based on the active segment of the bar graph.\n\n**Detail Rules**:\n1. **Initialization**: All components start in an off state when powered on or reset.\n2. **Bar Graph Sequence**:\n   - The bar graph (bargraph1) lights up LEDs sequentially from A1 to A8, one at a time.\n   - Each LED remains lit for **2 seconds** before moving to the next.\n   - After reaching A8, the sequence restarts from A1.\n3. **RGB LED Behavior**:\n   - When LEDs A1-A4 are lit, rgb1 must display **red** and rgb2 must display **blue**.\n   - When LEDs A5-A8 are lit, rgb1 must display **green** and rgb2 must display **yellow** (red + green).\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:45",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int BAR_PINS[] = {8, 9, 10, 11, 12, 13, 44, 45};  \nvoid setup() {\n  for (int i = 0; i < 8; i++) {\n    pinMode(BAR_PINS[i], OUTPUT);\n  }\n  for (int pin = 2; pin <= 7; pin++) {  \n    pinMode(pin, OUTPUT);\n  }\n}\nvoid loop() {\n  for (int i = 0; i < 8; i++) {\n    digitalWrite(BAR_PINS[i], HIGH);\n    if (i < 4) {  \n      digitalWrite(2, HIGH);  \n      digitalWrite(3, LOW);\n      digitalWrite(4, LOW);\n      digitalWrite(5, LOW);\n      digitalWrite(6, LOW);\n      digitalWrite(7, HIGH);\n    } else {      \n      digitalWrite(2, LOW);\n      digitalWrite(3, HIGH);\n      digitalWrite(4, LOW);\n      digitalWrite(5, HIGH);\n      digitalWrite(6, HIGH);\n      digitalWrite(7, LOW);\n    }\n    delay(2000);  \n    digitalWrite(BAR_PINS[i], LOW);\n  }\n}",
        "hardware_lst": [
            0,
            0,
            2,
            0,
            1,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 51,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to create a synchronized light show using three RGB LEDs (rgb1, rgb2, rgb3) and a 5-segment LED bar graph (bargraph1). The system will cycle through five distinct phases, each controlling the RGB LEDs' colors and the bar graph's active segments.\n\n**Detail Rules**:\n1. **Phase Cycle**:\n   - **Phase 1 (2 seconds)**: RGB1 (rgb1) displays red, and the bar graph (bargraph1) lights up 1 segment.\n   - **Phase 2 (2 seconds)**: RGB2 (rgb2) displays green, and the bar graph lights up 2 segments.\n   - **Phase 3 (2 seconds)**: RGB3 (rgb3) displays blue, and the bar graph lights up 3 segments.\n   - **Phase 4 (2 seconds)**: RGB1 (red) and RGB2 (green) are both active, and the bar graph lights up 4 segments.\n   - **Phase 5 (2 seconds)**: All three RGB LEDs (rgb1, rgb2, rgb3) display white, and the bar graph lights up all 5 segments.\n   - note: bar graph lights up from pin:A1 to pin:A5\n2. **Looping**: After Phase 5, the sequence restarts from Phase 1 indefinitely.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb3",
                        "top": -130.4,
                        "left": 164.3,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "top": -14.2,
                        "left": 417.6,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black",
                        []
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red",
                        []
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green",
                        []
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black",
                        []
                    ],
                    [
                        "mega:5",
                        "rgb2:R",
                        "red",
                        []
                    ],
                    [
                        "mega:6",
                        "rgb2:G",
                        "green",
                        []
                    ],
                    [
                        "mega:7",
                        "rgb2:B",
                        "blue",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "rgb3:COM",
                        "black",
                        []
                    ],
                    [
                        "mega:8",
                        "rgb3:R",
                        "red",
                        []
                    ],
                    [
                        "mega:9",
                        "rgb3:G",
                        "green",
                        []
                    ],
                    [
                        "mega:10",
                        "rgb3:B",
                        "blue",
                        []
                    ],
                    [
                        "mega:11",
                        "bargraph1:A1",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black",
                        []
                    ],
                    [
                        "mega:12",
                        "bargraph1:A2",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black",
                        []
                    ],
                    [
                        "mega:13",
                        "bargraph1:A3",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black",
                        []
                    ],
                    [
                        "mega:44",
                        "bargraph1:A4",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black",
                        []
                    ],
                    [
                        "mega:45",
                        "bargraph1:A5",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black",
                        []
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int PHASE_DURATION = 2000;  \nunsigned long phaseStartTime = 0;\nint currentPhase = -1;\nvoid setup() {\n  int pins[] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 44, 45};\n  for (int i = 0; i < sizeof(pins)/sizeof(pins[0]); i++) {\n    pinMode(pins[i], OUTPUT);\n    digitalWrite(pins[i], LOW);\n  }\n  phaseStartTime = millis() - 2000;\n}\nvoid loop() {\n  if (millis() - phaseStartTime >= PHASE_DURATION) {\n    currentPhase = (currentPhase + 1) % 5;\n    phaseStartTime = millis();\n    updateHardware();\n  }\n}\nvoid updateHardware() {\n  int pins[] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 44, 45};\n  for (int i = 0; i < sizeof(pins)/sizeof(pins[0]); i++) {\n    digitalWrite(pins[i], LOW);\n  }\n  switch (currentPhase) {\n    case 0:  \n      digitalWrite(2, HIGH);  \n      digitalWrite(11, HIGH);  \n      break;\n    case 1:  \n      digitalWrite(6, HIGH);  \n      digitalWrite(11, HIGH);  \n      digitalWrite(12, HIGH); \n      break;\n    case 2:  \n      digitalWrite(10, HIGH);  \n      digitalWrite(11, HIGH);  \n      digitalWrite(12, HIGH); \n      digitalWrite(13, HIGH); \n      break;\n    case 3:  \n      digitalWrite(2, HIGH);  \n      digitalWrite(6, HIGH);  \n      digitalWrite(11, HIGH);  \n      digitalWrite(12, HIGH); \n      digitalWrite(13, HIGH); \n      digitalWrite(44, HIGH); \n      break;\n    case 4:  \n      for (int pin = 2; pin <= 10; pin++) digitalWrite(pin, HIGH);  \n      for (int pin = 11; pin <= 13; pin++) digitalWrite(pin, HIGH); \n      digitalWrite(44, HIGH); \n      digitalWrite(45, HIGH); \n      break;\n  }\n}",
        "hardware_lst": [
            0,
            0,
            3,
            0,
            1,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 52,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to synchronize two servo motors (servo1, servo2), two RGB LEDs (rgb1, rgb2), and a 6-segment LED bar graph (bargraph1). The servos will rotate in fixed increments, while the RGB LEDs and bar graph dynamically reflect their positions.\n\n**Detail Rules**:\n1. **Initialization**: \n   - Both servos (servo1, servo2) start at 0°.\n   - Both RGB LEDs (rgb1, rgb2) remain off.\n   - The bar graph (bargraph1) shows no lit LEDs.\n\n2. **Servo Motion**:\n   - Every 2 seconds, both servos increment their angles by 30° simultaneously.\n   - After reaching 180°, both servos reset to 0° and repeat the cycle.\n\n3. **RGB LED Behavior**:\n   - rgb1 show red color.\n   - rgb2 show blue color.\n\n4. **Bar Graph Display**:\n   - The number of lit LEDs corresponds to the average angle of the servos. When the servos at [0°, 90°], the first RGB LED is lit. When at (90°, 180°], both RGB LEDs are lit.\n   - All LEDs reset when the servos return to 0°.\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:8",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:9",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:45",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nvoid setup() {\n  servo1.attach(8);  \n  servo2.attach(9);  \n  for (int pin = 2; pin <= 5; pin++) {  \n    pinMode(pin, OUTPUT);\n  }\n  for (int pin = 10; pin <= 13; pin++) {  \n    pinMode(pin, OUTPUT);\n  }\n  pinMode(44, OUTPUT);  \n  pinMode(45, OUTPUT);  \n}\nvoid loop() {\n  static int angle = 0;\n  servo1.write(angle);\n  servo2.write(angle);\n  analogWrite(2, 255);  \n  analogWrite(3, 0);    \n  analogWrite(4, 0);    \n  if (angle > 90){\n    analogWrite(5, 0);  \n    analogWrite(6, 0);    \n    analogWrite(7, 255);    \n  }else{\n    analogWrite(5, 0);    \n    analogWrite(6, 0);    \n    analogWrite(7, 0);    \n  }\n  int litLEDs = angle / 30;\n  int pins[] = {10, 11, 12, 13, 44, 45};\n  for (int i = 0; i < 6; i++) {\n      digitalWrite(pins[i], (i < litLEDs) ? HIGH : LOW);\n  }\n  delay(2000);\n  angle = (angle >= 180) ? 0 : angle + 30;\n}",
        "hardware_lst": [
            0,
            0,
            2,
            0,
            1,
            0,
            0,
            0,
            2
        ]
    },
    {
        "id": 53,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to create a dynamic lighting system using an RGB LED (rgb1), three servo motors (servo1, servo2, servo3), and an LED bar graph (bargraph1). The RGB LED's color and the bar graph's illumination level must be determined by the angular positions of the servos. \n\n**Detail Rules**:\n1. **Initialization**:  \n   - All servos start at 0° position.  \n   - The RGB LED (rgb1) and bar graph (bargraph1) are initially off.  \n\n2. **Servo Control**:  \n   - Servo1 controls the **red** channel of the RGB LED.  \n   - Servo2 controls the **green** channel.  \n   - Servo3 controls the **blue** channel.  \n   - Each servo's angle (0°–180°) maps linearly to its corresponding RGB channel's brightness (0–255).  \n   - Every 2 seconds, one servo move 180°, the order is servo1 -> servo2 -> servo3 -> servo1 ... if the servo is at 0°, it will move to 180°, if it is at 180°, it will move to 0°.\n\n3. **LED Bar Graph**:  \n   - The bar graph (bargraph1) displays the **average brightness** of the RGB LED.  \n   - The average brightness is calculated as `(R + G + B) / 3` and mapped to light 0–8 LEDs on the bar graph. (from pin:A1 to pin:A8)\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:5",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:6",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:7",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:45",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nServo servo3;\nconst int servo1Pin = 5;  \nconst int servo2Pin = 6;  \nconst int servo3Pin = 7;  \nconst int redPin = 2;    \nconst int greenPin = 3;   \nconst int bluePin = 4;    \nconst int barPins[] = {8, 9, 10, 11, 12, 13, 44, 45};  \nconst int numLEDs = 8;\nint currentServoIndex = 0;\nint servoAngles[] = {0, 0, 0};\nunsigned long previousMillis = 0;\nconst long interval = 2000;\nvoid setup() {\n  servo1.attach(servo1Pin);\n  servo2.attach(servo2Pin);\n  servo3.attach(servo3Pin);\n  servo1.write(0);\n  servo2.write(0);\n  servo3.write(0);\n  pinMode(redPin, OUTPUT);\n  pinMode(greenPin, OUTPUT);\n  pinMode(bluePin, OUTPUT);\n  analogWrite(redPin, 0);\n  analogWrite(greenPin, 0);\n  analogWrite(bluePin, 0);\n  for (int i = 0; i < numLEDs; i++) {\n    pinMode(barPins[i], OUTPUT);\n    digitalWrite(barPins[i], LOW);\n  }\n}\nvoid loop() {\n  unsigned long currentMillis = millis();\n  if (currentMillis - previousMillis >= interval) {\n    previousMillis = currentMillis;\n    servoAngles[currentServoIndex] = (servoAngles[currentServoIndex] == 0) ? 180 : 0;\n    switch (currentServoIndex) {\n      case 0: servo1.write(servoAngles[0]); break;\n      case 1: servo2.write(servoAngles[1]); break;\n      case 2: servo3.write(servoAngles[2]); break;\n    }\n    currentServoIndex = (currentServoIndex + 1) % 3;\n  }\n  int r = map(servoAngles[0], 0, 180, 0, 255);\n  int g = map(servoAngles[1], 0, 180, 0, 255);\n  int b = map(servoAngles[2], 0, 180, 0, 255);\n  analogWrite(redPin, r);\n  analogWrite(greenPin, g);\n  analogWrite(bluePin, b);\n  int avg = (r + g + b) / 3;\n  int ledCount = map(avg, 0, 255, 0, 8);\n  ledCount = constrain(ledCount, 0, 8);\n  for (int i = 0; i < numLEDs; i++) {\n    digitalWrite(barPins[i], (i < ledCount) ? HIGH : LOW);\n  }\n}",
        "hardware_lst": [
            0,
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            3
        ]
    },
    {
        "id": 54,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to create an interactive color mixer and visualizer using an RGB LED (rgb1), a slide potentiometer (pot1), and a 10-segment LED bar graph (bargraph1). The potentiometer controls the intensity of individual RGB color components, while the bar graph visually represents the selected intensity level.\n\n**Detail Rules**:\n1. **Initialization**:  \n   - All components start in an off state when powered on or reset.\n\n2. **Color Mixing**:\n   - The potentiometer (pot1) adjusts the brightness of one RGB component (red, green, or blue) at a time, cycling through these three modes automatically every 5 seconds.\n   - The RGB LED (rgb1) displays the combined color of the currently active component's intensity (from the potentiometer) and the previous components' intensities.\n\n3. **Bar Graph Display**:\n   - The LED bar graph (bargraph1) lights up segments proportional to the potentiometer's value (0-1023 mapped to 0-10 segments).\n   - Full intensity (1023) lights all 10 segments, while 0 intensity keeps the bar graph off.\n\n4. **Mode Cycling**:\n   - Red mode (first 5 seconds): Adjust red intensity. Previous green/blue intensities persist.\n   - Green mode (next 5 seconds): Adjust green intensity. Previous red/blue intensities persist.\n   - Blue mode (final 5 seconds): Adjust blue intensity. Previous red/green intensities persist.\n   - The cycle repeats indefinitely, with each mode lasting exactly 5 seconds.\n\n5. **Persistence**:\n   - Each color mode must maintain its state for the full 5-second duration to allow verification.\n   - The bar graph updates continuously to reflect real-time potentiometer values.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int RGB_PINS[] = {2, 3, 4}; \nconst int BAR_PINS[] = {5, 6, 7, 8, 9, 10, 11, 12, 13, 44}; \nint colorMode = 0; \nunsigned long lastModeChange = 0;\nint redIntensity = 0;\nint greenIntensity = 0;\nint blueIntensity = 0;\nvoid setup() {\n  for (int i = 0; i < 3; i++) pinMode(RGB_PINS[i], OUTPUT);\n  for (int i = 0; i < 10; i++) pinMode(BAR_PINS[i], OUTPUT);\n  lastModeChange = millis();\n}\nvoid loop() {\n  if (millis() - lastModeChange >= 5000) {\n    colorMode = (colorMode + 1) % 3;\n    lastModeChange = millis();\n  }\n  int potValue = analogRead(A3); \n  updateColorIntensity(potValue);\n  analogWrite(RGB_PINS[0], redIntensity);\n  analogWrite(RGB_PINS[1], greenIntensity);\n  analogWrite(RGB_PINS[2], blueIntensity);\n  int segments = map(potValue, 0, 1023, 0, 10);\n  for (int i = 0; i < 10; i++) {\n    digitalWrite(BAR_PINS[i], (i < segments) ? HIGH : LOW);\n  }\n}\nvoid updateColorIntensity(int value) {\n  switch(colorMode) {\n    case 0: \n      redIntensity = map(value, 0, 1023, 0, 255);\n      break;\n    case 1: \n      greenIntensity = map(value, 0, 1023, 0, 255);\n      break;\n    case 2: \n      blueIntensity = map(value, 0, 1023, 0, 255);\n      break;\n  }\n}",
        "hardware_lst": [
            0,
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            0
        ]
    },
    {
        "id": 55,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two RGB LEDs (rgb1, rgb2) using two slide potentiometers (pot1, pot2) and display the combined intensity on an LED bar graph (bargraph1). Each potentiometer selects a primary color (red, green, or blue) for its corresponding RGB LED, while the bar graph shows the average intensity of both potentiometers.\n\n**Detail Rules**:\n1. **Initialization**: All components start in an off state when powered on.\n2. **RGB Control**:\n   - The first potentiometer (pot1) controls the color of the first RGB LED (rgb1). When pot1 is in the lower third of its range (0–340), rgb1 displays red; in the middle third (341–681), green; and in the upper third (682–1023), blue.\n   - The second potentiometer (pot2) controls the color of the second RGB LED (rgb2) using the same logic as pot1.\n3. **Bar Graph Display**:\n   - The LED bar graph (bargraph1) lights up a number of LEDs proportional to the average value of both potentiometers. For example, if the average is 512 (half of 1023), 4 LEDs will light up.\n   - The bar graph must update continuously and maintain each state for at least 2 seconds if the potentiometers remain stationary.\n4. **Real-Time Updates**: The RGB LEDs and bar graph must update immediately when the potentiometers are adjusted.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:45",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int pot1Pin = A3;  \nconst int pot2Pin = A4;  \nconst int rgb1Pins[] = {2, 3, 4};  \nconst int rgb2Pins[] = {5, 6, 7};  \nvoid setup() {\n  for (int pin : rgb1Pins) pinMode(pin, OUTPUT);\n  for (int pin : rgb2Pins) pinMode(pin, OUTPUT);\n  for (int pin = 8; pin <= 13; pin++) pinMode(pin, OUTPUT);  \n  pinMode(44, OUTPUT);  \n  pinMode(45, OUTPUT);  \n}\nvoid loop() {\n  int pot1Value = analogRead(pot1Pin);\n  int pot2Value = analogRead(pot2Pin);\n  updateRGB(pot1Value, rgb1Pins[0], rgb1Pins[1], rgb1Pins[2]);\n  updateRGB(pot2Value, rgb2Pins[0], rgb2Pins[1], rgb2Pins[2]);\n  int average = (pot1Value + pot2Value) / 2;\n  int numLEDs = map(average, 0, 1023, 0, 9);\n  int pins[] = {8, 9, 10, 11, 12, 13, 44, 45};\n  for (int i = 0; i < 8; i++) {\n    digitalWrite(pins[i], i < numLEDs ? HIGH : LOW);\n  }\n  digitalWrite(44, 8 < numLEDs ? HIGH : LOW);  \n  digitalWrite(45, 9 < numLEDs ? HIGH : LOW);  \n  delay(10);\n}\nvoid updateRGB(int value, int rPin, int gPin, int bPin) {\n  digitalWrite(rPin, LOW);\n  digitalWrite(gPin, LOW);\n  digitalWrite(bPin, LOW);\n  if (value < 341) digitalWrite(rPin, HIGH);\n  else if (value < 682) digitalWrite(gPin, HIGH);\n  else digitalWrite(bPin, HIGH);\n}",
        "hardware_lst": [
            0,
            0,
            2,
            0,
            1,
            2,
            0,
            0,
            0
        ]
    },
    {
        "id": 56,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two RGB LEDs (rgb1, rgb2) and two 7-segment displays (sevseg1, sevseg2) using two shift registers (sr1, sr2). The RGB LEDs will cycle through a sequence of colors, and the 7-segment displays will show a two-digit number that increments every 2 seconds. The RGB LEDs and the 7-segment displays should operate independently but synchronously.\n\n**Detail Rules**:\n1. **RGB LEDs (rgb1, rgb2)**:\n   - The RGB LEDs will cycle through the following sequence of colors: Red, Green, Blue, Yellow, Cyan, Magenta, White.\n   - Each color should be displayed for 2 seconds before transitioning to the next color.\n   - Both RGB LEDs should display the same color at the same time.\n\n2. **7-Segment Displays (sevseg1, sevseg2)**:\n   - The 7-segment displays will show a two-digit number starting from 00.\n   - The number will increment by 1 every 2 seconds.\n   - If the number exceeds 99, it should reset to 00.\n   - One display (sevseg1) will show the tens digit, and the other display (sevseg2) will show the units digit.\n\n3. **Shift Registers (sr1, sr2)**:\n   - The shift registers will be used to control the 7-segment displays.\n   - The Arduino will send data to the shift registers to update the displayed digits.\n\n4. **Synchronization**:\n   - The RGB LEDs and the 7-segment displays should operate independently but synchronously, meaning their timing should align (e.g., both update every 2 seconds).\n\n5. **Initial State**:\n   - On startup, the RGB LEDs should display Red, and the 7-segment displays should show \"00\".\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int RGB1_R = 2;     \nconst int RGB1_G = 3;     \nconst int RGB1_B = 4;     \nconst int RGB2_R = 5;     \nconst int RGB2_G = 6;     \nconst int RGB2_B = 7;     \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nint currentNumber = 0;\nint colorIndex = 0;\nunsigned long lastUpdateTime = 0;\nconst int colors[][3] = {\n  {255, 0, 0},   \n  {0, 255, 0},   \n  {0, 0, 255},   \n  {255, 255, 0}, \n  {0, 255, 255}, \n  {255, 0, 255}, \n  {255, 255, 255}\n};\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(RGB1_R, OUTPUT);\n  pinMode(RGB1_G, OUTPUT);\n  pinMode(RGB1_B, OUTPUT);\n  pinMode(RGB2_R, OUTPUT);\n  pinMode(RGB2_G, OUTPUT);\n  pinMode(RGB2_B, OUTPUT);\n  displayNumber(0); \n  setRGBColor(colors[0][0], colors[0][1], colors[0][2]); \n  lastUpdateTime = millis();\n}\nvoid loop() {\n  unsigned long currentTime = millis();\n  if (currentTime - lastUpdateTime >= 2000) {\n    lastUpdateTime = currentTime;\n    currentNumber++;\n    if (currentNumber > 99) {\n      currentNumber = 0;\n    }\n    displayNumber(currentNumber);\n    colorIndex = (colorIndex + 1) % 7;\n    setRGBColor(colors[colorIndex][0], colors[colorIndex][1], colors[colorIndex][2]);\n  }\n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid setRGBColor(int red, int green, int blue) {\n  analogWrite(RGB1_R, red);\n  analogWrite(RGB1_G, green);\n  analogWrite(RGB1_B, blue);\n  analogWrite(RGB2_R, red);\n  analogWrite(RGB2_G, green);\n  analogWrite(RGB2_B, blue);\n}",
        "hardware_lst": [
            0,
            0,
            2,
            2,
            0,
            0,
            0,
            2,
            0
        ]
    },
    {
        "id": 57,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three RGB LEDs (rgb1, rgb2, rgb3) and two 7-segment displays (sevseg1, sevseg2) using two shift registers (sr1, sr2). The RGB LEDs will cycle through a sequence of colors, and the 7-segment displays will show a countdown timer synchronized with the color changes. The countdown starts at 99 and decreases by 1 every 2 seconds. When the countdown reaches 0, it resets to 99, and the RGB LEDs restart their color sequence.\n\n**Detail Rules**:\n1. **RGB LEDs (rgb1, rgb2, rgb3)**:\n   - The RGB LEDs will cycle through the following sequence of colors, each lasting 2 seconds:\n     - Red (rgb1: red on, green and blue off; rgb2 and rgb3: off)\n     - Green (rgb2: green on, red and blue off; rgb1 and rgb3: off)\n     - Blue (rgb3: blue on, red and green off; rgb1 and rgb2: off)\n     - Purple (rgb1: red and blue on, green off; rgb2 and rgb3: off)\n     - Yellow (rgb2: red and green on, blue off; rgb1 and rgb3: off)\n     - Cyan (rgb3: green and blue on, red off; rgb1 and rgb2: off)\n   - After the last color in the sequence, the cycle repeats.\n\n2. **7-Segment Displays (sevseg1, sevseg2)**:\n   - The displays will show a countdown timer starting at 99.\n   - The countdown decreases by 1 every 2 seconds.\n   - When the countdown reaches 0, it resets to 99, and the RGB LEDs restart their color sequence.\n\n3. **Synchronization**:\n   - The countdown timer and the RGB LED color sequence must be synchronized, with each color change and countdown decrement occurring simultaneously every 2 seconds.\n\n4. **Initial State**:\n   - On startup, the RGB LEDs should display the first color in the sequence (red), and the 7-segment displays should show \"99\".\n\n5. **Reset Condition**:\n   - When the countdown reaches 0, the timer resets to 99, and the RGB LEDs restart their color sequence from red.\n\n6. **Hardware Usage**:\n   - All components (RGB LEDs, 7-segment displays, shift registers) must be used as described.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb3",
                        "top": -130.4,
                        "left": 154.7,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb3:COM",
                        "black"
                    ],
                    [
                        "mega:8",
                        "rgb3:R",
                        "red"
                    ],
                    [
                        "mega:9",
                        "rgb3:G",
                        "green"
                    ],
                    [
                        "mega:10",
                        "rgb3:B",
                        "blue"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int RGB1_R = 2;\nconst int RGB1_G = 3;\nconst int RGB1_B = 4;\nconst int RGB2_R = 5;\nconst int RGB2_G = 6;\nconst int RGB2_B = 7;\nconst int RGB3_R = 8;\nconst int RGB3_G = 9;\nconst int RGB3_B = 10;\nconst int SHCP_PIN = A2;\nconst int STCP_PIN = A1;\nconst int DS_PIN = A0;\nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nint countdown = 99;\nint colorIndex = 0;\nunsigned long lastUpdate = 0;\nvoid setup() {\n  pinMode(RGB1_R, OUTPUT);\n  pinMode(RGB1_G, OUTPUT);\n  pinMode(RGB1_B, OUTPUT);\n  pinMode(RGB2_R, OUTPUT);\n  pinMode(RGB2_G, OUTPUT);\n  pinMode(RGB2_B, OUTPUT);\n  pinMode(RGB3_R, OUTPUT);\n  pinMode(RGB3_G, OUTPUT);\n  pinMode(RGB3_B, OUTPUT);\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  digitalWrite(RGB1_R, HIGH);\n  digitalWrite(RGB1_G, LOW);\n  digitalWrite(RGB1_B, LOW);\n  displayNumber(countdown);\n}\nvoid loop() {\n  if (millis() - lastUpdate >= 2000) {\n    lastUpdate = millis();\n    countdown--;\n    if (countdown < 0) {\n      countdown = 99;\n      colorIndex = 0;\n    }\n    updateRGBLEDs();\n    displayNumber(countdown);\n  }\n}\nvoid updateRGBLEDs() {\n  colorIndex = (colorIndex + 1) % 6;\n  switch (colorIndex) {\n    case 0: \n      digitalWrite(RGB1_R, HIGH); digitalWrite(RGB1_G, LOW); digitalWrite(RGB1_B, LOW);\n      digitalWrite(RGB2_R, LOW); digitalWrite(RGB2_G, LOW); digitalWrite(RGB2_B, LOW);\n      digitalWrite(RGB3_R, LOW); digitalWrite(RGB3_G, LOW); digitalWrite(RGB3_B, LOW);\n      break;\n    case 1: \n      digitalWrite(RGB1_R, LOW); digitalWrite(RGB1_G, LOW); digitalWrite(RGB1_B, LOW);\n      digitalWrite(RGB2_R, LOW); digitalWrite(RGB2_G, HIGH); digitalWrite(RGB2_B, LOW);\n      digitalWrite(RGB3_R, LOW); digitalWrite(RGB3_G, LOW); digitalWrite(RGB3_B, LOW);\n      break;\n    case 2: \n      digitalWrite(RGB1_R, LOW); digitalWrite(RGB1_G, LOW); digitalWrite(RGB1_B, LOW);\n      digitalWrite(RGB2_R, LOW); digitalWrite(RGB2_G, LOW); digitalWrite(RGB2_B, LOW);\n      digitalWrite(RGB3_R, LOW); digitalWrite(RGB3_G, LOW); digitalWrite(RGB3_B, HIGH);\n      break;\n    case 3: \n      digitalWrite(RGB1_R, HIGH); digitalWrite(RGB1_G, LOW); digitalWrite(RGB1_B, HIGH);\n      digitalWrite(RGB2_R, LOW); digitalWrite(RGB2_G, LOW); digitalWrite(RGB2_B, LOW);\n      digitalWrite(RGB3_R, LOW); digitalWrite(RGB3_G, LOW); digitalWrite(RGB3_B, LOW);\n      break;\n    case 4: \n      digitalWrite(RGB1_R, LOW); digitalWrite(RGB1_G, LOW); digitalWrite(RGB1_B, LOW);\n      digitalWrite(RGB2_R, HIGH); digitalWrite(RGB2_G, HIGH); digitalWrite(RGB2_B, LOW);\n      digitalWrite(RGB3_R, LOW); digitalWrite(RGB3_G, LOW); digitalWrite(RGB3_B, LOW);\n      break;\n    case 5: \n      digitalWrite(RGB1_R, LOW); digitalWrite(RGB1_G, LOW); digitalWrite(RGB1_B, LOW);\n      digitalWrite(RGB2_R, LOW); digitalWrite(RGB2_G, LOW); digitalWrite(RGB2_B, LOW);\n      digitalWrite(RGB3_R, LOW); digitalWrite(RGB3_G, HIGH); digitalWrite(RGB3_B, HIGH);\n      break;\n  }\n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            0,
            0,
            3,
            2,
            0,
            0,
            0,
            2,
            0
        ]
    },
    {
        "id": 58,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an RGB LED (rgb1), a 7-segment display (sevseg1), and a servo motor (servo1) using a shift register (sr1). The RGB LED will cycle through a sequence of colors, the 7-segment display will show a countdown from 9 to 0, and the servo motor will rotate to a specific angle based on the countdown value. The system should repeat this sequence indefinitely.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the RGB LED (rgb1) should be off, the 7-segment display (sevseg1) should show \"9\", and the servo motor (servo1) should be at 0 degrees.\nSequence Execution:\n1. The RGB LED (rgb1) will cycle through the following colors in sequence: Red, Green, Blue, Yellow, Cyan, Magenta, White. Each color should be displayed for 2 seconds.\n2. Simultaneously, the 7-segment display (sevseg1) will count down from 9 to 0, with each number displayed for 2 seconds.\n3. The servo motor (servo1) will rotate to an angle corresponding to the current countdown value (e.g., 0 degrees for 9, 20 degrees for 8, ..., 180 degrees for 0).\n4. After reaching 0, the system should reset and repeat the sequence.\nAll hardware states should be updated synchronously.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "mega:5",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nconst int RGB_RED_PIN = 2;       \nconst int RGB_GREEN_PIN = 3;     \nconst int RGB_BLUE_PIN = 4;      \nconst int SHCP_PIN = A2;         \nconst int STCP_PIN = A1;         \nconst int DS_PIN = A0;           \nconst int SERVO_PIN = 5;         \nServo servo1;\nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nconst int colors[7][3] = {\n  {255, 0, 0},   \n  {0, 255, 0},   \n  {0, 0, 255},   \n  {255, 255, 0}, \n  {0, 255, 255}, \n  {255, 0, 255}, \n  {255, 255, 255} \n};\nint countdown = 9;\nint colorIndex = 0;\nvoid setup() {\n  pinMode(RGB_RED_PIN, OUTPUT);\n  pinMode(RGB_GREEN_PIN, OUTPUT);\n  pinMode(RGB_BLUE_PIN, OUTPUT);\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  servo1.attach(SERVO_PIN);\n  servo1.write(0);\n  displayNumber(countdown);\n}\nvoid loop() {\n  analogWrite(RGB_RED_PIN, colors[colorIndex][0]);\n  analogWrite(RGB_GREEN_PIN, colors[colorIndex][1]);\n  analogWrite(RGB_BLUE_PIN, colors[colorIndex][2]);\n  displayNumber(countdown);\n  int angle = map(countdown, 9, 0, 0, 180);\n  servo1.write(angle);\n  delay(2000);\n  countdown--;\n  if (countdown < 0) {\n    countdown = 9;\n  }\n  colorIndex = (colorIndex + 1) % 7;\n}\nvoid displayNumber(int number) {\n  byte code = segmentCodes[number];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, code);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            0,
            0,
            1,
            1,
            0,
            0,
            0,
            1,
            1
        ]
    },
    {
        "id": 59,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three RGB LEDs (rgb1, rgb2, rgb3), a 7-segment display (sevseg1), and three servo motors (servo1, servo2, servo3). The RGB LEDs will cycle through a sequence of colors, the 7-segment display will show a countdown from 9 to 0, and the servo motors will rotate to specific angles in sync with the countdown. The system should repeat this sequence indefinitely.\n\n**Detail Rules**:\n1. **RGB LEDs**:\n   - The RGB LEDs (rgb1, rgb2, rgb3) will cycle through the following colors in sequence: Red, Green, Cyan, Magenta, Blue, Yellow, White.\n   - Each color should be displayed for 2 seconds before transitioning to the next color.\n   - All three RGB LEDs should display the same color simultaneously.\n\n2. **7-Segment Display**:\n   - The 7-segment display (sevseg1) will show a countdown from 9 to 0.\n   - Each number should be displayed for 2 seconds before decrementing to the next number.\n   - After reaching 0, the countdown should reset to 9 and repeat.\n\n3. **Servo Motors**:\n   - The servo motors (servo1, servo2, servo3) will rotate to specific angles in sync with the countdown:\n     - When the countdown is 7-9, all servos should be at 0 degrees.\n     - When the countdown is 4-6, all servos should be at 60 degrees.\n     - When the countdown is 1-3, all servos should be at 120 degrees.\n     - When the countdown is 0, all servos should be at 180 degrees.\n   - The servos should hold their positions for 2 seconds before moving to the next angle.\n\n4. **Synchronization**:\n   - The RGB LEDs, 7-segment display, and servo motors should operate in sync, with each state lasting for 2 seconds.\n   - The system should repeat the sequence indefinitely.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb3",
                        "top": -130.4,
                        "left": 154.7,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb3:COM",
                        "black"
                    ],
                    [
                        "mega:8",
                        "rgb3:R",
                        "red"
                    ],
                    [
                        "mega:9",
                        "rgb3:G",
                        "green"
                    ],
                    [
                        "mega:10",
                        "rgb3:B",
                        "blue"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "mega:11",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:12",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:13",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nconst int RGB1_R = 2;\nconst int RGB1_G = 3;\nconst int RGB1_B = 4;\nconst int RGB2_R = 5;\nconst int RGB2_G = 6;\nconst int RGB2_B = 7;\nconst int RGB3_R = 8;\nconst int RGB3_G = 9;\nconst int RGB3_B = 10;\nconst int SHCP_PIN = A2;\nconst int STCP_PIN = A1;\nconst int DS_PIN = A0;\nconst int SERVO1_PIN = 11;\nconst int SERVO2_PIN = 12;\nconst int SERVO3_PIN = 13;\nServo servo1;\nServo servo2;\nServo servo3;\nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nconst int colors[][3] = {\n  {255, 0, 0},   \n  {0, 255, 0},   \n  {0, 255, 255}, \n  {255, 0, 255}, \n  {0, 0, 255},   \n  {255, 255, 0}, \n  {255, 255, 255} \n};\nint currentColor = 0;\nint countdown = 9;\nvoid setup() {\n  pinMode(RGB1_R, OUTPUT);\n  pinMode(RGB1_G, OUTPUT);\n  pinMode(RGB1_B, OUTPUT);\n  pinMode(RGB2_R, OUTPUT);\n  pinMode(RGB2_G, OUTPUT);\n  pinMode(RGB2_B, OUTPUT);\n  pinMode(RGB3_R, OUTPUT);\n  pinMode(RGB3_G, OUTPUT);\n  pinMode(RGB3_B, OUTPUT);\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  servo3.attach(SERVO3_PIN);\n  servo1.write(0);\n  servo2.write(0);\n  servo3.write(0);\n  displayNumber(countdown);\n}\nvoid loop() {\n  setRGBColor(colors[currentColor][0], colors[currentColor][1], colors[currentColor][2]);\n  currentColor = (currentColor + 1) % 7;\n  displayNumber(countdown);\n  if (countdown == 9) {\n    servo1.write(0);\n    servo2.write(0);\n    servo3.write(0);\n  } else if (countdown == 6) {\n    servo1.write(60);\n    servo2.write(60);\n    servo3.write(60);\n  } else if (countdown == 3) {\n    servo1.write(120);\n    servo2.write(120);\n    servo3.write(120);\n  } else if (countdown == 0) {\n    servo1.write(180);\n    servo2.write(180);\n    servo3.write(180);\n  }\n  delay(2000);\n  countdown--;\n  if (countdown < 0) {\n    countdown = 9;\n  }\n}\nvoid setRGBColor(int red, int green, int blue) {\n  analogWrite(RGB1_R, red);\n  analogWrite(RGB1_G, green);\n  analogWrite(RGB1_B, blue);\n  analogWrite(RGB2_R, red);\n  analogWrite(RGB2_G, green);\n  analogWrite(RGB2_B, blue);\n  analogWrite(RGB3_R, red);\n  analogWrite(RGB3_G, green);\n  analogWrite(RGB3_B, blue);\n}\nvoid displayNumber(int number) {\n  byte code = segmentCodes[number];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, code);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            0,
            0,
            3,
            1,
            0,
            0,
            0,
            1,
            3
        ]
    },
    {
        "id": 60,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two RGB LEDs (rgb1, rgb2), two 7-segment displays (sevseg1, sevseg2), and three slide potentiometers (pot1, pot2, pot3). The RGB LEDs will display colors based on the values of the potentiometers, while the 7-segment displays will show the corresponding RGB values as two-digit numbers. The first display (sevseg1) will show the red and green values, and the second display (sevseg2) will show the blue value.\n\n**Detail Rules**:\n1. **RGB LED Control**:\n   - The first potentiometer (pot1) controls the red component of both RGB LEDs (rgb1, rgb2).\n   - The second potentiometer (pot2) controls the green component of both RGB LEDs (rgb1, rgb2).\n   - The third potentiometer (pot3) controls the blue component of both RGB LEDs (rgb1, rgb2).\n   - The RGB values are mapped from the potentiometer readings (0-1023) to a range of 0-255.\n\n2. **7-Segment Display**:\n   - The first 7-segment display (sevseg1) will show the red value map 0-255 to 0-9.\n   - The second 7-segment display (sevseg2) will show the blue value map 0-255 to 0-9.\n   - The displays should update continuously to reflect the current RGB values.\n\n\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -408.8,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int RGB1_RED = 2;   \nconst int RGB1_GREEN = 3; \nconst int RGB1_BLUE = 4;  \nconst int RGB2_RED = 5;   \nconst int RGB2_GREEN = 6; \nconst int RGB2_BLUE = 7;  \nconst int POT1_PIN = A3;  \nconst int POT2_PIN = A4;  \nconst int POT3_PIN = A5;  \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(RGB1_RED, OUTPUT);\n  pinMode(RGB1_GREEN, OUTPUT);\n  pinMode(RGB1_BLUE, OUTPUT);\n  pinMode(RGB2_RED, OUTPUT);\n  pinMode(RGB2_GREEN, OUTPUT);\n  pinMode(RGB2_BLUE, OUTPUT);\n}\nvoid loop() {\n  int redValue = map(analogRead(POT1_PIN), 0, 1023, 0, 255);\n  int greenValue = map(analogRead(POT2_PIN), 0, 1023, 0, 255);\n  int blueValue = map(analogRead(POT3_PIN), 0, 1023, 0, 255);\n  int tens = map(redValue,0,255,0,9);\n  int ones = map(blueValue,0,255,0,9);\n  analogWrite(RGB1_RED, redValue);\n  analogWrite(RGB1_GREEN, greenValue);\n  analogWrite(RGB1_BLUE, blueValue);\n  analogWrite(RGB2_RED, redValue);\n  analogWrite(RGB2_GREEN, greenValue);\n  analogWrite(RGB2_BLUE, blueValue);\n  displayNumber(tens,ones);\n}\nvoid displayNumber(int tens, int ones) {\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            0,
            0,
            2,
            2,
            0,
            3,
            0,
            2,
            0
        ]
    },
    {
        "id": 61,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an RGB LED (rgb1) and a 7-segment display (sevseg1) using a shift register (sr1) and two slide potentiometers (pot1, pot2). The RGB LED will display a color based on the values of the two potentiometers, and the 7-segment display will show a number corresponding to the brightness level of the RGB LED.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the RGB LED (rgb1) should be off, and the 7-segment display (sevseg1) should show \"0\".\nPotentiometer Interaction:\n1. The first potentiometer (pot1) controls the brightness of the red and green components of the RGB LED. The value of pot1 is mapped to a range of 0 to 255 for the red and green components.\n2. The second potentiometer (pot2) controls the brightness of the blue component of the RGB LED. The value of pot2 is mapped to a range of 0 to 255 for the blue component.\n3. The 7-segment display (sevseg1) should show a number between 0 and 9, representing the average brightness level of the RGB LED. The average brightness is calculated as (red + green + blue) / 3, divided by 28.33 to scale it to a range of 0 to 9.\n4. The RGB LED and 7-segment display should update continuously based on the current values of the potentiometers.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int RED_PIN = 2;    \nconst int GREEN_PIN = 3;  \nconst int BLUE_PIN = 4;   \nconst int POT1_PIN = A3;  \nconst int POT2_PIN = A4;  \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(RED_PIN, OUTPUT);\n  pinMode(GREEN_PIN, OUTPUT);\n  pinMode(BLUE_PIN, OUTPUT);\n  analogWrite(RED_PIN, 0);\n  analogWrite(GREEN_PIN, 0);\n  analogWrite(BLUE_PIN, 0);\n  displayNumber(0);\n}\nvoid loop() {\n  int pot1Value = analogRead(POT1_PIN);\n  int pot2Value = analogRead(POT2_PIN);\n  int red = map(pot1Value, 0, 1023, 0, 255);\n  int green = map(pot1Value, 0, 1023, 0, 255);\n  int blue = map(pot2Value, 0, 1023, 0, 255);\n  analogWrite(RED_PIN, red);\n  analogWrite(GREEN_PIN, green);\n  analogWrite(BLUE_PIN, blue);\n  int averageBrightness = (red + green + blue) / 3;\n  int displayNumberValue = map(averageBrightness, 0, 255, 0, 9);\n  displayNumber(displayNumberValue);\n}\nvoid displayNumber(int number) {\n  byte code = segmentCodes[number];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, code);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            0,
            0,
            1,
            1,
            0,
            2,
            0,
            1,
            0
        ]
    },
    {
        "id": 62,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to create a synchronized visual system using two RGB LEDs (rgb1, rgb2), two 7-segment displays (sevseg1, sevseg2), a 10-segment LED bar graph (bargraph1), and two shift registers (sr1, sr2). The system will display a number that increments automatically, with visual feedback distributed across multiple components.\n\n**Detail Rules**:\nInitialization: \n- Both 7-segment displays show \"00\"\n- All bar graph LEDs are off\n- RGB LEDs are off\n\nOperation:\n1. The displayed number increments by 1 every 2 seconds (0 → 1 → 2... → 99 → 00)\n2. 7-segment displays (sevseg1, sevseg2) always show the current number as two digits\n3. LED bar graph (bargraph1) lights segments equal to the tens digit (e.g., 25 → 2 segments lit) (from pin:A1 to pin:A10)\n4. RGB LEDs (rgb1, rgb2) change color based on value ranges:\n   - Red: 0-5\n   - Green: 6-9\n   - Blue: 10-99\n5. All components must update simultaneously with each increment\n6. If tens digit exceeds 8 (numbers 80-99), bar graph shows maximum 8 lit segments\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:45",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Arduino.h>\nconst int SHCP = A2;    \nconst int STCP = A1;    \nconst int DS = A0;      \nconst byte segMap[10] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nint counter = 0;\nunsigned long lastUpdate = 0;\nvoid updateDisplay(int num) {\n  digitalWrite(STCP, LOW);\n  shiftOut(DS, SHCP, MSBFIRST, segMap[num % 10]);  \n  shiftOut(DS, SHCP, MSBFIRST, segMap[num / 10]);  \n  digitalWrite(STCP, HIGH);\n}\nvoid updateBarGraph(int tens) {\n  for(int i = 8; i <= 13; i++) {\n    digitalWrite(i, (i-8) < min(tens,8) ? HIGH : LOW);\n  }\n  digitalWrite(44, (8) < min(tens,8) ? HIGH : LOW);\n  digitalWrite(45, (9) < min(tens,8) ? HIGH : LOW);\n}\nvoid setRGB(int val) {\n  for(int p = 2; p <=7; p++) digitalWrite(p, LOW);\n  if(val <= 5) {        \n    digitalWrite(2, HIGH);\n    digitalWrite(5, HIGH);\n  } else if(val <=  9) { \n    digitalWrite(3, HIGH);\n    digitalWrite(6, HIGH);\n  } else {               \n    digitalWrite(4, HIGH);\n    digitalWrite(7, HIGH);\n  }\n}\nvoid setup() {\n  pinMode(SHCP, OUTPUT);\n  pinMode(STCP, OUTPUT);\n  pinMode(DS, OUTPUT);\n  for(int i = 8; i <= 13; i++) pinMode(i, OUTPUT);\n  pinMode(44, OUTPUT);\n  pinMode(45, OUTPUT);\n  for(int i = 2; i <=7; i++) pinMode(i, OUTPUT);\n  updateDisplay(0);\n  updateBarGraph(0);\n  setRGB(0);\n}\nvoid loop() {\n  if(millis() - lastUpdate >= 2000) {\n    lastUpdate = millis();\n    counter = (counter + 1) % 100;\n    updateDisplay(counter);\n    updateBarGraph(counter / 10);\n    setRGB(counter);\n  }\n}",
        "hardware_lst": [
            0,
            0,
            2,
            2,
            1,
            0,
            0,
            2,
            0
        ]
    },
    {
        "id": 63,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to create a synchronized display system using an RGB LED (rgb1), a 7-segment display (sevseg1), a shift register (sr1), and a 10-segment LED bar graph (bargraph1). The system will cycle through numbers 0 to 9, updating all components every 2 seconds. The RGB LED will indicate color ranges, the 7-segment display will show the current number, and the LED bar graph will visualize the count.\n\n**Detail Rules**:\n1. **Initialization**:  \n   - The 7-segment display (sevseg1) shows \"0\".  \n   - The LED bar graph (bargraph1) has all segments off.  \n   - The RGB LED (rgb1) is set to red.  \n\n2. **Cycling Behavior**:  \n   - Every 2 seconds, increment the displayed number by 1.  \n   - After reaching 9, reset to 0 and repeat.  \n\n3. **Component Synchronization**:  \n   - The 7-segment display (sevseg1) must show the current number (0-9).  \n   - The LED bar graph (bargraph1) must light up a number of segments equal to the current number (e.g., 5 segments for number 5). (from pin:A1 to pin:A10)\n   - The RGB LED (rgb1) must follow this color scheme:  \n     - **Red** for numbers 0-3  \n     - **Green** for numbers 4-6  \n     - **Blue** for numbers 7-9  \n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0.6,
                        "left": -3.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "top": -14.2,
                        "left": 417.6,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black",
                        []
                    ],
                    [
                        "mega:2",
                        "rgb1:R",
                        "red",
                        []
                    ],
                    [
                        "mega:3",
                        "rgb1:G",
                        "green",
                        []
                    ],
                    [
                        "mega:4",
                        "rgb1:B",
                        "blue",
                        []
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red",
                        []
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray",
                        []
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple",
                        []
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue",
                        []
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red",
                        []
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red",
                        []
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black",
                        []
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black",
                        []
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green",
                        []
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green",
                        []
                    ],
                    [
                        "mega:5",
                        "bargraph1:A1",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black",
                        []
                    ],
                    [
                        "mega:6",
                        "bargraph1:A2",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black",
                        []
                    ],
                    [
                        "mega:7",
                        "bargraph1:A3",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black",
                        []
                    ],
                    [
                        "mega:8",
                        "bargraph1:A4",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black",
                        []
                    ],
                    [
                        "mega:9",
                        "bargraph1:A5",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black",
                        []
                    ],
                    [
                        "mega:10",
                        "bargraph1:A6",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black",
                        []
                    ],
                    [
                        "mega:11",
                        "bargraph1:A7",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black",
                        []
                    ],
                    [
                        "mega:12",
                        "bargraph1:A8",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black",
                        []
                    ],
                    [
                        "mega:13",
                        "bargraph1:A9",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black",
                        []
                    ],
                    [
                        "mega:44",
                        "bargraph1:A10",
                        "green",
                        []
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black",
                        []
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int RGB_R = 2, RGB_G = 3, RGB_B = 4;  \nconst int BAR_PINS[] = {5,6,7,8,9,10,11,12,13,44};  \nconst byte segmentCodes[] = {  \n  0b11000000, 0b11111001, 0b10100100, 0b10110000,  \n  0b10011001, 0b10010010, 0b10000010, 0b11111000,  \n  0b10000000, 0b10010000  \n};  \nint currentNumber = 0;  \nunsigned long lastUpdate = 0;  \nvoid setup() {  \n  pinMode(SHCP_PIN, OUTPUT);  \n  pinMode(STCP_PIN, OUTPUT);  \n  pinMode(DS_PIN, OUTPUT);  \n  for (int i = 0; i < 10; i++) pinMode(BAR_PINS[i], OUTPUT);  \n  pinMode(RGB_R, OUTPUT);  \n  pinMode(RGB_G, OUTPUT);  \n  pinMode(RGB_B, OUTPUT);  \n  updateDisplay();  \n}  \nvoid loop() {  \n  if (millis() - lastUpdate >= 2000) {  \n    currentNumber = (currentNumber + 1) % 10;  \n    updateDisplay();  \n    lastUpdate = millis();  \n  }  \n}  \nvoid updateDisplay() {  \n  digitalWrite(STCP_PIN, LOW);  \n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, segmentCodes[currentNumber]);  \n  digitalWrite(STCP_PIN, HIGH);  \n  digitalWrite(STCP_PIN, LOW);  \n  for (int i = 0; i < 10; i++) {  \n    digitalWrite(BAR_PINS[i], (i < currentNumber) ? HIGH : LOW);  \n  }  \n  if (currentNumber <= 3) {  \n    digitalWrite(RGB_R, HIGH);  \n    digitalWrite(RGB_G, LOW);  \n    digitalWrite(RGB_B, LOW);  \n  } else if (currentNumber <= 6) {  \n    digitalWrite(RGB_R, LOW);  \n    digitalWrite(RGB_G, HIGH);  \n    digitalWrite(RGB_B, LOW);  \n  } else {  \n    digitalWrite(RGB_R, LOW);  \n    digitalWrite(RGB_G, LOW);  \n    digitalWrite(RGB_B, HIGH);  \n  }  \n}  ",
        "hardware_lst": [
            0,
            0,
            1,
            1,
            1,
            0,
            0,
            1,
            0
        ]
    },
    {
        "id": 64,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an RGB LED (rgb1) using two pushbuttons (btn1, btn2). The buttons allow navigation through a predefined sequence of colors, with btn1 advancing to the next color and btn2 returning to the previous color. The RGB LED must display the selected color continuously until a new button press occurs.\n\n**Detail Rules**:\n1. **Initialization**: The RGB LED (rgb1) starts in the **off** state when the system is powered on or reset.\n2. **Color Sequence**: The predefined color sequence is:  \n   **Off → Red → Green → Blue → Yellow → Cyan → Magenta → White → Off** (looping).\n3. **Button Interaction**:\n   - Pressing btn1 advances to the **next** color in the sequence.\n   - Pressing btn2 returns to the **previous** color in the sequence.\n   - The RGB LED must update immediately after a valid button press.\n4. **Debouncing**: Button presses must be debounced to avoid false triggers from mechanical vibrations.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:4",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:5",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:6",
                        "rgb1:B",
                        "blue"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int BTN1_PIN = 2;\nconst int BTN2_PIN = 3;\nconst int R_PIN = 4;\nconst int G_PIN = 5;\nconst int B_PIN = 6;\nbyte colors[][3] = {\n  {LOW,  LOW,  LOW },  \n  {HIGH, LOW,  LOW },  \n  {LOW,  HIGH, LOW },  \n  {LOW,  LOW,  HIGH},  \n  {HIGH, HIGH, LOW },  \n  {LOW,  HIGH, HIGH},  \n  {HIGH, LOW,  HIGH},  \n  {HIGH, HIGH, HIGH}   \n};\nint currentColor = 0;\nvoid setup() {\n  pinMode(BTN1_PIN, INPUT_PULLUP);\n  pinMode(BTN2_PIN, INPUT_PULLUP);\n  pinMode(R_PIN, OUTPUT);\n  pinMode(G_PIN, OUTPUT);\n  pinMode(B_PIN, OUTPUT);\n  updateLED();\n}\nvoid loop() {\n  handleButton(BTN1_PIN, 1);  \n  handleButton(BTN2_PIN, -1); \n}\nvoid handleButton(int btnPin, int direction) {\n  if (digitalRead(btnPin) == LOW) {\n    delay(100); \n    if (digitalRead(btnPin) == LOW) {\n      currentColor = (currentColor + direction + 8) % 8;\n      updateLED();\n      while (digitalRead(btnPin) == LOW); \n    }\n  }\n}\nvoid updateLED() {\n  digitalWrite(R_PIN, colors[currentColor][0]);\n  digitalWrite(G_PIN, colors[currentColor][1]);\n  digitalWrite(B_PIN, colors[currentColor][2]);\n}",
        "hardware_lst": [
            0,
            2,
            1,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 65,
        "problem": "\n  \n**Task**:  \nYou are tasked with programming an Arduino (uno) to control an RGB LED (rgb1) using a push button (btn1). The RGB LED will cycle through predefined colors each time the button is pressed, with each color state lasting at least 2 seconds.  \n\n**Detail Rules**:  \n1. **Initialization**:  \n   - The RGB LED (rgb1) must start in an **off state** (all color channels disabled).  \n\n2. **Button Interaction**:  \n   - Each valid press of the button (btn1) must cycle the RGB LED (rgb1) through the following sequence:  \n     - **Red** → **Green** → **Blue** → **Yellow (Red+Green)** → **Cyan (Green+Blue)** → **Magenta (Red+Blue)** → **White (Red+Green+Blue)** → **Off** → **Repeat**.  \n   - A valid button press is defined as holding the button for **at least 0.15 seconds** to avoid false triggers.  \n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:3",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:4",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:5",
                        "rgb1:B",
                        "blue"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int BUTTON_PIN = 2;  \nconst int RED_PIN = 3;     \nconst int GREEN_PIN = 4;   \nconst int BLUE_PIN = 5;    \nint colorState = -1;  \nunsigned long lastChangeTime = 0;  \nbool buttonActive = false;  \nvoid setup() {  \n  pinMode(BUTTON_PIN, INPUT_PULLUP);  \n  pinMode(RED_PIN, OUTPUT);  \n  pinMode(GREEN_PIN, OUTPUT);  \n  pinMode(BLUE_PIN, OUTPUT);  \n  analogWrite(RED_PIN, 0);  \n  analogWrite(GREEN_PIN, 0);  \n  analogWrite(BLUE_PIN, 0);  \n}  \nvoid loop() {  \n  if (digitalRead(BUTTON_PIN) == LOW && !buttonActive) {  \n    delay(100);  \n    if (digitalRead(BUTTON_PIN) == LOW) {  \n      buttonActive = true;  \n      colorState = (colorState + 1) % 8;  \n      lastChangeTime = millis();  \n      updateLED();  \n    }  \n  }  \n  if (digitalRead(BUTTON_PIN) == HIGH) {  \n    buttonActive = false;  \n  }  \n}  \nvoid updateLED() {  \n  switch(colorState) {  \n    case 0:  \n      analogWrite(RED_PIN, 255);  \n      analogWrite(GREEN_PIN, 0);  \n      analogWrite(BLUE_PIN, 0);  \n      break;  \n    case 1:  \n      analogWrite(RED_PIN, 0);  \n      analogWrite(GREEN_PIN, 255);  \n      analogWrite(BLUE_PIN, 0);  \n      break;  \n    case 2:  \n      analogWrite(RED_PIN, 0);  \n      analogWrite(GREEN_PIN, 0);  \n      analogWrite(BLUE_PIN, 255);  \n      break;  \n    case 3:  \n      analogWrite(RED_PIN, 255);  \n      analogWrite(GREEN_PIN, 255);  \n      analogWrite(BLUE_PIN, 0);  \n      break;  \n    case 4:  \n      analogWrite(RED_PIN, 0);  \n      analogWrite(GREEN_PIN, 255);  \n      analogWrite(BLUE_PIN, 255);  \n      break;  \n    case 5:  \n      analogWrite(RED_PIN, 255);  \n      analogWrite(GREEN_PIN, 0);  \n      analogWrite(BLUE_PIN, 255);  \n      break;  \n    case 6:  \n      analogWrite(RED_PIN, 255);  \n      analogWrite(GREEN_PIN, 255);  \n      analogWrite(BLUE_PIN, 255);  \n      break;  \n    case 7:  \n      analogWrite(RED_PIN, 0);  \n      analogWrite(GREEN_PIN, 0);  \n      analogWrite(BLUE_PIN, 0);  \n      break;  \n  }  \n}  ",
        "hardware_lst": [
            0,
            1,
            1,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 66,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three servo motors (servo1, servo2, servo3) using a push button (btn1). Each press of the button will cycle through a sequence of predefined angles for the servos. The servos should move to their respective angles in the sequence, and each state should be maintained for at least 2 seconds before transitioning to the next state.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, all servos (servo1, servo2, servo3) should be set to their initial position of 0 degrees.\nButton Interaction: Each press of the button (btn1) will advance the system to the next state in the sequence. The sequence of states is as follows:\n1. State 1: Servo1 = 0°, Servo2 = 0°, Servo3 = 0°.\n2. State 2: Servo1 = 90°, Servo2 = 45°, Servo3 = 135°.\n3. State 3: Servo1 = 180°, Servo2 = 90°, Servo3 = 0°.\n4. State 4: Servo1 = 45°, Servo2 = 135°, Servo3 = 90°.\n5. State 5: Servo1 = 0°, Servo2 = 0°, Servo3 = 0° (reset to initial state).\nState Transition: After reaching State 5, the sequence should reset to State 1 on the next button press.\nDebouncing: The button press should be debounced to avoid false triggers caused by mechanical vibrations.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:3",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:4",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:5",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nServo servo3;\nconst int BUTTON_PIN = 2; \nint currentState = 0;     \nunsigned long lastDebounceTime = 0; \nunsigned long debounceDelay = 150; \nbool buttonPressed = false; \nvoid setup() {\n  servo1.attach(3); \n  servo2.attach(4); \n  servo3.attach(5); \n  pinMode(BUTTON_PIN, INPUT_PULLUP); \n  setServoAngles(0, 0, 0); \n}\nvoid loop() {\n  int buttonState = digitalRead(BUTTON_PIN); \n  if (buttonState == LOW && !buttonPressed && (millis() - lastDebounceTime) > debounceDelay) {\n    buttonPressed = true; \n    lastDebounceTime = millis(); \n    currentState = (currentState + 1) % 5;\n    switch (currentState) {\n      case 0:\n        setServoAngles(0, 0, 0);\n        break;\n      case 1:\n        setServoAngles(90, 45, 135);\n        break;\n      case 2:\n        setServoAngles(180, 90, 0);\n        break;\n      case 3:\n        setServoAngles(45, 135, 90);\n        break;\n      case 4:\n        setServoAngles(0, 0, 0);\n        break;\n    }\n  }\n  if (buttonState == HIGH && buttonPressed && (millis() - lastDebounceTime) > debounceDelay) {\n    buttonPressed = false; \n    lastDebounceTime = millis(); \n  }\n}\nvoid setServoAngles(int angle1, int angle2, int angle3) {\n  servo1.write(angle1);\n  servo2.write(angle2);\n  servo3.write(angle3);\n}",
        "hardware_lst": [
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            3
        ]
    },
    {
        "id": 67,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two servo motors (servo1, servo2) using a push button (btn1). The servos should alternate their positions between 0° and 180° each time the button is pressed. Specifically, when the button is pressed, servo1 should move to 180° and servo2 should move to 0°, and vice versa on the next press.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, both servos (servo1, servo2) should be set to 0°.\nButton Interaction: Each press of the button (btn1) should toggle the positions of the servos. If servo1 is at 0° and servo2 is at 180°, pressing the button should move servo1 to 180° and servo2 to 0°. The next press should reverse their positions again.\nDebouncing: The button press should be debounced to avoid false triggers caused by mechanical vibrations.\nServo Movement: The servos should move smoothly to their new positions after each button press.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:3",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:4",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nconst int BUTTON_PIN = 2;  \nconst int SERVO1_PIN = 3;  \nconst int SERVO2_PIN = 4;  \nint servo1Pos = 0;         \nint servo2Pos = 180;       \nbool buttonState = HIGH;   \nbool lastButtonState = HIGH; \nunsigned long lastDebounceTime = 0; \nconst unsigned long debounceDelay = 150; \nvoid setup() {\n  pinMode(BUTTON_PIN, INPUT_PULLUP);\n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  servo1.write(servo1Pos);\n  servo2.write(servo2Pos);\n}\nvoid loop() {\n  int reading = digitalRead(BUTTON_PIN);\n  if (reading != lastButtonState) {\n    lastDebounceTime = millis();\n  }\n  if ((millis() - lastDebounceTime) > debounceDelay) {\n    if (reading != buttonState) {\n      buttonState = reading;\n      if (buttonState == LOW) {\n        toggleServoPositions();\n      }\n    }\n  }\n  lastButtonState = reading;\n}\nvoid toggleServoPositions() {\n  if (servo1Pos == 0 && servo2Pos == 180) {\n    servo1Pos = 180;\n    servo2Pos = 0;\n  } else {\n    servo1Pos = 0;\n    servo2Pos = 180;\n  }\n  servo1.write(servo1Pos);\n  servo2.write(servo2Pos);\n  delay(200);  \n}",
        "hardware_lst": [
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
            2
        ]
    },
    {
        "id": 68,
        "problem": "\n  \n**Task**:  \nYou are tasked with programming an Arduino (uno) to control an RGB LED (rgb1) using three pushbuttons (btn1, btn2, btn3) and three slide potentiometers (pot1, pot2, pot3). Each button corresponds to a color channel (red, green, blue), and its associated potentiometer adjusts the intensity of that color. The RGB LED must display the combined color based on the selected channels.  \n\n**Detail Rules**:  \n1. **Initialization**: The RGB LED (rgb1) starts in an off state (all color channels at 0).  \n2. **Button Interaction**:  \n   - Pressing **btn1** activates the red channel. While held, the red intensity is controlled by **pot1** (0-255).  \n   - Pressing **btn2** activates the green channel. While held, the green intensity is controlled by **pot2** (0-255).  \n   - Pressing **btn3** activates the blue channel. While held, the blue intensity is controlled by **pot3** (0-255).  \n3. **Real-Time Adjustment**: While a button is held, the corresponding potentiometer updates its color intensity continuously. The RGB LED (rgb1) reflects these changes immediately.  \n4. **State Retention**: Releasing a button locks the current intensity of its associated color channel. The LED maintains the combined color until another adjustment is made.  \n5. **Debouncing**: Each button press must be debounced to avoid false triggers (0.15-second press duration).  \n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn3",
                        "top": -195.4,
                        "left": 190.8,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -408.8,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn3:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn3:1.l",
                        "green"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb1:B",
                        "blue"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int BTN_RED = 2;    \nconst int BTN_GREEN = 3;  \nconst int BTN_BLUE = 4;   \nconst int POT_RED = A3;   \nconst int POT_GREEN = A4; \nconst int POT_BLUE = A5;  \nconst int LED_RED = 5;  \nconst int LED_GREEN = 6;  \nconst int LED_BLUE = 7;  \nint red = 0;  \nint green = 0;  \nint blue = 0;  \nvoid setup() {  \n  pinMode(BTN_RED, INPUT_PULLUP);  \n  pinMode(BTN_GREEN, INPUT_PULLUP);  \n  pinMode(BTN_BLUE, INPUT_PULLUP);  \n  pinMode(LED_RED, OUTPUT);  \n  pinMode(LED_GREEN, OUTPUT);  \n  pinMode(LED_BLUE, OUTPUT);  \n}  \nvoid loop() {  \n  checkButton(BTN_RED, POT_RED, &red);  \n  checkButton(BTN_GREEN, POT_GREEN, &green);  \n  checkButton(BTN_BLUE, POT_BLUE, &blue);  \n  updateLED();  \n}  \nvoid checkButton(int buttonPin, int potPin, int *color) {  \n  if (digitalRead(buttonPin) == LOW) {  \n    delay(100);  \n    if (digitalRead(buttonPin) == LOW) {  \n      while (digitalRead(buttonPin) == LOW) {  \n        *color = map(analogRead(potPin), 0, 1023, 0, 255);  \n        updateLED();  \n        delay(10);  \n      }  \n    }  \n  }  \n}  \nvoid updateLED() {  \n  analogWrite(LED_RED, red);  \n  analogWrite(LED_GREEN, green);  \n  analogWrite(LED_BLUE, blue);  \n}  ",
        "hardware_lst": [
            0,
            3,
            1,
            0,
            0,
            3,
            0,
            0,
            0
        ]
    },
    {
        "id": 69,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an RGB LED (rgb1) using a push button (btn1) and a slide potentiometer (pot1). The RGB LED's color channels (Red, Green, Blue) are cycled through with each button press, and the potentiometer adjusts the brightness of the currently selected color channel.\n\n**Detail Rules**:\n1. **Initialization**: Upon powering on or resetting, the RGB LED (rgb1) must remain off.\n2. **Button Interaction**:\n   - Each debounced press of the button (btn1) cycles through the RGB channels in the order: Red → Green → Blue → Red...\n   - The first button press activates the Red channel, subsequent presses cycle to the next channel.\n3. **Brightness Control**:\n   - The slide potentiometer (pot1) adjusts the brightness of the currently selected color channel (0-255).\n   - Unselected channels must remain off.\n4. **State Stability**:\n   - The RGB LED updates continuously as the potentiometer is adjusted.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:3",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:4",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:5",
                        "rgb1:B",
                        "blue"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int BUTTON_PIN = 2;  \nconst int POT_PIN = A3;   \nconst int RED_PIN = 3;    \nconst int GREEN_PIN = 4;  \nconst int BLUE_PIN = 5;   \nint currentMode = -1; \nint lastButtonState = HIGH;\nint currentButtonState = HIGH;\nunsigned long lastDebounceTime = 0;\nconst int DEBOUNCE_DELAY = 50; \nvoid setup() {\n  pinMode(BUTTON_PIN, INPUT_PULLUP);\n  pinMode(RED_PIN, OUTPUT);\n  pinMode(GREEN_PIN, OUTPUT);\n  pinMode(BLUE_PIN, OUTPUT);\n  analogWrite(RED_PIN, 0);\n  analogWrite(GREEN_PIN, 0);\n  analogWrite(BLUE_PIN, 0);\n}\nvoid loop() {\n  int reading = digitalRead(BUTTON_PIN);\n  if (reading != lastButtonState) {\n    lastDebounceTime = millis(); \n  }\n  if ((millis() - lastDebounceTime) > DEBOUNCE_DELAY) {\n    if (reading != currentButtonState) {\n      currentButtonState = reading;\n      if (currentButtonState == LOW) {\n        if (currentMode == -1) {\n          currentMode = 0; \n        } else {\n          currentMode = (currentMode + 1) % 3; \n        }\n      }\n    }\n  }\n  lastButtonState = reading; \n  int brightness = map(analogRead(POT_PIN), 0, 1023, 0, 255);\n  switch (currentMode) {\n    case -1: \n      analogWrite(RED_PIN, 0);\n      analogWrite(GREEN_PIN, 0);\n      analogWrite(BLUE_PIN, 0);\n      break;\n    case 0: \n      analogWrite(RED_PIN, brightness);\n      analogWrite(GREEN_PIN, 0);\n      analogWrite(BLUE_PIN, 0);\n      break;\n    case 1: \n      analogWrite(RED_PIN, 0);\n      analogWrite(GREEN_PIN, brightness);\n      analogWrite(BLUE_PIN, 0);\n      break;\n    case 2: \n      analogWrite(RED_PIN, 0);\n      analogWrite(GREEN_PIN, 0);\n      analogWrite(BLUE_PIN, brightness);\n      break;\n  }\n}",
        "hardware_lst": [
            0,
            1,
            1,
            0,
            0,
            1,
            0,
            0,
            0
        ]
    },
    {
        "id": 70,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a servo motor (servo1) using three push buttons (btn1, btn2, btn3) and three slide potentiometers (pot1, pot2, pot3). The servo motor's position will be controlled by the potentiometers, and the buttons will determine which potentiometer is active for controlling the servo. Each button corresponds to one potentiometer, and pressing a button will enable the corresponding potentiometer to control the servo's position.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the servo motor (servo1) should be at its default position (0 degrees).\nButton Interaction:\n1. Pressing btn1 will enable pot1 to control the servo's position. The servo's position will be mapped to the value of pot1 (0 to 1023) and set to a corresponding angle between 0 and 180 degrees.\n2. Pressing btn2 will enable pot2 to control the servo's position. The servo's position will be mapped to the value of pot2 (0 to 1023) and set to a corresponding angle between 0 and 180 degrees.\n3. Pressing btn3 will enable pot3 to control the servo's position. The servo's position will be mapped to the value of pot3 (0 to 1023) and set to a corresponding angle between 0 and 180 degrees.\n4. Only one potentiometer can be active at a time. The last button pressed determines which potentiometer is active.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn3",
                        "top": -195.4,
                        "left": 190.8,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -408.8,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn3:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn3:1.l",
                        "green"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black"
                    ],
                    [
                        "mega:5",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;  \nconst int BUTTON1_PIN = 2;  \nconst int BUTTON2_PIN = 3;  \nconst int BUTTON3_PIN = 4;  \nconst int POT1_PIN = A3;    \nconst int POT2_PIN = A4;    \nconst int POT3_PIN = A5;    \nint activePot = POT1_PIN;    \nvoid setup() {\n  pinMode(BUTTON1_PIN, INPUT_PULLUP);\n  pinMode(BUTTON2_PIN, INPUT_PULLUP);\n  pinMode(BUTTON3_PIN, INPUT_PULLUP);\n  servo1.attach(5);  \n  servo1.write(0);   \n}\nvoid loop() {\n  if (digitalRead(BUTTON1_PIN) == LOW) {\n    delay(100);  \n    if (digitalRead(BUTTON1_PIN) == LOW) {\n      activePot = POT1_PIN;  \n      while (digitalRead(BUTTON1_PIN) == LOW);  \n    }\n  }\n  if (digitalRead(BUTTON2_PIN) == LOW) {\n    delay(100);  \n    if (digitalRead(BUTTON2_PIN) == LOW) {\n      activePot = POT2_PIN;  \n      while (digitalRead(BUTTON2_PIN) == LOW);  \n    }\n  }\n  if (digitalRead(BUTTON3_PIN) == LOW) {\n    delay(100);  \n    if (digitalRead(BUTTON3_PIN) == LOW) {\n      activePot = POT3_PIN;  \n      while (digitalRead(BUTTON3_PIN) == LOW);  \n    }\n  }\n  int potValue = analogRead(activePot);  \n  int angle = map(potValue, 0, 1023, 0, 180);  \n  servo1.write(angle);  \n}",
        "hardware_lst": [
            0,
            3,
            0,
            0,
            0,
            3,
            0,
            0,
            1
        ]
    },
    {
        "id": 71,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two servo motors (servo1, servo2) using two push buttons (btn1, btn2) and two slide potentiometers (pot1, pot2). The servo motors should rotate to specific angles based on the values of the potentiometers when the corresponding buttons are pressed. Each button controls one servo motor, and the potentiometers determine the target angle for the respective servo.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, both servo motors (servo1, servo2) should be set to their initial position (0 degrees).\nButton and Potentiometer Interaction:\n1. When the first button (btn1) is pressed, the first servo motor (servo1) should rotate to an angle determined by the value of the first potentiometer (pot1). The potentiometer value should be mapped to a range of 0 to 180 degrees.\n2. When the second button (btn2) is pressed, the second servo motor (servo2) should rotate to an angle determined by the value of the second potentiometer (pot2). The potentiometer value should also be mapped to a range of 0 to 180 degrees.\n3. The servo motors should maintain their positions until the corresponding button is pressed again with a new potentiometer value.\n4. Each button press should be debounced to avoid false triggers caused by mechanical vibrations.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "mega:4",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:5",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nconst int BUTTON1_PIN = 2;  \nconst int BUTTON2_PIN = 3;  \nconst int POT1_PIN = A3;    \nconst int POT2_PIN = A4;    \nconst int SERVO1_PIN = 4;   \nconst int SERVO2_PIN = 5;   \nint angle1 = 0;\nint angle2 = 0;\nvoid setup() {\n  pinMode(BUTTON1_PIN, INPUT_PULLUP);\n  pinMode(BUTTON2_PIN, INPUT_PULLUP);\n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  servo1.write(0);\n  servo2.write(0);\n}\nvoid loop() {\n  if (digitalRead(BUTTON1_PIN) == LOW) {\n    delay(100); \n    if (digitalRead(BUTTON1_PIN) == LOW) {\n      angle1 = map(analogRead(POT1_PIN), 0, 1023, 0, 180);\n      servo1.write(angle1);\n    }\n  }\n  if (digitalRead(BUTTON2_PIN) == LOW) {\n    delay(100); \n    if (digitalRead(BUTTON2_PIN) == LOW) {\n      angle2 = map(analogRead(POT2_PIN), 0, 1023, 0, 180);\n      servo2.write(angle2);\n    }\n  }\n}",
        "hardware_lst": [
            0,
            2,
            0,
            0,
            0,
            2,
            0,
            0,
            2
        ]
    },
    {
        "id": 72,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 10-segment LED bar graph (bargraph1) using a push button (btn1). The bar graph will display a progress level that increases with each button press, cycling from 0 to 10 lit LEDs and then resetting.\n\n**Detail Rules**:\n1. **Initialization**:  \n   - All LEDs in the bar graph (bargraph1) must be off when the system starts or resets.\n\n2. **Button Interaction**:  \n   - Each valid press of the button (btn1) increases the number of lit LEDs by 1.  \n   - After reaching 10 lit LEDs, the next press resets the display to 0 lit LEDs.  \n\n3. **Debouncing**:  \n   - The button must ignore mechanical vibrations by enforcing a **0.15-second** debounce period.  \n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:3",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int BUTTON_PIN = 2;  \nint currentLevel = 0;\nunsigned long lastDebounceTime = 0;\nconst int DEBOUNCE_DELAY = 50; \nint lastButtonState = HIGH;    \nint currentButtonState = HIGH; \nvoid setup() {\n  for (int i = 3; i <= 12; i++) {  \n    pinMode(i, OUTPUT);\n    digitalWrite(i, LOW);\n  }\n  pinMode(BUTTON_PIN, INPUT_PULLUP);\n}\nvoid loop() {\n  int reading = digitalRead(BUTTON_PIN); \n  if (reading != lastButtonState) {\n    lastDebounceTime = millis(); \n  }\n  if ((millis() - lastDebounceTime) > DEBOUNCE_DELAY) {\n    if (reading != currentButtonState) {\n      currentButtonState = reading;\n      if (currentButtonState == LOW) {\n        currentLevel = (currentLevel + 1) % 11; \n        for (int i = 3; i <= 12; i++) {  \n          digitalWrite(i, (i - 2 <= currentLevel) ? HIGH : LOW);  \n        }\n      }\n    }\n  }\n  lastButtonState = reading; \n}",
        "hardware_lst": [
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 73,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a servo motor (servo1) and a LED bar graph (bargraph1) using three push buttons (btn1, btn2, btn3). The servo motor will rotate to specific angles based on the button pressed, and the LED bar graph will visually indicate the current angle of the servo motor. Each button corresponds to a specific angle, and the LED bar graph will light up proportionally to the angle.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the servo motor (servo1) should be at 0 degrees, and the LED bar graph (bargraph1) should be off.\nButton Interaction:\n1. When btn1 is pressed, the servo motor (servo1) should rotate to 30 degrees. The LED bar graph (bargraph1) should light up the first 3 LEDs to indicate the angle.\n2. When btn2 is pressed, the servo motor (servo1) should rotate to 60 degrees. The LED bar graph (bargraph1) should light up the first 6 LEDs to indicate the angle.\n3. When btn3 is pressed, the servo motor (servo1) should rotate to 90 degrees. The LED bar graph (bargraph1) should light up all 10 LEDs to indicate the angle.\nState Maintenance: Each state (angle and corresponding LED bar graph display) should be maintained for at least 2 seconds to allow for verification.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn3",
                        "top": -195.4,
                        "left": 190.8,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn3:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn3:1.l",
                        "green"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ],
                    [
                        "mega:45",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nconst int BUTTON1_PIN = 2;  \nconst int BUTTON2_PIN = 3;  \nconst int BUTTON3_PIN = 4;  \nconst int BARGRAPH1_PINS[] = {5, 6, 7, 8, 9, 10, 11, 12, 13, 44};  \nvoid setup() {\n  servo1.attach(45);  \n  pinMode(BUTTON1_PIN, INPUT_PULLUP);\n  pinMode(BUTTON2_PIN, INPUT_PULLUP);\n  pinMode(BUTTON3_PIN, INPUT_PULLUP);\n  for (int i = 0; i < 10; i++) {\n    pinMode(BARGRAPH1_PINS[i], OUTPUT);\n    digitalWrite(BARGRAPH1_PINS[i], LOW);\n  }\n  servo1.write(0);\n}\nvoid loop() {\n  if (digitalRead(BUTTON1_PIN) == LOW) {\n    delay(100);\n    if (digitalRead(BUTTON1_PIN) == HIGH) {\n      servo1.write(30);\n      updateBarGraph(3);\n    }\n  }\n  if (digitalRead(BUTTON2_PIN) == LOW) {\n    delay(100);\n    if (digitalRead(BUTTON2_PIN) == HIGH) {\n      servo1.write(60);\n      updateBarGraph(6);\n    }\n  }\n  if (digitalRead(BUTTON3_PIN) == LOW) {\n    delay(100);\n    if (digitalRead(BUTTON3_PIN) == HIGH) {\n      servo1.write(90);\n      updateBarGraph(10);\n    }\n  }\n}\nvoid updateBarGraph(int numLEDs) {\n  for (int i = 0; i < 10; i++) {\n    digitalWrite(BARGRAPH1_PINS[i], i < numLEDs ? HIGH : LOW);\n  }\n}",
        "hardware_lst": [
            0,
            3,
            0,
            0,
            1,
            0,
            0,
            0,
            1
        ]
    },
    {
        "id": 74,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two servo motors (servo1, servo2) and a 10-segment LED bar graph (bargraph1) using a push button (btn1). The servos will alternate between three distinct positions, while the LED bar graph will visually indicate the current state. Each button press will advance the system to the next state.\n\n**Detail Rules**:\nInitialization:  \n- Both servos (servo1, servo2) start at 0° position.  \n- All segments of the LED bar graph (bargraph1) remain off.  \n\nState Transitions:  \n1. **State 0** (Initial):  \n   - Servo1 at 0°, Servo2 at 180°.  \n   - All LEDs off.  \n   - Maintained for **2 seconds** after initialization.  \n\n2. **State 1** (First button press):  \n   - Servo1 at 90°, Servo2 at 90°.  \n   - First 5 LEDs of the bar graph lit.  \n   - Maintained for **2 seconds**.  \n\n3. **State 2** (Second button press):  \n   - Servo1 at 180°, Servo2 at 0°.  \n   - All 10 LEDs of the bar graph lit.  \n   - Maintained for **2 seconds**.  \n\n4. **State 0** (Third button press):  \n   - Returns to initial configuration, repeating the cycle.  \n\nButton Interaction:  \n- Each valid button press (debounced for 0.15 seconds) advances the system to the next state.  \n- State transitions are locked for **2 seconds** after each button press to ensure stability.  \n- The LED bar graph and servo positions must update immediately after a valid state transition.  \n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:3",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:4",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\n#define DEBOUNCE_DELAY 150\n#define STATE_DELAY 2000\nServo servo1, servo2;\nconst int btnPin = 2;  \nconst int servo1Pin = 3, servo2Pin = 4;  \nconst int leds[] = {5, 6, 7, 8, 9, 10, 11, 12, 13, 44};  \nint state = 0;\nunsigned long lastStateTime = 0;\nbool btnActive = false;\nvoid setup() {\n  servo1.attach(servo1Pin);\n  servo2.attach(servo2Pin);\n  pinMode(btnPin, INPUT_PULLUP);\n  for (int i = 0; i < 10; i++) pinMode(leds[i], OUTPUT);\n  updateHardware(0);  \n}\nvoid loop() {\n  if (digitalRead(btnPin) == LOW && !btnActive && \n     (millis() - lastStateTime) > STATE_DELAY) {\n    delay(DEBOUNCE_DELAY);\n    if (digitalRead(btnPin) == LOW) {\n      btnActive = true;\n      state = (state + 1) % 3;\n      updateHardware(state);\n      lastStateTime = millis();\n    }\n  } \n  else if (digitalRead(btnPin) == HIGH) {\n    btnActive = false;\n  }\n}\nvoid updateHardware(int s) {\n  switch(s) {\n    case 0:  \n      servo1.write(0);\n      servo2.write(180);\n      for (int i = 0; i < 10; i++) digitalWrite(leds[i], LOW);\n      break;\n    case 1:  \n      servo1.write(90);\n      servo2.write(90);\n      for (int i = 0; i < 5; i++) digitalWrite(leds[i], HIGH);\n      for (int i = 5; i < 10; i++) digitalWrite(leds[i], LOW);\n      break;\n    case 2:  \n      servo1.write(180);\n      servo2.write(0);\n      for (int i = 0; i < 10; i++) digitalWrite(leds[i], HIGH);\n      break;\n  }\n}",
        "hardware_lst": [
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            2
        ]
    },
    {
        "id": 75,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 10-segment LED bar graph (bargraph1) using two slide potentiometers (pot1, pot2) and a pushbutton (btn1). The LED bar graph will display a value determined by the selected potentiometer, and the pushbutton will toggle between the two potentiometers as the active input source.\n\n**Detail Rules**:\n1. **Initialization**: All LEDs in the bar graph (bargraph1) must be off when the system starts or resets.\n2. **Button Interaction**:\n   - Each valid press of the button (btn1) toggles the active input between pot1 and pot2. (First press selects pot1, second press selects pot2, and so on.)\n   - A valid press is defined as a button state change lasting at least 0.15 seconds to account for debouncing.\n3. **Display Behavior**:\n   - When pot1 is active, the number of lit LEDs corresponds to its analog value (0-1023 mapped to 0-10 LEDs). (from pin:A1 to A10)\n   - When pot2 is active, the number of lit LEDs corresponds to its analog value (0-1023 mapped to 0-10 LEDs). (from pin:A1 to A10)\n   - The bar graph must update continuously to reflect the current potentiometer value.\n4. **Boundary Conditions**: If a potentiometer's value maps to 0, all LEDs must remain off. If it maps to 10, all LEDs must be fully lit.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "mega:3",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int BUTTON_PIN = 2;  \nconst int POT1_PIN = A3;   \nconst int POT2_PIN = A4;   \nconst int LED_PINS[] = {3, 4, 5, 6, 7, 8, 9, 10, 11, 12};  \nbool usePot1 = true;\nint lastButtonState = HIGH;\nunsigned long lastDebounceTime = 0;\nunsigned long modeChangeTime = 0;\nvoid setup() {\n  for (int i = 0; i < 10; i++) {\n    pinMode(LED_PINS[i], OUTPUT);\n  }\n  pinMode(BUTTON_PIN, INPUT_PULLUP);\n}\nvoid loop() {\n  int buttonState = digitalRead(BUTTON_PIN);\n  if (buttonState != lastButtonState) {\n    lastDebounceTime = millis();\n  }\n  if ((millis() - lastDebounceTime) > 150) {\n    if (buttonState == LOW && (millis() - modeChangeTime) > 2000) {\n      usePot1 = !usePot1;\n      modeChangeTime = millis();\n    }\n  }\n  lastButtonState = buttonState;\n  int activeValue = usePot1 ? analogRead(POT1_PIN) : analogRead(POT2_PIN);\n  int ledCount = map(activeValue, 0, 1023, 0, 10);\n  for (int i = 0; i < 10; i++) {\n    digitalWrite(LED_PINS[i], (i < ledCount) ? HIGH : LOW);\n  }\n}",
        "hardware_lst": [
            0,
            1,
            0,
            0,
            1,
            2,
            0,
            0,
            0
        ]
    },
    {
        "id": 76,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 7-segment display (sevseg1) using a shift register (sr1), two servos (servo1, servo2), and three push buttons (btn1, btn2, btn3). The 7-segment display will show a number between 0 and 9, and the servos will rotate to specific angles based on the displayed number. Each push button will increment the displayed number by 1, 2, or 3, respectively. If the number exceeds 9, it should reset to 0.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment display should show \"0\", and both servos should be at their 0-degree position.\nButton Interaction:\n1. Pressing btn1 increments the displayed number by 1.\n2. Pressing btn2 increments the displayed number by 2.\n3. Pressing btn3 increments the displayed number by 3.\nReset Condition: If the number exceeds 9 after incrementing, it should reset to 0.\nServo Control: The servos should rotate to specific angles based on the displayed number:\n- For numbers 0-4: servo1 rotates to 0 degrees, and servo2 rotates to 90 degrees.\n- For numbers 5-9: servo1 rotates to 90 degrees, and servo2 rotates to 180 degrees.\nDisplay Update: The 7-segment display should immediately update to reflect the new number after each button press.\nServo Update: The servos should immediately rotate to their new positions after the number is updated.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn3",
                        "top": -195.4,
                        "left": 190.8,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn3:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn3:1.l",
                        "green"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "mega:5",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:6",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nconst int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int BUTTON1_PIN = 2;  \nconst int BUTTON2_PIN = 3;  \nconst int BUTTON3_PIN = 4;  \nconst int SERVO1_PIN = 5;   \nconst int SERVO2_PIN = 6;   \nServo servo1;\nServo servo2;\nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nint currentNumber = 0;\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(BUTTON1_PIN, INPUT_PULLUP);\n  pinMode(BUTTON2_PIN, INPUT_PULLUP);\n  pinMode(BUTTON3_PIN, INPUT_PULLUP);\n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  displayNumber(currentNumber);\n  updateServos(currentNumber);\n}\nvoid loop() {\n  if (digitalRead(BUTTON1_PIN) == LOW) {\n    delay(150); \n    if (digitalRead(BUTTON1_PIN) == LOW) {\n      currentNumber += 1;\n      if (currentNumber > 9) currentNumber = 0;\n      updateDisplayAndServos();\n      while (digitalRead(BUTTON1_PIN) == LOW); \n    }\n  }\n  if (digitalRead(BUTTON2_PIN) == LOW) {\n    delay(150); \n    if (digitalRead(BUTTON2_PIN) == LOW) {\n      currentNumber += 2;\n      if (currentNumber > 9) currentNumber = 0;\n      updateDisplayAndServos();\n      while (digitalRead(BUTTON2_PIN) == LOW); \n    }\n  }\n  if (digitalRead(BUTTON3_PIN) == LOW) {\n    delay(150); \n    if (digitalRead(BUTTON3_PIN) == LOW) {\n      currentNumber += 3;\n      if (currentNumber > 9) currentNumber = 0;\n      updateDisplayAndServos();\n      while (digitalRead(BUTTON3_PIN) == LOW); \n    }\n  }\n}\nvoid updateDisplayAndServos() {\n  displayNumber(currentNumber);\n  updateServos(currentNumber);\n}\nvoid displayNumber(int number) {\n  byte code = segmentCodes[number];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, code);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateServos(int number) {\n  if (number >= 0 && number <= 4) {\n    servo1.write(0);\n    servo2.write(90);\n  } else if (number >= 5 && number <= 9) {\n    servo1.write(90);\n    servo2.write(180);\n  }\n}",
        "hardware_lst": [
            0,
            3,
            0,
            1,
            0,
            0,
            0,
            1,
            2
        ]
    },
    {
        "id": 77,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 7-segment display (sevseg1) using a shift register (sr1), two servo motors (servo1, servo2), and a push button (btn1). The 7-segment display will show a number that increments by 1 each time the button is pressed. Simultaneously, the two servo motors will rotate to specific angles based on the displayed number. The servos should move to 0° when the number is even and to 90° when the number is odd.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment display should show \"0\", and both servo motors (servo1, servo2) should be at 0°.\nButton Interaction: Each press of the button (btn1) should increment the displayed number by 1. The number should be displayed on the 7-segment display (sevseg1).\nServo Movement: After each button press, the two servo motors (servo1, servo2) should move to 0° if the displayed number is even or to 90° if the displayed number is odd.\nReset Condition: If the number exceeds 9 after incrementing, it should reset to 0.\nDisplay Update: The 7-segment display should immediately update to reflect the new number after each button press.\nServo Update: The servo motors should move to their new positions immediately after the number is updated.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "mega:3",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:4",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nconst int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int BUTTON_PIN = 2;  \nconst int SERVO1_PIN = 3;  \nconst int SERVO2_PIN = 4;  \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nint currentNumber = 0;\nServo servo1;\nServo servo2;\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(BUTTON_PIN, INPUT_PULLUP); \n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  displayNumber(currentNumber);\n  moveServos(currentNumber);\n}\nvoid loop() {\n  if (digitalRead(BUTTON_PIN) == LOW) {\n    delay(150); \n    if (digitalRead(BUTTON_PIN) == LOW) {\n      currentNumber++;\n      if (currentNumber > 9) {\n        currentNumber = 0;\n      }\n      displayNumber(currentNumber);\n      moveServos(currentNumber);\n      while (digitalRead(BUTTON_PIN) == LOW); \n    }\n  }\n}\nvoid displayNumber(int number) {\n  byte code = segmentCodes[number];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, code);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid moveServos(int number) {\n  if (number % 2 == 0) {\n    servo1.write(0);\n    servo2.write(0);\n  } else {\n    servo1.write(90);\n    servo2.write(90);\n  }\n}",
        "hardware_lst": [
            0,
            1,
            0,
            1,
            0,
            0,
            0,
            1,
            2
        ]
    },
    {
        "id": 78,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two 7-segment displays (sevseg1, sevseg2) using two shift registers (sr1, sr2). The displays will show a two-digit number that can be incremented or decremented using two push buttons (btn1, btn2). Additionally, two slide potentiometers (pot1, pot2) will control the speed at which the number increments or decrements when the buttons are held down. The potentiometers will also determine the initial value displayed on the 7-segment displays.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment displays should show a two-digit number determined by the values of the potentiometers (pot1, pot2). The value of pot1 will determine the tens digit, and the value of pot2 will determine the units digit. The number should be between 00 and 99. The speed of of incrementing or decrementing the number when the buttons are held down is from 0.1 to 1.0 seconds, determined by the value of the potentiometers.\n\nButton Interaction:\n1. The first button (btn1) will increment the displayed number by 1 each time it is pressed. If the button is held down, the number will continue to increment at a speed determined by the value of pot1.\n2. The second button (btn2) will decrement the displayed number by 1 each time it is pressed. If the button is held down, the number will continue to decrement at a speed determined by the value of pot2.\n3. If the number exceeds 99 after incrementing, it should reset to 00.\n4. If the number goes below 00 after decrementing, it should reset to 99.\nDisplay Update: The 7-segment displays should immediately update to reflect the new number after each button press or potentiometer adjustment.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int BUTTON1_PIN = 2;  \nconst int BUTTON2_PIN = 3;  \nconst int POT1_PIN = A3;    \nconst int POT2_PIN = A4;    \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nint currentNumber = 0;\nunsigned long lastIncrementTime = 0;\nunsigned long lastDecrementTime = 0;\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(BUTTON1_PIN, INPUT_PULLUP);\n  pinMode(BUTTON2_PIN, INPUT_PULLUP);\n  currentNumber = (analogRead(POT1_PIN) / 102.3) * 10 + (analogRead(POT2_PIN) / 102.3);\n  displayNumber(currentNumber);\n}\nvoid loop() {\n  int pot1Value = analogRead(POT1_PIN);\n  int pot2Value = analogRead(POT2_PIN);\n  int incrementSpeed = map(pot1Value, 0, 1023, 100, 1000); \n  int decrementSpeed = map(pot2Value, 0, 1023, 100, 1000); \n  if (digitalRead(BUTTON1_PIN) == LOW) {\n    if (millis() - lastIncrementTime > incrementSpeed) {\n      currentNumber++;\n      if (currentNumber > 99) {\n        currentNumber = 0;\n      }\n      displayNumber(currentNumber);\n      lastIncrementTime = millis();\n    }\n  }\n  if (digitalRead(BUTTON2_PIN) == LOW) {\n    if (millis() - lastDecrementTime > decrementSpeed) {\n      currentNumber--;\n      if (currentNumber < 0) {\n        currentNumber = 99;\n      }\n      displayNumber(currentNumber);\n      lastDecrementTime = millis();\n    }\n  }\n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            0,
            2,
            0,
            2,
            0,
            2,
            0,
            2,
            0
        ]
    },
    {
        "id": 79,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two 7-segment displays (sevseg1, sevseg2) using two shift registers (sr1, sr2). The displays will show a two-digit number that can be incremented or decremented using three push buttons (btn1, btn2, btn3). Additionally, a slide potentiometer (pot1) will control the speed at which the number changes when a button is held down. The number should wrap around to 0 if it exceeds 99 or to 99 if it goes below 0.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment displays should show \"00\".\nButton Interaction:\n1. The first button (btn1) increments the displayed number by 1 each time it is pressed.\n2. The second button (btn2) decrements the displayed number by 1 each time it is pressed.\n3. The third button (btn3) resets the displayed number to 0 when pressed.\nSpeed Control: The slide potentiometer (pot1) controls the speed of incrementing or decrementing when a button is held down. The speed should range from 0.1 seconds to 1 second per step, based on the potentiometer's value.\nDisplay Update: The 7-segment displays should immediately update to reflect the new number after each button press or hold.\nWrap-around: If the number exceeds 99, it should reset to 0. If the number goes below 0, it should reset to 99.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn3",
                        "top": -195.4,
                        "left": 190.8,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn3:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn3:1.l",
                        "green"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int BUTTON1_PIN = 2; \nconst int BUTTON2_PIN = 3; \nconst int BUTTON3_PIN = 4; \nconst int POT_PIN = A3;    \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nint currentNumber = 0;\nunsigned long lastChangeTime = 0;\nint changeDelay = 1000; \nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(BUTTON1_PIN, INPUT_PULLUP);\n  pinMode(BUTTON2_PIN, INPUT_PULLUP);\n  pinMode(BUTTON3_PIN, INPUT_PULLUP);\n  displayNumber(currentNumber);\n}\nvoid loop() {\n  int potValue = analogRead(POT_PIN);\n  changeDelay = map(potValue, 0, 1023, 100, 1000); \n  if (digitalRead(BUTTON1_PIN) == LOW) {\n    if (millis() - lastChangeTime > changeDelay) {\n      currentNumber++;\n      if (currentNumber > 99) currentNumber = 0;\n      displayNumber(currentNumber);\n      lastChangeTime = millis();\n    }\n  }\n  if (digitalRead(BUTTON2_PIN) == LOW) {\n    if (millis() - lastChangeTime > changeDelay) {\n      currentNumber--;\n      if (currentNumber < 0) currentNumber = 99;\n      displayNumber(currentNumber);\n      lastChangeTime = millis();\n    }\n  }\n  if (digitalRead(BUTTON3_PIN) == LOW) {\n    currentNumber = 0;\n    displayNumber(currentNumber);\n    while (digitalRead(BUTTON3_PIN) == LOW); \n  }\n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            0,
            3,
            0,
            2,
            0,
            1,
            0,
            2,
            0
        ]
    },
    {
        "id": 80,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 7-segment display (sevseg1), a push button (btn1), and a 10-segment LED bar graph (bargraph1). The 7-segment display will show a number between 0 and 9, and the LED bar graph will visually represent the same number by lighting up the corresponding number of LEDs. The push button will increment the displayed number by 1 each time it is pressed. If the number exceeds 9, it should reset to 0.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment display should show \"0\", and the LED bar graph should have no LEDs lit.\nButton Interaction: Each press of the button (btn1) should increment the displayed number by 1. The number should be displayed on the 7-segment display (sevseg1), and the corresponding number of LEDs on the LED bar graph (bargraph1) should light up.\nReset Condition: If the number exceeds 9 after incrementing, both the 7-segment display and the LED bar graph should reset to \"0\" and no LEDs lit, respectively.\nDisplay Update: The 7-segment display and the LED bar graph should immediately update to reflect the new number after each button press.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "mega:3",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int BUTTON_PIN = 2; \nconst int BARGRAPH_PINS[] = {3, 4, 5, 6, 7, 8, 9, 10, 11, 12}; \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nint currentNumber = 0;\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(BUTTON_PIN, INPUT_PULLUP); \n  for (int i = 0; i < 10; i++) {\n    pinMode(BARGRAPH_PINS[i], OUTPUT);\n    digitalWrite(BARGRAPH_PINS[i], LOW); \n  }\n  displayNumber(currentNumber);\n  updateBargraph(currentNumber);\n}\nvoid loop() {\n  if (digitalRead(BUTTON_PIN) == LOW) {\n    delay(100); \n    if (digitalRead(BUTTON_PIN) == LOW) {\n      currentNumber++;\n      if (currentNumber > 9) {\n        currentNumber = 0;\n      }\n      displayNumber(currentNumber);\n      updateBargraph(currentNumber);\n      while (digitalRead(BUTTON_PIN) == LOW); \n    }\n  }\n}\nvoid displayNumber(int number) {\n  byte code = segmentCodes[number];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, code);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateBargraph(int number) {\n  for (int i = 0; i < 10; i++) {\n    digitalWrite(BARGRAPH_PINS[i], (i < number) ? HIGH : LOW);\n  }\n}",
        "hardware_lst": [
            0,
            1,
            0,
            1,
            1,
            0,
            0,
            1,
            0
        ]
    },
    {
        "id": 81,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a two-digit number using three pushbuttons (btn1, btn2, btn3), displayed on two 7-segment displays (sevseg1, sevseg2) via shift registers (sr1, sr2). The LED bar graph (bargraph1) must visually indicate the tens digit of the current number.\n\n**Detail Rules**:\n1. **Initialization**:  \n   - The 7-segment displays show \"00\".  \n   - All LEDs in the bar graph (bargraph1) are off.  \n\n2. **Button Interactions**:  \n   - **btn1**: Increment the number by 1. If the number exceeds 99, reset to 0.  \n   - **btn2**: Increment the number by 5. If the number exceeds 99, reset to 0.  \n   - **btn3**: Reset the number to 0 immediately.  \n\n3. **Display Updates**:  \n   - The 7-segment displays must update within 0.15 seconds after a valid button press.  \n   - The bar graph (bargraph1) must light up LEDs equal to the tens digit of the current number (e.g., 35 → 3 LEDs lit).  \n\n4. **Debouncing**:  \n   - Each button press must be debounced to prevent false triggers caused by mechanical vibrations.  \n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn3",
                        "top": -195.4,
                        "left": 190.8,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn3:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn3:1.l",
                        "green"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int BTN1_PIN = 2;  \nconst int BTN2_PIN = 3;  \nconst int BTN3_PIN = 4;  \nconst int BARGRAPH_START = 5;  \nconst int BARGRAPH_COUNT = 10;\nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nint currentNumber = 0;\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(BTN1_PIN, INPUT_PULLUP);\n  pinMode(BTN2_PIN, INPUT_PULLUP);\n  pinMode(BTN3_PIN, INPUT_PULLUP);\n  for (int i = 0; i < BARGRAPH_COUNT; i++) {\n    pinMode(BARGRAPH_START + i, OUTPUT);\n    digitalWrite(BARGRAPH_START + i, LOW);\n  }\n  displayNumber(currentNumber);\n  updateBargraph(currentNumber);\n}\nvoid loop() {\n  checkButton(BTN1_PIN, 1);\n  checkButton(BTN2_PIN, 5);\n  checkButton(BTN3_PIN, 0);\n}\nvoid checkButton(int pin, int increment) {\n  if (digitalRead(pin) == LOW) {\n    delay(150);\n    if (digitalRead(pin) == LOW) {\n      if (increment == 0) {\n        currentNumber = 0;\n      } else {\n        currentNumber += increment;\n        if (currentNumber > 99) currentNumber = 0;\n      }\n      displayNumber(currentNumber);\n      updateBargraph(currentNumber);\n      while (digitalRead(pin) == LOW);\n    }\n  }\n}\nvoid displayNumber(int num) {\n  int tens = num / 10;\n  int ones = num % 10;\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, segmentCodes[ones]);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, segmentCodes[tens]);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateBargraph(int num) {\n  int tens = num / 10;\n  for (int i = 0; i < BARGRAPH_COUNT; i++) {\n    digitalWrite(BARGRAPH_START + i, (i < tens) ? HIGH : LOW);\n  }\n}",
        "hardware_lst": [
            0,
            3,
            0,
            2,
            1,
            0,
            0,
            2,
            0
        ]
    },
    {
        "id": 82,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two servos (servo1, servo2) and an RGB LED (rgb1) using three push buttons (btn1, btn2, btn3). The RGB LED will display different colors based on the state of the servos, and the push buttons will control the movement of the servos and the color of the RGB LED.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, both servos (servo1, servo2) should be at their 0-degree position, and the RGB LED (rgb1) should be off.\nButton Interaction:\n1. The first button (btn1) will rotate servo1 (servo1) to 90 degrees and set the RGB LED (rgb1) to red.\n2. The second button (btn2) will rotate servo2 (servo2) to 90 degrees and set the RGB LED (rgb1) to green.\n3. The third button (btn3) will reset both servos (servo1, servo2) to their 0-degree position and set the RGB LED (rgb1) to blue.\nEach state (servo position and LED color) should be maintained for at least 2 seconds to allow for verification.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn3",
                        "top": -195.4,
                        "left": 190.8,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn3:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn3:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:8",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:9",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nconst int btn1Pin = 2;  \nconst int btn2Pin = 3;  \nconst int btn3Pin = 4;  \nconst int redPin = 5;   \nconst int greenPin = 6; \nconst int bluePin = 7;  \nconst int servo1Pin = 8; \nconst int servo2Pin = 9; \nvoid setup() {\n  pinMode(btn1Pin, INPUT_PULLUP);\n  pinMode(btn2Pin, INPUT_PULLUP);\n  pinMode(btn3Pin, INPUT_PULLUP);\n  pinMode(redPin, OUTPUT);\n  pinMode(greenPin, OUTPUT);\n  pinMode(bluePin, OUTPUT);\n  servo1.attach(servo1Pin);\n  servo2.attach(servo2Pin);\n  servo1.write(0);\n  servo2.write(0);\n  setColor(0, 0, 0); \n}\nvoid loop() {\n  if (digitalRead(btn1Pin) == LOW) {\n    delay(20); \n    if (digitalRead(btn1Pin) == LOW) {\n      servo1.write(90);\n      setColor(255, 0, 0); \n      delay(2000); \n      while (digitalRead(btn1Pin) == LOW); \n    }\n  }\n  if (digitalRead(btn2Pin) == LOW) {\n    delay(20); \n    if (digitalRead(btn2Pin) == LOW) {\n      servo2.write(90);\n      setColor(0, 255, 0); \n      delay(2000); \n      while (digitalRead(btn2Pin) == LOW); \n    }\n  }\n  if (digitalRead(btn3Pin) == LOW) {\n    delay(20); \n    if (digitalRead(btn3Pin) == LOW) {\n      servo1.write(0);\n      servo2.write(0);\n      setColor(0, 0, 255); \n      delay(2000); \n      while (digitalRead(btn3Pin) == LOW); \n    }\n  }\n}\nvoid setColor(int red, int green, int blue) {\n  analogWrite(redPin, red);\n  analogWrite(greenPin, green);\n  analogWrite(bluePin, blue);\n}",
        "hardware_lst": [
            0,
            3,
            1,
            0,
            0,
            0,
            0,
            0,
            2
        ]
    },
    {
        "id": 83,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two servos (servo1, servo2) and an RGB LED (rgb1) using two push buttons (btn1, btn2). The RGB LED will display different colors based on the state of the servos, and the push buttons will control the movement of the servos. Specifically:\n- Pressing btn1 will rotate servo1 to 90 degrees and change the RGB LED to red.\n- Pressing btn2 will rotate servo2 to 180 degrees and change the RGB LED to blue.\n- If both buttons are pressed simultaneously, both servos will return to their initial positions (0 degrees), and the RGB LED will turn green.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, both servos (servo1, servo2) should be at 0 degrees, and the RGB LED (rgb1) should be off.\nButton Interaction:\n1. When btn1 is pressed:\n   - Servo1 (servo1) should rotate to 90 degrees.\n   - The RGB LED (rgb1) should turn red.\n   - This state should be maintained for at least 2 seconds.\n2. When btn2 is pressed:\n   - Servo2 (servo2) should rotate to 180 degrees.\n   - The RGB LED (rgb1) should turn blue.\n   - This state should be maintained for at least 2 seconds.\n3. When one button is pressed and another button has already been pressed:\n   - Both servos (servo1, servo2) should return to 0 degrees.\n   - The RGB LED (rgb1) should turn green.\n   - Both buttons return to their unpressed state\n   - This state should be maintained for at least 2 seconds.\n4. If no buttons are pressed, the RGB LED (rgb1) should remain off, and the servos should stay in their current positions.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:4",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:5",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:6",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:7",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:8",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nconst int btn1Pin = 2;  \nconst int btn2Pin = 3;  \nconst int redPin = 4;   \nconst int greenPin = 5; \nconst int bluePin = 6;  \nbool btn1State = false; \nbool btn2State = false; \nvoid setup() {\n  pinMode(btn1Pin, INPUT_PULLUP);\n  pinMode(btn2Pin, INPUT_PULLUP);\n  pinMode(redPin, OUTPUT);\n  pinMode(greenPin, OUTPUT);\n  pinMode(bluePin, OUTPUT);\n  servo1.attach(7);  \n  servo2.attach(8);  \n  servo1.write(0);\n  servo2.write(0);\n  setRGB(0, 0, 0); \n}\nvoid loop() {\n  bool btn1Pressed = digitalRead(btn1Pin) == LOW;\n  bool btn2Pressed = digitalRead(btn2Pin) == LOW;\n  if (btn1Pressed && !btn1State) {\n    if (btn2State) {\n      resetState();\n    } else {\n      servo1.write(90);\n      setRGB(255, 0, 0); \n      delay(2000); \n      btn1State = true;\n    }\n  } else if (btn2Pressed && !btn2State) {\n    if (btn1State) {\n      resetState();\n    } else {\n      servo2.write(180);\n      setRGB(0, 0, 255); \n      delay(2000); \n      btn2State = true;\n    }\n  } \n}\nvoid resetState() {\n  servo1.write(0);\n  servo2.write(0);\n  setRGB(0, 255, 0); \n  delay(2000); \n  btn1State = false;\n  btn2State = false;\n}\nvoid setRGB(int red, int green, int blue) {\n  analogWrite(redPin, red);\n  analogWrite(greenPin, green);\n  analogWrite(bluePin, blue);\n}",
        "hardware_lst": [
            0,
            2,
            1,
            0,
            0,
            0,
            0,
            0,
            2
        ]
    },
    {
        "id": 84,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an RGB LED (rgb1) using three slide potentiometers (pot1, pot2, pot3) and two push buttons (btn1, btn2). The RGB LED's color will be determined by the values of the potentiometers, and the push buttons will allow you to cycle through different color modes. The RGB LED should display the color corresponding to the current mode and potentiometer values.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the RGB LED (rgb1) should be off.\nPotentiometer Interaction:\n1. The first potentiometer (pot1) controls the intensity of the red component of the RGB LED.\n2. The second potentiometer (pot2) controls the intensity of the green component of the RGB LED.\n3. The third potentiometer (pot3) controls the intensity of the blue component of the RGB LED.\nButton Interaction:\n1. The first button (btn1) cycles through the following modes:\n    - Mode 1: Only the red component is active.\n    - Mode 2: Only the green component is active.\n    - Mode 3: Only the blue component is active.\n    - Mode 4: All three components (red, green, blue) are active.\n2. The second button (btn2) resets the RGB LED to off and sets the mode back to Mode 1.\nDisplay Update: The RGB LED should immediately update to reflect the current mode and potentiometer values after each button press or potentiometer adjustment.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -408.8,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:4",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:5",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:6",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int RED_PIN = 4;       \nconst int GREEN_PIN = 5;     \nconst int BLUE_PIN = 6;       \nconst int BUTTON1_PIN = 2;    \nconst int BUTTON2_PIN = 3;    \nconst int POT1_PIN = A3;      \nconst int POT2_PIN = A4;      \nconst int POT3_PIN = A5;      \nint mode = 1;\nvoid setup() {\n  pinMode(RED_PIN, OUTPUT);\n  pinMode(GREEN_PIN, OUTPUT);\n  pinMode(BLUE_PIN, OUTPUT);\n  pinMode(BUTTON1_PIN, INPUT_PULLUP);\n  pinMode(BUTTON2_PIN, INPUT_PULLUP);\n  analogWrite(RED_PIN, 0);\n  analogWrite(GREEN_PIN, 0);\n  analogWrite(BLUE_PIN, 0);\n}\nvoid loop() {\n  int pot1Value = analogRead(POT1_PIN);\n  int pot2Value = analogRead(POT2_PIN);\n  int pot3Value = analogRead(POT3_PIN);\n  int redValue = map(pot1Value, 0, 1023, 0, 255);\n  int greenValue = map(pot2Value, 0, 1023, 0, 255);\n  int blueValue = map(pot3Value, 0, 1023, 0, 255);\n  if (digitalRead(BUTTON1_PIN) == LOW) {\n    delay(20);\n    if (digitalRead(BUTTON1_PIN) == LOW) {\n      mode++;\n      if (mode > 4) {\n        mode = 1;\n      }\n      while (digitalRead(BUTTON1_PIN) == LOW);\n    }\n  }\n  if (digitalRead(BUTTON2_PIN) == LOW) {\n    delay(20);\n    if (digitalRead(BUTTON2_PIN) == LOW) {\n      mode = 1;\n      analogWrite(RED_PIN, 0);\n      analogWrite(GREEN_PIN, 0);\n      analogWrite(BLUE_PIN, 0);\n      while (digitalRead(BUTTON2_PIN) == LOW);\n    }\n  }\n  switch (mode) {\n    case 1:\n      analogWrite(RED_PIN, redValue);\n      analogWrite(GREEN_PIN, 0);\n      analogWrite(BLUE_PIN, 0);\n      break;\n    case 2:\n      analogWrite(RED_PIN, 0);\n      analogWrite(GREEN_PIN, greenValue);\n      analogWrite(BLUE_PIN, 0);\n      break;\n    case 3:\n      analogWrite(RED_PIN, 0);\n      analogWrite(GREEN_PIN, 0);\n      analogWrite(BLUE_PIN, blueValue);\n      break;\n    case 4:\n      analogWrite(RED_PIN, redValue);\n      analogWrite(GREEN_PIN, greenValue);\n      analogWrite(BLUE_PIN, blueValue);\n      break;\n  }\n  delay(10);\n}",
        "hardware_lst": [
            0,
            2,
            1,
            0,
            0,
            3,
            0,
            0,
            0
        ]
    },
    {
        "id": 85,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an RGB LED (rgb1) using two push buttons (btn1, btn2) and a slide potentiometer (pot1). The RGB LED will cycle through different colors based on the state of the buttons and the value of the potentiometer. The potentiometer will control the brightness of the RGB LED, while the buttons will determine the color mode.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the RGB LED (rgb1) should be initialized to red.\nButton Interaction:\n1. The first button (btn1) will cycle through the red, green, and blue colors of the RGB LED. Each press of btn1 will change the color in the sequence: red → green → blue → red.\n2. The second button (btn2) will cycle through the secondary colors (yellow, cyan, magenta) of the RGB LED. Each press of btn2 will change the color in the sequence: yellow → cyan → magenta → yellow.\n3. If the RGB LED is in first mode (red, green, blue) and btn2 is pressed, the RGB LED will turn off. If the RGB LED is in second mode (yellow, cyan, magenta) and btn1 is pressed, the RGB LED will turn off.\nPotentiometer Interaction:\n1. The slide potentiometer (pot1) will control the brightness of the RGB LED. The value of the potentiometer (0 to 1023) will be mapped to a brightness level (0 to 255).\n2. The brightness level should be updated continuously based on the current value of the potentiometer.\nState Maintenance:\n1. The brightness level should be updated in real-time as the potentiometer is adjusted.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:4",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:5",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:6",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int BUTTON1_PIN = 2;  \nconst int BUTTON2_PIN = 3;  \nconst int POT_PIN = A3;     \nconst int RED_PIN = 4;      \nconst int GREEN_PIN = 5;   \nconst int BLUE_PIN = 6;    \nconst unsigned long DEBOUNCE_TIME = 50;\nint colorMode = 0;  \nunsigned long lastColorChangeTime = 0;  \nint button1State = HIGH;\nint lastButton1State = HIGH;\nunsigned long lastButton1DebounceTime = 0;\nint button2State = HIGH;\nint lastButton2State = HIGH;\nunsigned long lastButton2DebounceTime = 0;\nbool button1Pressed = false;\nbool button2Pressed = false;\nvoid setup() {\n  pinMode(BUTTON1_PIN, INPUT_PULLUP);\n  pinMode(BUTTON2_PIN, INPUT_PULLUP);\n  pinMode(RED_PIN, OUTPUT);\n  pinMode(GREEN_PIN, OUTPUT);\n  pinMode(BLUE_PIN, OUTPUT);\n}\nvoid loop() {\n  int reading1 = digitalRead(BUTTON1_PIN);\n  int reading2 = digitalRead(BUTTON2_PIN);\n  if (reading1 != lastButton1State) {\n    lastButton1DebounceTime = millis();\n  }\n  if ((millis() - lastButton1DebounceTime) > DEBOUNCE_TIME) {\n    if (reading1 != button1State) {\n      button1State = reading1;\n      if (button1State == LOW) {\n        handleButton1Press();\n      }\n    }\n  }\n  if (reading2 != lastButton2State) {\n    lastButton2DebounceTime = millis();\n  }\n  if ((millis() - lastButton2DebounceTime) > DEBOUNCE_TIME) {\n    if (reading2 != button2State) {\n      button2State = reading2;\n      if (button2State == LOW) {\n        handleButton2Press();\n      }\n    }\n  }\n  lastButton1State = reading1;\n  lastButton2State = reading2;\n  int brightness = analogRead(POT_PIN) / 4;  \n  setColorMode(brightness);\n  if (button1Pressed && button2Pressed) {\n    resetState();\n    button1Pressed = false;\n    button2Pressed = false;\n  }\n}\nvoid handleButton1Press() {\n  button1Pressed = true;\n  if (button2Pressed) {\n    return;\n  }\n  if (colorMode < 2) {\n    colorMode++;\n  } else {\n    colorMode = 0;\n  }\n  lastColorChangeTime = millis();\n}\nvoid handleButton2Press() {\n  button2Pressed = true;\n  if (button1Pressed) {\n    return;\n  }\n  if (colorMode >= 3 && colorMode < 5) {\n    colorMode++;\n  } else {\n    colorMode = 3;\n  }\n  lastColorChangeTime = millis();\n}\nvoid setColorMode(int brightness) {\n  switch (colorMode) {\n    case 0:  \n      analogWrite(RED_PIN, brightness);\n      analogWrite(GREEN_PIN, 0);\n      analogWrite(BLUE_PIN, 0);\n      break;\n    case 1:  \n      analogWrite(RED_PIN, 0);\n      analogWrite(GREEN_PIN, brightness);\n      analogWrite(BLUE_PIN, 0);\n      break;\n    case 2:  \n      analogWrite(RED_PIN, 0);\n      analogWrite(GREEN_PIN, 0);\n      analogWrite(BLUE_PIN, brightness);\n      break;\n    case 3:  \n      analogWrite(RED_PIN, brightness);\n      analogWrite(GREEN_PIN, brightness);\n      analogWrite(BLUE_PIN, 0);\n      break;\n    case 4:  \n      analogWrite(RED_PIN, 0);\n      analogWrite(GREEN_PIN, brightness);\n      analogWrite(BLUE_PIN, brightness);\n      break;\n    case 5:  \n      analogWrite(RED_PIN, brightness);\n      analogWrite(GREEN_PIN, 0);\n      analogWrite(BLUE_PIN, brightness);\n      break;\n    case 6:  \n      analogWrite(RED_PIN, 0);\n      analogWrite(GREEN_PIN, 0);\n      analogWrite(BLUE_PIN, 0);\n      break;\n  }\n}\nvoid resetState() {\n  colorMode = 6;\n  setColorMode(0);\n}",
        "hardware_lst": [
            0,
            2,
            1,
            0,
            0,
            1,
            0,
            0,
            0
        ]
    },
    {
        "id": 86,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to create an interactive color and level indicator using two RGB LEDs (rgb1, rgb2), a push button (btn1), and a 7-segment LED bar graph (bargraph1). The system will cycle through predefined modes where each mode changes the colors of the RGB LEDs and activates a specific number of LEDs in the bar graph.\n\n**Detail Rules**:\n1. **Initialization**:  \n   - All components start in an OFF state when powered on or reset.  \n   - The LED bar graph (bargraph1) shows no lit LEDs.  \n   - Both RGB LEDs (rgb1, rgb2) remain off.  \n\n2. **Button Interaction**:  \n   - Each valid press of the button (btn1) increments the system mode by 1.  \n   - A valid press is defined as holding the button for **at least 0.15 seconds** to avoid false triggers.  \n   - After 7 presses (reaching mode 7), the next press resets the mode to 0.  \n\n3. **Mode Behavior**:  \n   - **Mode 0**: All components are OFF.  \n   - **Modes 1-7**:  \n     - The RGB LEDs (rgb1, rgb2) display unique color combinations (e.g., red/blue, green/cyan) for each mode.  \n     - The LED bar graph (bargraph1) lights up a number of LEDs equal to the current mode (e.g., 3 LEDs for mode 3).(The pins of the bar chart are A1-A7)\n\n4. **Color Rules**:  \n   - Both RGB LEDs must change colors synchronously with each mode transition.  \n   - The order of colors in the RGB LEDs should follow the folling sequence: (red/blue, green/cyan, yellow/magenta, cyan/yellow, meagenta/cyan, white/yellow, black/white).\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:3",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:4",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:5",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:6",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:7",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:8",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:45",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int BUTTON_PIN = 2;  \nint currentMode = 0;\nunsigned long lastDebounceTime = 0;\nbool buttonState = HIGH;  \nbool lastButtonState = HIGH;  \nvoid setup() {\n  pinMode(BUTTON_PIN, INPUT_PULLUP);\n  for (int i = 3; i <= 8; i++) {  \n    pinMode(i, OUTPUT);\n  }\n  for (int i = 9; i <= 13; i++) {  \n    pinMode(i, OUTPUT);\n  }\n  pinMode(44, OUTPUT);  \n  pinMode(45, OUTPUT);  \n  updateDisplay();\n}\nvoid loop() {\n  int reading = digitalRead(BUTTON_PIN);\n  if (reading != lastButtonState) {\n    lastDebounceTime = millis();  \n  }\n  if ((millis() - lastDebounceTime) > 50) {\n    if (reading != buttonState) {\n      buttonState = reading;\n      if (buttonState == LOW) {\n        currentMode = (currentMode + 1) % 8;\n        updateDisplay();\n      }\n    }\n  }\n  lastButtonState = reading;  \n}\nvoid updateDisplay() {\n  for (int i = 3; i <= 13; i++) {\n    digitalWrite(i, LOW);\n  }\n  digitalWrite(44, LOW);\n  digitalWrite(45, LOW);\n  switch (currentMode) {\n    case 1:\n      digitalWrite(3, HIGH);  \n      digitalWrite(8, HIGH);  \n      digitalWrite(9, HIGH);  \n      break;\n    case 2:\n      digitalWrite(4, HIGH);  \n      digitalWrite(7, HIGH);  \n      digitalWrite(8, HIGH);  \n      digitalWrite(9, HIGH);  \n      digitalWrite(10, HIGH);  \n      break;\n    case 3:\n      digitalWrite(3, HIGH);  \n      digitalWrite(4, HIGH);  \n      digitalWrite(6, HIGH);  \n      digitalWrite(8, HIGH);  \n      for (int i = 9; i <= 11; i++) digitalWrite(i, HIGH);  \n      break;\n    case 4:\n      digitalWrite(4, HIGH);  \n      digitalWrite(5, HIGH);  \n      digitalWrite(6, HIGH);  \n      digitalWrite(7, HIGH);  \n      for (int i = 9; i <= 12; i++) digitalWrite(i, HIGH);  \n      break;\n    case 5:\n      digitalWrite(3, HIGH);  \n      digitalWrite(5, HIGH);  \n      digitalWrite(7, HIGH);  \n      digitalWrite(8, HIGH);  \n      for (int i = 9; i <= 13; i++) digitalWrite(i, HIGH);  \n      break;\n    case 6:\n      digitalWrite(3, HIGH);  \n      digitalWrite(4, HIGH);  \n      digitalWrite(5, HIGH);  \n      digitalWrite(6, HIGH);  \n      digitalWrite(7, HIGH);  \n      for (int i = 9; i <= 13; i++) digitalWrite(i, HIGH);  \n      digitalWrite(44, HIGH);\n      break;\n    case 7:\n      digitalWrite(6, HIGH);  \n      digitalWrite(7, HIGH);  \n      digitalWrite(8, HIGH);  \n      for (int i = 9; i <= 13; i++) digitalWrite(i, HIGH);  \n      digitalWrite(44, HIGH);  \n      digitalWrite(45, HIGH);  \n      break;\n  }\n}",
        "hardware_lst": [
            0,
            1,
            2,
            0,
            1,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 87,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control an RGB LED (rgb1) and an LED bar graph (bargraph1) using three pushbuttons (btn1, btn2, btn3). Each button adjusts the intensity of a specific color component (red, green, blue) in the RGB LED, while the bar graph visually indicates the current intensity level of the most recently adjusted color.\n\n**Detail Rules**:\n1. **Initialization**:  \n   - The RGB LED (rgb1) and LED bar graph (bargraph1) must be off when the system starts.  \n2. **Button Functionality**:  \n   - **btn1**: Increases the red intensity by 32 (0-255 range). After reaching 255, the next press resets to 0.  \n   - **btn2**: Adjusts the green intensity in the same manner.  \n   - **btn3**: Adjusts the blue intensity in the same manner.  \n   - Each button press must update the bar graph to display the current intensity level of the adjusted color, the pins of the bar chart are A1-A8 .(e.g., 32 = 1 LED lit, 64 = 2 LEDs lit, up to 255 = 8 LEDs lit). (the bargraph display the intensity of the light corresponding to the button currently pressed)\n3. **RGB LED Behavior**:  \n   - The RGB LED must display the combined color based on the current red, green, and blue intensities.  \n4. **Stability**:  \n   - Button presses must be debounced to avoid false triggers.  \n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn3",
                        "top": -195.4,
                        "left": 190.8,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn3:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn3:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:45",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int RED_PIN = 5;       \nconst int GREEN_PIN = 6;     \nconst int BLUE_PIN = 7;       \nconst int BUTTON_RED = 2;     \nconst int BUTTON_GREEN = 3;   \nconst int BUTTON_BLUE = 4;    \nint red = 0;\nint green = 0;\nint blue = 0;\nvoid setup() {\n  pinMode(RED_PIN, OUTPUT);\n  pinMode(GREEN_PIN, OUTPUT);\n  pinMode(BLUE_PIN, OUTPUT);\n  for (int i = 8; i <= 13; i++) {\n    pinMode(i, OUTPUT);\n    digitalWrite(i, LOW);\n  }\n  pinMode(44, OUTPUT);\n  pinMode(45, OUTPUT);\n  digitalWrite(44, LOW);\n  digitalWrite(45, LOW);\n  pinMode(BUTTON_RED, INPUT_PULLUP);\n  pinMode(BUTTON_GREEN, INPUT_PULLUP);\n  pinMode(BUTTON_BLUE, INPUT_PULLUP);\n}\nvoid loop() {\n  checkButton(BUTTON_RED, &red);\n  checkButton(BUTTON_GREEN, &green);\n  checkButton(BUTTON_BLUE, &blue);\n  analogWrite(RED_PIN, red);\n  analogWrite(GREEN_PIN, green);\n  analogWrite(BLUE_PIN, blue);\n}\nvoid checkButton(int buttonPin, int* color) {\n  if (digitalRead(buttonPin) == LOW) {\n    delay(50); \n    if (digitalRead(buttonPin) == LOW) {\n      *color = (*color + 32) % 256; \n      updateBarGraph(*color / 32); \n      while (digitalRead(buttonPin) == LOW); \n    }\n  }\n}\nvoid updateBarGraph(int level) {\n  for (int i = 8; i <= 13; i++) {\n    digitalWrite(i, (i - 8) < level ? HIGH : LOW);\n  }\n  digitalWrite(44, (6 < level) ? HIGH : LOW);\n  digitalWrite(45, (7 < level) ? HIGH : LOW);\n}",
        "hardware_lst": [
            0,
            3,
            1,
            0,
            1,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 88,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two 7-segment displays (sevseg1, sevseg2) using two shift registers (sr1, sr2), an RGB LED (rgb1), and two push buttons (btn1, btn2). The 7-segment displays will show a two-digit number, where one display represents the tens digit and the other represents the units digit. The RGB LED will change color based on the value of the displayed number. The push buttons will increment or decrement the displayed number by 1 each time they are pressed. If the number exceeds 99 or goes below 0, it should wrap around to the opposite limit.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment displays should show \"00\", and the RGB LED should be off.\nButton Interaction:\n1. Pressing the first button (btn1) increments the displayed number by 1. If the number exceeds 99, it wraps around to 0.\n2. Pressing the second button (btn2) decrements the displayed number by 1. If the number goes below 0, it wraps around to 99.\nRGB LED Behavior:\n1. If the displayed number is between 0 and 33, the RGB LED should glow red.\n2. If the displayed number is between 34 and 66, the RGB LED should glow green.\n3. If the displayed number is between 67 and 99, the RGB LED should glow blue.\nDisplay Update: The 7-segment displays and RGB LED should immediately update to reflect the new number and color after each button press.\nDebouncing: Ensure that button presses are debounced to avoid false triggers caused by mechanical vibrations.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:4",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:5",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:6",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int BUTTON1_PIN = 2; \nconst int BUTTON2_PIN = 3; \nconst int RGB_RED_PIN = 4; \nconst int RGB_GREEN_PIN = 5; \nconst int RGB_BLUE_PIN = 6; \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nint currentNumber = 0;\nunsigned long lastDebounceTime1 = 0; \nunsigned long lastDebounceTime2 = 0; \nconst unsigned long debounceDelay = 50; \nbool button1State = HIGH; \nbool button2State = HIGH; \nbool lastButton1State = HIGH; \nbool lastButton2State = HIGH; \nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(BUTTON1_PIN, INPUT_PULLUP);\n  pinMode(BUTTON2_PIN, INPUT_PULLUP);\n  pinMode(RGB_RED_PIN, OUTPUT);\n  pinMode(RGB_GREEN_PIN, OUTPUT);\n  pinMode(RGB_BLUE_PIN, OUTPUT);\n  displayNumber(currentNumber);\n  updateRGB(currentNumber);\n}\nvoid loop() {\n  int reading1 = digitalRead(BUTTON1_PIN); \n  int reading2 = digitalRead(BUTTON2_PIN); \n  if (reading1 != lastButton1State) {\n    lastDebounceTime1 = millis(); \n  }\n  if ((millis() - lastDebounceTime1) > debounceDelay) {\n    if (reading1 != button1State) {\n      button1State = reading1;\n      if (button1State == LOW) { \n        currentNumber = (currentNumber + 1) % 100; \n        displayNumber(currentNumber);\n        updateRGB(currentNumber);\n      }\n    }\n  }\n  lastButton1State = reading1; \n  if (reading2 != lastButton2State) {\n    lastDebounceTime2 = millis(); \n  }\n  if ((millis() - lastDebounceTime2) > debounceDelay) {\n    if (reading2 != button2State) {\n      button2State = reading2;\n      if (button2State == LOW) { \n        currentNumber = (currentNumber - 1 + 100) % 100; \n        displayNumber(currentNumber);\n        updateRGB(currentNumber);\n      }\n    }\n  }\n  lastButton2State = reading2; \n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateRGB(int number) {\n  if (number >= 0 && number <= 33) {\n    analogWrite(RGB_RED_PIN, 255); \n    analogWrite(RGB_GREEN_PIN, 0);\n    analogWrite(RGB_BLUE_PIN, 0);\n  } else if (number >= 34 && number <= 66) {\n    analogWrite(RGB_RED_PIN, 0);\n    analogWrite(RGB_GREEN_PIN, 255); \n    analogWrite(RGB_BLUE_PIN, 0);\n  } else if (number >= 67 && number <= 99) {\n    analogWrite(RGB_RED_PIN, 0);\n    analogWrite(RGB_GREEN_PIN, 0);\n    analogWrite(RGB_BLUE_PIN, 255); \n  }\n}",
        "hardware_lst": [
            0,
            2,
            1,
            2,
            0,
            0,
            0,
            2,
            0
        ]
    },
    {
        "id": 89,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two RGB LEDs (rgb1, rgb2), a 7-segment display (sevseg1), and three push buttons (btn1, btn2, btn3). The RGB LEDs will display specific colors based on the state of the buttons, and the 7-segment display will show a number corresponding to the number of times the buttons have been pressed. Each button press will increment the count, and the RGB LEDs will change colors based on the count's value.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment display should show \"0\", and both RGB LEDs should be off.\nButton Interaction:\n1. Each press of any button (btn1, btn2, btn3) should increment the count by 1. The count should be displayed on the 7-segment display. The range of the count is from 0 to 15. If the count exceeds 9, the 7-segment display should represent ones digits. If the count exceeds 15, it should reset to 0.\n2. If the count is less than 5, RGB LED 1 (rgb1) should display red, and RGB LED 2 (rgb2) should display blue.\n3. If the count is between 5 and 9, RGB LED 1 (rgb1) should display green, and RGB LED 2 (rgb2) should display yellow (a mix of red and green).\n4. If the count is 10 or greater, RGB LED 1 (rgb1) should display purple (a mix of red and blue), and RGB LED 2 (rgb2) should display cyan (a mix of green and blue).\n5. If the count exceeds 15, it should reset to 0, and the RGB LEDs should return to their initial state.\nDisplay Update: The 7-segment display and RGB LEDs should immediately update to reflect the new count and color state after each button press.\nDebouncing: Ensure that each button press is debounced to avoid false triggers caused by mechanical vibrations.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn3",
                        "top": -195.4,
                        "left": 190.8,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:2",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn3:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn3:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:8",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:9",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:10",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int BUTTON1_PIN = 2;  \nconst int BUTTON2_PIN = 3;  \nconst int BUTTON3_PIN = 4;  \nconst int RGB1_RED_PIN = 5; \nconst int RGB1_GREEN_PIN = 6; \nconst int RGB1_BLUE_PIN = 7; \nconst int RGB2_RED_PIN = 8; \nconst int RGB2_GREEN_PIN = 9; \nconst int RGB2_BLUE_PIN = 10; \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nint count = 0;\nunsigned long lastDebounceTime1 = 0; \nunsigned long lastDebounceTime2 = 0; \nunsigned long lastDebounceTime3 = 0; \nconst unsigned long debounceDelay = 50; \nbool button1State = HIGH; \nbool button2State = HIGH; \nbool button3State = HIGH; \nbool lastButton1State = HIGH; \nbool lastButton2State = HIGH; \nbool lastButton3State = HIGH; \nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(BUTTON1_PIN, INPUT_PULLUP);\n  pinMode(BUTTON2_PIN, INPUT_PULLUP);\n  pinMode(BUTTON3_PIN, INPUT_PULLUP);\n  pinMode(RGB1_RED_PIN, OUTPUT);\n  pinMode(RGB1_GREEN_PIN, OUTPUT);\n  pinMode(RGB1_BLUE_PIN, OUTPUT);\n  pinMode(RGB2_RED_PIN, OUTPUT);\n  pinMode(RGB2_GREEN_PIN, OUTPUT);\n  pinMode(RGB2_BLUE_PIN, OUTPUT);\n  displayNumber(0);\n  updateRGBLEDs();\n}\nvoid loop() {\n  int reading1 = digitalRead(BUTTON1_PIN); \n  int reading2 = digitalRead(BUTTON2_PIN); \n  int reading3 = digitalRead(BUTTON3_PIN); \n  if (reading1 != lastButton1State) {\n    lastDebounceTime1 = millis(); \n  }\n  if ((millis() - lastDebounceTime1) > debounceDelay) {\n    if (reading1 != button1State) {\n      button1State = reading1;\n      if (button1State == LOW) { \n        count++;\n        if (count > 15) {\n          count = 0;\n        }\n        displayNumber(count);\n        updateRGBLEDs();\n      }\n    }\n  }\n  lastButton1State = reading1; \n  if (reading2 != lastButton2State) {\n    lastDebounceTime2 = millis(); \n  }\n  if ((millis() - lastDebounceTime2) > debounceDelay) {\n    if (reading2 != button2State) {\n      button2State = reading2;\n      if (button2State == LOW) { \n        count++;\n        if (count > 15) {\n          count = 0;\n        }\n        displayNumber(count);\n        updateRGBLEDs();\n      }\n    }\n  }\n  lastButton2State = reading2; \n  if (reading3 != lastButton3State) {\n    lastDebounceTime3 = millis(); \n  }\n  if ((millis() - lastDebounceTime3) > debounceDelay) {\n    if (reading3 != button3State) {\n      button3State = reading3;\n      if (button3State == LOW) { \n        count++;\n        if (count > 15) {\n          count = 0;\n        }\n        displayNumber(count);\n        updateRGBLEDs();\n      }\n    }\n  }\n  lastButton3State = reading3; \n}\nvoid displayNumber(int number) {\n  byte code = segmentCodes[number % 10];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, code);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateRGBLEDs() {\n  if (count < 5) {\n    analogWrite(RGB1_RED_PIN, 255);\n    analogWrite(RGB1_GREEN_PIN, 0);\n    analogWrite(RGB1_BLUE_PIN, 0);\n    analogWrite(RGB2_RED_PIN, 0);\n    analogWrite(RGB2_GREEN_PIN, 0);\n    analogWrite(RGB2_BLUE_PIN, 255);\n  } else if (count >= 5 && count < 10) {\n    analogWrite(RGB1_RED_PIN, 0);\n    analogWrite(RGB1_GREEN_PIN, 255);\n    analogWrite(RGB1_BLUE_PIN, 0);\n    analogWrite(RGB2_RED_PIN, 255);\n    analogWrite(RGB2_GREEN_PIN, 255);\n    analogWrite(RGB2_BLUE_PIN, 0);\n  } else if (count >= 10) {\n    analogWrite(RGB1_RED_PIN, 255);\n    analogWrite(RGB1_GREEN_PIN, 0);\n    analogWrite(RGB1_BLUE_PIN, 255);\n    analogWrite(RGB2_RED_PIN, 0);\n    analogWrite(RGB2_GREEN_PIN, 255);\n    analogWrite(RGB2_BLUE_PIN, 255);\n  }\n}",
        "hardware_lst": [
            0,
            3,
            2,
            1,
            0,
            0,
            0,
            1,
            0
        ]
    },
    {
        "id": 90,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three LEDs (led1, led2, led3) and two servo motors (servo1, servo2). The LEDs will act as indicators for the servo positions, and the servos will move in a synchronized pattern. The LEDs will light up in sequence to indicate the current state of the servos.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, all LEDs (led1, led2, led3) should be off, and both servos (servo1, servo2) should be at their 0-degree position.\nServo Movement:\n1.First Servo1 (servo1) will start at 0 degrees and increment its angle by 30 degrees every 2 seconds (immediately move and then stay for 2 seconds) until it reaches 180 degrees.\n2.Then Servo2 (servo2) will start at 180 degrees and decrement its angle by 30 degrees every 2 seconds (immediately move and then stay for 2 seconds) until it reaches 0 degrees.\nLED Indication:\n1. When Servo1 is moving, LED1 (led1) will light up.\n2. When Servo2 is moving, LED2 (led2) will light up.\n3. When both servos reach their target positions (180 degrees for Servo1 and 0 degrees for Servo2), LED3 (led3) will light up for 2 seconds before the cycle repeats.\nCycle Repetition: After both servos reach their target positions and LED3 (led3) lights up, the servos will reset to their initial positions (0 degrees for Servo1 and 180 degrees for Servo2), and the cycle will repeat.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led3",
                        "top": -70.8,
                        "left": 128.6,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led3:C",
                        "black"
                    ],
                    [
                        "led3:A",
                        "mega:4",
                        "red"
                    ],
                    [
                        "mega:5",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:6",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nconst int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int LED3_PIN = 4;  \nconst int SERVO1_PIN = 5;  \nconst int SERVO2_PIN = 6;  \nint servo1Angle = 0;\nint servo2Angle = 180;\nvoid setup() {\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  pinMode(LED3_PIN, OUTPUT);\n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  servo1.write(servo1Angle);\n  servo2.write(servo2Angle);\n  digitalWrite(LED1_PIN, LOW);\n  digitalWrite(LED2_PIN, LOW);\n  digitalWrite(LED3_PIN, LOW);\n}\nvoid loop() {\n  servo1.write(0);\n  servo1Angle = 0;\n  while (servo1Angle < 180) {\n    digitalWrite(LED1_PIN, HIGH);\n    delay(2000);\n    servo1Angle += 30;\n    servo1.write(servo1Angle);\n    digitalWrite(LED1_PIN, LOW);\n  }\n  while (servo2Angle > 0) {\n    digitalWrite(LED2_PIN, HIGH);\n    delay(2000);\n    servo2Angle -= 30;\n    servo2.write(servo2Angle);\n    digitalWrite(LED2_PIN, LOW);\n  }\n  digitalWrite(LED3_PIN, HIGH);\n  delay(2000);\n  digitalWrite(LED3_PIN, LOW);\n  servo1Angle = 0;\n  servo2Angle = 180;\n  servo1.write(servo1Angle);\n  servo2.write(servo2Angle);\n}",
        "hardware_lst": [
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            2
        ]
    },
    {
        "id": 91,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two LEDs (led1, led2) and three servo motors (servo1, servo2, servo3). The LEDs will act as indicators, and the servos will rotate in a synchronized pattern. The LEDs will blink alternately, and the servos will move in a sequence: servo1 to 0°, servo2 to 90°, and servo3 to 180°, then reverse the sequence. The LEDs and servos should operate in a continuous loop.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, both LEDs (led1, led2) should be off, and all servos (servo1, servo2, servo3) should be at their initial positions (0°).\nLED Behavior: The LEDs should blink alternately every 2000 milliseconds. When led1 is on, led2 should be off, and vice versa.\nServo Behavior: The servos should move in the following sequence:\n1. servo1 moves to 0°, servo2 moves to 90°, and servo3 moves to 180°. This state should be maintained for 2 seconds.\n2. servo1 moves to 180°, servo2 moves to 0°, and servo3 moves to 90°. This state should be maintained for 2 seconds.\n3. The sequence should repeat continuously.\nSynchronization: The LED blinking and servo movements should be synchronized, with the LEDs blinking continuously while the servos move through their sequence.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:4",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:5",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:6",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nServo servo3;\nconst int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int SERVO1_PIN = 4;  \nconst int SERVO2_PIN = 5;  \nconst int SERVO3_PIN = 6;  \nvoid setup() {\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  servo3.attach(SERVO3_PIN);\n  digitalWrite(LED1_PIN, LOW);\n  digitalWrite(LED2_PIN, LOW);\n  servo1.write(0);\n  servo2.write(0);\n  servo3.write(0);\n}\nvoid loop() {\n  digitalWrite(LED1_PIN, HIGH);\n  digitalWrite(LED2_PIN, LOW);\n  servo1.write(0);\n  servo2.write(90);\n  servo3.write(180);\n  delay(2000);\n  digitalWrite(LED1_PIN, LOW);\n  digitalWrite(LED2_PIN, HIGH);\n  servo1.write(180);\n  servo2.write(0);\n  servo3.write(90);\n  delay(2000);\n}",
        "hardware_lst": [
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            3
        ]
    },
    {
        "id": 92,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control the brightness of an LED (led1) using two slide potentiometers (pot1, pot2). The first potentiometer (pot1) will control the brightness of the LED, while the second potentiometer (pot2) will act as a threshold. If the brightness value from pot1 exceeds the threshold value from pot2, the LED should turn on at the brightness level set by pot1. Otherwise, the LED should remain off.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the LED (led1) should be off.\nPotentiometer Interaction:\n1. The first potentiometer (pot1) determines the brightness of the LED. Its value ranges from 0 to 1023, which should be mapped to a brightness level between 0 and 255.\n2. The second potentiometer (pot2) sets a threshold value. Its value also ranges from 0 to 1023.\n3. If the brightness value from pot1 exceeds the threshold value from pot2, the LED should turn on at the brightness level set by pot1.\n4. If the brightness value from pot1 is less than or equal to the threshold value from pot2, the LED should remain off.\n5. The LED's state and brightness should be updated continuously based on the current values of the potentiometers.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED_PIN = 2;  \nconst int POT1_PIN = A3;  \nconst int POT2_PIN = A4;  \nvoid setup() {\n  pinMode(LED_PIN, OUTPUT);  \n  analogWrite(LED_PIN, 0);  \n}\nvoid loop() {\n  int pot1Value = analogRead(POT1_PIN);  \n  int pot2Value = analogRead(POT2_PIN);  \n  int brightness = map(pot1Value, 0, 1023, 0, 255);  \n  if (pot1Value > pot2Value) {\n    analogWrite(LED_PIN, brightness);  \n  } else {\n    analogWrite(LED_PIN, 0);  \n  }\n  delay(10);  \n}",
        "hardware_lst": [
            1,
            0,
            0,
            0,
            0,
            2,
            0,
            0,
            0
        ]
    },
    {
        "id": 93,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two LEDs (led1, led2), a servo motor (servo1), and a slide potentiometer (pot1). The slide potentiometer will control the position of the servo motor, and the LEDs will indicate the direction of the servo's movement. When the servo moves clockwise, one LED (led1) will light up, and when it moves counterclockwise, the other LED (led2) will light up.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the servo motor (servo1) should be at 0 degrees, and both LEDs (led1, led2) should be off.\nPotentiometer Interaction: The slide potentiometer (pot1) will control the servo's position. The potentiometer's value (0 to 1023) should be mapped to the servo's angle range (0 to 180 degrees).\nLED Indication: \n1. If the servo is moving clockwise (angle increasing), LED (led1) should light up, and LED (led2) should remain off.\n2. If the servo is moving counterclockwise (angle decreasing), LED (led2) should light up, and LED (led1) should remain off.\n3. If the servo is stationary, both LEDs should remain off.\nState Maintenance: Each state (clockwise, counterclockwise, or stationary) should be maintained for at least 2 seconds to allow for verification.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "mega:4",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nconst int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int POT_PIN = A3;  \nconst int SERVO_PIN = 4; \nint previousAngle = 0;\nvoid setup() {\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  servo1.attach(SERVO_PIN);\n  servo1.write(0); \n  digitalWrite(LED1_PIN, LOW);\n  digitalWrite(LED2_PIN, LOW);\n}\nvoid loop() {\n  int potValue = analogRead(POT_PIN);\n  int angle = map(potValue, 0, 1023, 0, 180);\n  servo1.write(angle);\n  if (angle > previousAngle) {\n    digitalWrite(LED1_PIN, HIGH);\n    digitalWrite(LED2_PIN, LOW);\n  } else if (angle < previousAngle) {\n    digitalWrite(LED1_PIN, LOW);\n    digitalWrite(LED2_PIN, HIGH);\n  } else {\n    digitalWrite(LED1_PIN, LOW);\n    digitalWrite(LED2_PIN, LOW);\n  }\n  previousAngle = angle;\n  delay(2000); \n}",
        "hardware_lst": [
            2,
            0,
            0,
            0,
            0,
            1,
            0,
            0,
            1
        ]
    },
    {
        "id": 94,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a servo motor (servo1), an LED (led1), and three slide potentiometers (pot1, pot2, pot3). The servo motor's position will be controlled by one potentiometer, the LED's brightness by another, and the third potentiometer will determine the speed at which the servo moves to its target position.\n\n**Detail Rules**:\n1. **Servo Control**:\n   - The position of the servo motor (servo1) is controlled by the first potentiometer (pot1). The value of pot1 (0 to 1023) is mapped to the servo's angle range (0 to 180 degrees).\n   - The servo should move smoothly to the target position determined by pot1.\n\n2. **LED Brightness Control**:\n   - The brightness of the LED (led1) is controlled by the second potentiometer (pot2). The value of pot2 (0 to 1023) is mapped to the LED's brightness range (0 to 255).\n\n3. **Servo Speed Control**:\n   - The speed at which the servo moves to its target position is controlled by the third potentiometer (pot3). The value of pot3 (0 to 1023) is mapped to a delay range (e.g., 10 to 100 milliseconds) between each step of the servo's movement.\n\n4. **State Maintenance**:\n   - The servo's position, LED brightness, and movement speed should update continuously based on the current values of the potentiometers.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -408.8,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black"
                    ],
                    [
                        "mega:3",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nconst int SERVO_PIN = 3;  \nconst int LED_PIN = 2;    \nconst int POT1_PIN = A3;  \nconst int POT2_PIN = A4;  \nconst int POT3_PIN = A5;  \nint currentServoAngle = 0;\nint targetServoAngle = 0;\nint ledBrightness = 0;\nint movementSpeed = 50;\nunsigned long lasttime = 0;  \nvoid setup() {\n  pinMode(LED_PIN, OUTPUT);\n  servo1.attach(SERVO_PIN);\n  servo1.write(0); \n  analogWrite(LED_PIN, 0); \n}\nvoid loop() {\n  targetServoAngle = map(analogRead(POT1_PIN), 0, 1023, 0, 180);\n  ledBrightness = map(analogRead(POT2_PIN), 0, 1023, 0, 255);\n  movementSpeed = map(analogRead(POT3_PIN), 0, 1023, 10, 100);\n  analogWrite(LED_PIN, ledBrightness);\n  if (currentServoAngle < targetServoAngle && millis() - lasttime > movementSpeed ) {\n    currentServoAngle++;\n    servo1.write(currentServoAngle);\n    lasttime = millis();\n  } else if (currentServoAngle > targetServoAngle && millis() - lasttime > movementSpeed ) {\n    currentServoAngle--;\n    servo1.write(currentServoAngle);\n    lasttime = millis();\n  }\n}",
        "hardware_lst": [
            1,
            0,
            0,
            0,
            0,
            3,
            0,
            0,
            1
        ]
    },
    {
        "id": 95,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two individual LEDs (led1, led2) and a 10-segment LED bar graph (bargraph1). The LEDs and the bar graph will simulate a loading animation, where the bar graph fills up sequentially, and the individual LEDs blink alternately to indicate activity.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, all LEDs (led1, led2) and the bar graph (bargraph1) should be off.\nLoading Animation:\n1. The bar graph (bargraph1) should light up one segment at a time, starting from the first segment (A1) to the last segment (A10).(Pin A1-A10) Each segment should remain lit for 2000 milliseconds before moving to the next segment.\n2. While the bar graph is filling up, the two individual LEDs (led1, led2) should blink alternately every 2000 milliseconds. When one LED is on, the other should be off, and vice versa.\n3. After the bar graph is fully lit (all 10 segments are on), the bar graph should reset to off, and the animation should restart from the beginning.\n4. The entire animation should loop indefinitely.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int BARGRAPH_PINS[] = {4, 5, 6, 7, 8, 9, 10, 11, 12, 13};  \nvoid setup() {\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  for (int i = 0; i < 10; i++) {\n    pinMode(BARGRAPH_PINS[i], OUTPUT);\n  }\n}\nvoid loop() {\n  for (int i = 0; i < 10; i++) {\n    digitalWrite(BARGRAPH_PINS[i], HIGH);  \n    if (i % 2 == 0) {\n      digitalWrite(LED1_PIN, HIGH);\n      digitalWrite(LED2_PIN, LOW);\n    } else {\n      digitalWrite(LED1_PIN, LOW);\n      digitalWrite(LED2_PIN, HIGH);\n    }\n    delay(2000);  \n  }\n  for (int i = 0; i < 10; i++) {\n    digitalWrite(BARGRAPH_PINS[i], LOW);  \n  }\n  digitalWrite(LED1_PIN, LOW);\n  digitalWrite(LED2_PIN, LOW);\n  delay(200);  \n}",
        "hardware_lst": [
            2,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 96,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three individual LEDs (led1, led2, led3) and a 10-segment LED bar graph (bargraph1). The LEDs will blink sequentially, and the bar graph will dynamically reflect the number of active LEDs during each phase of the sequence.\n\n**Detail Rules**:\n1. **Initialization**: All LEDs and bar graph segments must be off when the system starts or resets.\n2. **Blinking Sequence**:\n   - The three LEDs (led1, led2, led3) must blink sequentially, each remaining active for exactly 2 seconds before switching to the next.\n   - When each individual LED is active, the bar graph (bargraph1) must display a number of lit segments equal to the count of currently active LEDs (Pin A1-A10, 1 segment per active LED).\n3. **Final Phase**:\n   - After all three LEDs have completed their blinking sequence, the bar graph must light all 10 segments for 2 seconds before repeating the cycle.\n4. **Timing**: Each state (LED active with corresponding bar graph segments, and final all-segments-lit phase) must persist for at least 2 seconds.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led3",
                        "top": -70.8,
                        "left": 128.6,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led3:C",
                        "black"
                    ],
                    [
                        "led3:A",
                        "mega:4",
                        "red"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED_PINS[] = {2, 3, 4};  \nconst int pins[] = {5, 6, 7, 8, 9, 10, 11, 12, 13, 44, 45};\nvoid setup() {\n  for (int i = 0; i < 3; i++) {\n    pinMode(LED_PINS[i], OUTPUT);\n    digitalWrite(LED_PINS[i], LOW);\n  }\n  for (int i = 0; i < 10; i++) {\n      digitalWrite(pins[i], LOW);\n  }\n}\nvoid loop() {\n  for (int i = 0; i < 3; i++) {\n    digitalWrite(LED_PINS[i], HIGH);  \n    digitalWrite(5, HIGH);  \n    delay(2000);  \n    digitalWrite(LED_PINS[i], LOW);  \n    digitalWrite(5, LOW);  \n  }\n  for (int i = 0; i < 10; i++) {\n      digitalWrite(pins[i], HIGH);\n  }\n  delay(2000);\n  for (int i = 0; i < 10; i++) {\n      digitalWrite(pins[i], LOW);\n  }\n}",
        "hardware_lst": [
            3,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 97,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to create a synchronized visual and mechanical system using three LEDs (led1, led2, led3), three servo motors (servo1, servo2, servo3), and an LED bar graph (bargraph1). The system must cycle through distinct states where servo positions, LED statuses, and bar graph patterns change in sequence.\n\n**Detail Rules**:\n1. **Initialization**:  \n   - All servos start at 0° position.  \n   - All LEDs and bar graph segments remain off.  \n   - This state must persist for 2 seconds.  \n\n2. **State Sequence**:  \n   - **State 1** (2 seconds):  \n     - Servo1 (servo1) moves to 60°.  \n     - LED1 (led1) turns on.  \n     - First two segments of the bar graph (bargraph1) light up. (PIN A1-A2) \n   - **State 2** (2 seconds):  \n     - Servo2 (servo2) moves to 120°.  \n     - LED2 (led2) turns on.  \n     - Next three segments of the bar graph light up.  (PIN A3-A5) \n   - **State 3** (2 seconds):  \n     - Servo3 (servo3) moves to 180°.  \n     - LED3 (led3) turns on.  \n     - Final three segments of the bar graph light up.  (PIN A6-A8) \n   - **Reset** (2 seconds):  \n     - All servos return to 0°.  \n     - All LEDs and bar graph segments turn off.  (PIN A1-A8) \n   - The sequence repeats indefinitely after the reset phase.  \n\n3. **Synchronization**:  \n   - Servo movements, LED status changes, and bar graph updates must occur simultaneously at the start of each state.  \n   - Transitions between states must not overlap; each state must maintain its configuration for at least 2 seconds.  \n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led3",
                        "top": -70.8,
                        "left": 128.6,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led3:C",
                        "black"
                    ],
                    [
                        "led3:A",
                        "mega:4",
                        "red"
                    ],
                    [
                        "mega:5",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:6",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:7",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:45",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1, servo2, servo3;\nvoid setup() {\n  pinMode(2, OUTPUT);  \n  pinMode(3, OUTPUT);  \n  pinMode(4, OUTPUT);  \n  for (int i = 8; i <= 13; i++) pinMode(i, OUTPUT);\n  pinMode(44, OUTPUT);\n  pinMode(45, OUTPUT);\n  servo1.attach(5);\n  servo2.attach(6);\n  servo3.attach(7);\n  resetSystem();\n  delay(2000);\n}\nvoid loop() {\n  servo1.write(60);\n  digitalWrite(2, HIGH);\n  digitalWrite(8, HIGH);\n  digitalWrite(9, HIGH);\n  delay(2000);\n  servo2.write(120);\n  digitalWrite(3, HIGH);\n  digitalWrite(10, HIGH);\n  digitalWrite(11, HIGH);\n  digitalWrite(12, HIGH);\n  delay(2000);\n  servo3.write(180);\n  digitalWrite(4, HIGH);\n  digitalWrite(13, HIGH);\n  digitalWrite(44, HIGH);\n  digitalWrite(45, HIGH);\n  delay(2000);\n  resetSystem();\n  delay(2000);\n}\nvoid resetSystem() {\n  digitalWrite(2, LOW);\n  digitalWrite(3, LOW);\n  digitalWrite(4, LOW);\n  servo1.write(0);\n  servo2.write(0);\n  servo3.write(0);\n  for (int i = 8; i <= 13; i++) digitalWrite(i, LOW);\n  digitalWrite(44, LOW);\n  digitalWrite(45, LOW);\n}",
        "hardware_lst": [
            3,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            3
        ]
    },
    {
        "id": 98,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two LEDs (led1, led2), a 10-segment LED bar graph (bargraph1), and two servo motors (servo1, servo2). The LEDs and the bar graph will display a pattern based on the movement of the servo motors. The servos will sweep between 0° and 180°, and the LEDs and bar graph will light up in sync with the servo positions.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, both servos (servo1, servo2) should start at 0°, and all LEDs (led1, led2, bargraph1) should be off.\nServo Movement:\n1. Servo1 (servo1) will sweep from 0° to 180° in increments of 10°, pausing for 2000 milliseconds at each step.\n2. Servo2 (servo2) will sweep from 180° to 0° in decrements of 10°, pausing for 2000 milliseconds at each step.\nLED and Bar Graph Behavior:\n1. LED1 (led1) will turn on when Servo1 is between 0° and 90°, and turn off when Servo1 is between 91° and 180°.\n2. LED2 (led2) will turn on when Servo2 is between 90° and 180°, and turn off when Servo2 is between 0° and 89°.\n3. The LED bar graph (bargraph1) will light up segments corresponding to the current position of Servo1. For example:\n   - If Servo1 is at 0°, no segments are lit.\n   - If Servo1 is at 90°, 5 segments are lit.\n   - If Servo1 is at 180°, all 10 segments are lit.\nThe system should continuously repeat the servo movement and LED/bar graph behavior.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ],
                    [
                        "mega:44",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:45",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nconst int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int BARGRAPH_PINS[] = {4, 5, 6, 7, 8, 9, 10, 11, 12, 13};  \nvoid setup() {\n  servo1.attach(44);  \n  servo2.attach(45);  \n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  for (int i = 0; i < 10; i++) {\n    pinMode(BARGRAPH_PINS[i], OUTPUT);\n  }\n  servo1.write(0);  \n  servo2.write(180);  \n}\nvoid loop() {\n  for (int pos1 = 0; pos1 <= 180; pos1 += 10) {\n    servo1.write(pos1);  \n    servo2.write(180 - pos1);  \n    updateLEDsAndBarGraph(pos1, 180 - pos1);  \n    delay(2000);  \n  }\n  for (int pos1 = 180; pos1 >= 0; pos1 -= 10) {\n    servo1.write(pos1);  \n    servo2.write(180 - pos1);  \n    updateLEDsAndBarGraph(pos1, 180 - pos1);  \n    delay(2000);  \n  }\n}\nvoid updateLEDsAndBarGraph(int servo1Pos, int servo2Pos) {\n  digitalWrite(LED1_PIN, (servo1Pos <= 90) ? HIGH : LOW);  \n  digitalWrite(LED2_PIN, (servo2Pos >= 90) ? HIGH : LOW);  \n  int segmentsToLight = map(servo1Pos, 0, 180, 0, 10);  \n  if ( 0 <= servo1Pos && servo1Pos < 90){\n    for (int i = 0; i < 10; i++) {\n      digitalWrite(BARGRAPH_PINS[i], LOW);  \n    }\n  }\n  if (90 <= servo1Pos && servo1Pos < 180){\n    for (int i = 0; i < 5; i++) {\n      digitalWrite(BARGRAPH_PINS[i], HIGH);  \n    }\n    for (int i = 5; i < 10; i++) {\n      digitalWrite(BARGRAPH_PINS[i], LOW);  \n    }\n  }\n  if (servo1Pos == 180) {\n    for (int i = 0; i < 10; i++) {\n      digitalWrite(BARGRAPH_PINS[i], HIGH);  \n    }\n  }\n}",
        "hardware_lst": [
            2,
            0,
            0,
            0,
            1,
            0,
            0,
            0,
            2
        ]
    },
    {
        "id": 99,
        "problem": "\n  \n**Task**:  \nYou are tasked with programming an Arduino (uno) to control an LED (led1) and a 10-segment LED bar graph (bargraph1) using a slide potentiometer (pot1). The potentiometer will adjust the brightness of the LED and dynamically light up segments of the bar graph based on its position.  \n\n**Detail Rules**:  \n1. **Initialization**:  \n   - On startup, the LED (led1) and all segments of the bar graph (bargraph1) must be off.  \n\n2. **Potentiometer Interaction**:  \n   - The slide potentiometer (pot1) controls two behaviors:  \n     a. **LED Brightness**: The LED's brightness is directly proportional to the potentiometer's value (0 = off, 1023 = full brightness).  \n     b. **Bar Graph Activation**: The bar graph (bargraph1) lights up segments sequentially from 1 to 10, corresponding to the potentiometer's value. For example:  \n       - 0-102: 0 segments lit  \n       - 103-204: 1 segment lit  (Pin A1)\n       - ...  \n       - 921-1023: 10 segments lit (Pin A10)\n\n3. **LED Blinking Condition**:  \n   - When the potentiometer (pot1) is at its maximum value (1023), the LED (led1) must blink at 0.25 Hz (on for 2 second, off for 2 second) instead of staying fully lit.  \n\n5. **Hardware Usage**:  \n   - All components (uno, led1, pot1, bargraph1) must be used as described.  \n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "mega:3",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int ledPin = 2;          \nconst int potPin = A3;         \nconst int barGraphPins[] = {3, 4, 5, 6, 7, 8, 9, 10, 11, 12}; \nint potValue = 0;             \nint brightness = 0;           \nint segmentsToLight = 0;      \nunsigned long previousMillis = 0; \nbool ledState = LOW;          \nvoid setup() {\n  pinMode(ledPin, OUTPUT);\n  for (int i = 0; i < 10; i++) {\n    pinMode(barGraphPins[i], OUTPUT);\n    digitalWrite(barGraphPins[i], LOW); \n  }\n}\nvoid loop() {\n  potValue = analogRead(potPin);\n  brightness = map(potValue, 0, 1023, 0, 255);\n  segmentsToLight = map(potValue, 0, 1023, 0, 10);\n  for (int i = 0; i < 10; i++) {\n    if (i < segmentsToLight) {\n      digitalWrite(barGraphPins[i], HIGH); \n    } else {\n      digitalWrite(barGraphPins[i], LOW);  \n    }\n  }\n  if (potValue == 1023) {\n    unsigned long currentMillis = millis();\n    if (currentMillis - previousMillis >= 2000) {\n      previousMillis = currentMillis;\n      ledState = !ledState; \n      digitalWrite(ledPin, ledState);\n    }\n  } else {\n    analogWrite(ledPin, brightness);\n  }\n}",
        "hardware_lst": [
            1,
            0,
            0,
            0,
            1,
            1,
            0,
            0,
            0
        ]
    },
    {
        "id": 100,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two individual LEDs (led1, led2) and a 10-segment LED bar graph (bargraph1) using three slide potentiometers (pot1, pot2, pot3). The potentiometers will control the brightness of the individual LEDs and the number of illuminated segments on the LED bar graph.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, both individual LEDs (led1, led2) and all segments of the LED bar graph (bargraph1) should be off.\nPotentiometer Interaction:\n1. The first potentiometer (pot1) controls the brightness of the first LED (led1). The value of pot1 is mapped uniformly from 0 to 255.\n2. The second potentiometer (pot2) controls the brightness of the second LED (led2). The value of pot2 is mapped uniformly from 0 to 255.\n3. The third potentiometer (pot3) controls the number of illuminated segments(PIN A1-A10) on the LED bar graph (bargraph1). The value of pot3 is mapped uniformly from 0 to 10, where 0 means no segments are lit, and 10 means all segments are lit.\nThe brightness of the individual LEDs and the number of illuminated segments on the LED bar graph should be updated continuously based on the current values of the potentiometers.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -408.8,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int BARGRAPH_PINS[] = {4, 5, 6, 7, 8, 9, 10, 11, 12, 13};  \nconst int POT1_PIN = A3;  \nconst int POT2_PIN = A4;  \nconst int POT3_PIN = A5;  \nvoid setup() {\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  for (int i = 0; i < 10; i++) {\n    pinMode(BARGRAPH_PINS[i], OUTPUT);\n  }\n}\nvoid loop() {\n  int pot1Value = analogRead(POT1_PIN);\n  int pot2Value = analogRead(POT2_PIN);\n  int pot3Value = analogRead(POT3_PIN);\n  int led1Brightness = map(pot1Value, 0, 1023, 0, 255);\n  int led2Brightness = map(pot2Value, 0, 1023, 0, 255);\n  int bargraphSegments = map(pot3Value, 0, 1023, 0, 10);\n  analogWrite(LED1_PIN, led1Brightness);\n  analogWrite(LED2_PIN, led2Brightness);\n  for (int i = 0; i < 10; i++) {\n    if (i < bargraphSegments) {\n      digitalWrite(BARGRAPH_PINS[i], HIGH);\n    } else {\n      digitalWrite(BARGRAPH_PINS[i], LOW);\n    }\n  }\n  delay(10);\n}",
        "hardware_lst": [
            2,
            0,
            0,
            0,
            1,
            3,
            0,
            0,
            0
        ]
    },
    {
        "id": 101,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two LEDs (led1, led2) and a 7-segment display (sevseg1) using a shift register (sr1). The LEDs will blink alternately, and the 7-segment display will show a countdown from 9 to 0. The countdown should restart after reaching 0, and the LEDs should continue blinking throughout the process.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment display (sevseg1) should show \"9\", and both LEDs (led1, led2) should be off.\nLED Blinking: The LEDs should blink alternately with a 2-second interval. When one LED is on, the other should be off, and vice versa. The sequence should be led1 -> led2 -> led1 -> led2, and so on.\nCountdown: The 7-segment display should decrement its displayed number every 4 seconds, starting from 9 and ending at 0.\nReset Condition: When the countdown reaches 0, the display should reset to 9, and the countdown should restart.\nDisplay Update: The 7-segment display should update immediately to reflect the new number after each decrement.\nLED Continuity: The LEDs should continue blinking alternately throughout the countdown process without interruption.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int LED1_PIN = 2;   \nconst int LED2_PIN = 3;   \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nint currentNumber = 9;\nunsigned long previousMillis = 0;\nconst long interval = 2000; \nbool led1State = HIGH;\nbool led2State = LOW;\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  displayNumber(currentNumber);\n  digitalWrite(LED1_PIN, led1State);\n  digitalWrite(LED2_PIN, led2State);\n}\nvoid loop() {\n  unsigned long currentMillis = millis();\n  if (currentMillis - previousMillis >= interval) {\n    previousMillis = currentMillis;\n    led1State = !led1State;\n    led2State = !led2State;\n    digitalWrite(LED1_PIN, led1State);\n    digitalWrite(LED2_PIN, led2State);\n    if (led1State == HIGH) {\n      currentNumber--;\n      if (currentNumber < 0) {\n        currentNumber = 9;\n      }\n      displayNumber(currentNumber);\n    }\n  }\n}\nvoid displayNumber(int number) {\n  byte code = segmentCodes[number];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, code);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            2,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            0
        ]
    },
    {
        "id": 102,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three LEDs (led1, led2, led3), two 7-segment displays (sevseg1, sevseg2), and three servos (servo1, servo2, servo3). The LEDs will act as indicators, the 7-segment displays will show a two-digit number, and the servos will rotate to specific angles based on the displayed number. The system should increment the displayed number by 1 every 2 seconds, and the LEDs and servos should update their states accordingly.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment displays should show \"00\", all LEDs should be off, and all servos should be at 0 degrees.\nNumber Increment: Every 2 seconds, the displayed number should increment by 1. If the number exceeds 99, it should reset to 0.\nLED Behavior: The LEDs should light up in sequence based on the units digit of the displayed number:\n- If the units digit is 0-2, only led1 should be on.\n- If the units digit is 3-5, only led2 should be on.\n- If the units digit is 6-9, only led3 should be on.\nServo Behavior: The servos should rotate to angles based on the tens digit of the displayed number:\n- If the tens digit is 0-2, servo1 should rotate to 30 degrees, servo2 to 60 degrees, and servo3 to 90 degrees.\n- If the tens digit is 3-5, servo1 should rotate to 60 degrees, servo2 to 90 degrees, and servo3 to 120 degrees.\n- If the tens digit is 6-9, servo1 should rotate to 90 degrees, servo2 to 120 degrees, and servo3 to 150 degrees.\nDisplay Update: The 7-segment displays should update immediately to reflect the new number after each increment.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led3",
                        "top": -70.8,
                        "left": 128.6,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led3:C",
                        "black"
                    ],
                    [
                        "led3:A",
                        "mega:4",
                        "red"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ],
                    [
                        "mega:5",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:6",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:7",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nconst int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int LED3_PIN = 4;  \nconst int SHCP_PIN = A2; \nconst int STCP_PIN = A1; \nconst int DS_PIN = A0;   \nconst int SERVO1_PIN = 5; \nconst int SERVO2_PIN = 6; \nconst int SERVO3_PIN = 7; \nServo servo1;\nServo servo2;\nServo servo3;\nint currentNumber = 0;\nunsigned long lastUpdateTime = 0;\nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nvoid setup() {\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  pinMode(LED3_PIN, OUTPUT);\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  servo3.attach(SERVO3_PIN);\n  displayNumber(currentNumber);\n  updateLEDs(currentNumber);\n  updateServos(currentNumber);\n}\nvoid loop() {\n  if (millis() - lastUpdateTime >= 2000) {\n    currentNumber++;\n    if (currentNumber > 99) {\n      currentNumber = 0;\n    }\n    displayNumber(currentNumber);\n    updateLEDs(currentNumber);\n    updateServos(currentNumber);\n    lastUpdateTime = millis();\n  }\n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateLEDs(int number) {\n  int unitsDigit = number % 10;\n  digitalWrite(LED1_PIN, (unitsDigit >= 0 && unitsDigit <= 2) ? HIGH : LOW);\n  digitalWrite(LED2_PIN, (unitsDigit >= 3 && unitsDigit <= 5) ? HIGH : LOW);\n  digitalWrite(LED3_PIN, (unitsDigit >= 6 && unitsDigit <= 9) ? HIGH : LOW);\n}\nvoid updateServos(int number) {\n  int tensDigit = number / 10;\n  if (tensDigit >= 0 && tensDigit <= 2) {\n    servo1.write(30);\n    servo2.write(60);\n    servo3.write(90);\n  } else if (tensDigit >= 3 && tensDigit <= 5) {\n    servo1.write(60);\n    servo2.write(90);\n    servo3.write(120);\n  } else if (tensDigit >= 6 && tensDigit <= 9) {\n    servo1.write(90);\n    servo2.write(120);\n    servo3.write(150);\n  }\n}",
        "hardware_lst": [
            3,
            0,
            0,
            2,
            0,
            0,
            0,
            2,
            3
        ]
    },
    {
        "id": 103,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two LEDs (led1, led2), a 7-segment display (sevseg1), and two servo motors (servo1, servo2). The LEDs will blink alternately, the 7-segment display will count from 0 to 9 repeatedly, and the servo motors will sweep between 0° and 180° in opposite directions. The system should operate continuously, with each component functioning independently.\n\n**Detail Rules**:\n1. **LEDs (led1, led2)**:\n   - The LEDs should blink alternately, with each LED staying on for 2 second and off for 2 second.\n   - When one LED is on, the other should be off, and vice versa.\n   - First led1 off, led2 on, then led1 on, led2 off.\n\n2. **7-Segment Display (sevseg1)**:\n   - The display should count from 0 to 9 repeatedly, with each number displayed for 2 seconds.\n   - The count should reset to 0 after reaching 9.\n\n3. **Servo Motors (servo1, servo2)**:\n   - The first servo (servo1) should sweep from 0° to 180° and back to 0° continuously, with each sweep taking 4 seconds.\n   - The second servo (servo2) should sweep from 180° to 0° and back to 180° continuously, with each sweep taking 4 seconds.\n   - The servos should move in opposite directions at the same time. \n   - when move to 180° or 0°, the servo should stop for 2 second and then continue sweep.\n   - Before the servo start the first sweep, althoug the servo is in 0° or 180°, the servo don't need to stop for 2 second.\n4. **System Operation**:\n   - All components should operate simultaneously and independently.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:5",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nconst int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int SHCP_PIN = A2; \nconst int STCP_PIN = A1; \nconst int DS_PIN = A0;   \nconst int SERVO1_PIN = 4; \nconst int SERVO2_PIN = 5; \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nint currentNumber = 0;\nunsigned long previousMillisLED = 0;\nunsigned long previousMillisDisplay = 0;\nunsigned long previousMillisServo = 0;\nbool isServoPaused = false;\nunsigned long pauseStartTime = 0;\nbool led1State = LOW;\nbool led2State = HIGH;\nvoid setup() {\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  digitalWrite(LED1_PIN, led1State);\n  digitalWrite(LED2_PIN, led2State);\n  displayNumber(currentNumber);\n}\nvoid loop() {\n  unsigned long currentMillis = millis();\n  if (currentMillis - previousMillisLED >= 2000) {\n    previousMillisLED = currentMillis;\n    led1State = !led1State;\n    led2State = !led2State;\n    digitalWrite(LED1_PIN, led1State);\n    digitalWrite(LED2_PIN, led2State);\n  }\n  if (currentMillis - previousMillisDisplay >= 2000) {\n    previousMillisDisplay = currentMillis;\n    currentNumber = (currentNumber + 1) % 10;\n    displayNumber(currentNumber);\n  }\n  if (!isServoPaused) {\n    if (currentMillis - previousMillisServo >= 20) {\n      previousMillisServo = currentMillis;\n      static int pos1 = 0;\n      static int pos2 = 180;\n      static int dir1 = 1;\n      static int dir2 = -1;\n      pos1 += dir1;\n      pos2 += dir2;\n      if (pos1 >= 180 || pos1 <= 0) dir1 = -dir1;\n      if (pos2 >= 180 || pos2 <= 0) {\n        dir2 = -dir2;\n        isServoPaused = true;\n        pauseStartTime = currentMillis;\n      }\n      servo1.write(pos1);\n      servo2.write(pos2);\n    }\n  }\n  else if (currentMillis - pauseStartTime >= 2000) {\n    isServoPaused = false;\n  }\n}\nvoid displayNumber(int number) {\n  byte code = segmentCodes[number];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, code);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            2,
            0,
            0,
            1,
            0,
            0,
            0,
            1,
            2
        ]
    },
    {
        "id": 104,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two 7-segment displays (sevseg1, sevseg2) using two shift registers (sr1, sr2), two LEDs (led1, led2), and three slide potentiometers (pot1, pot2, pot3). The 7-segment displays will show a two-digit number, where one display represents the tens digit and the other represents the units digit. The potentiometers will control the brightness of the LEDs and the displayed number. The LEDs will indicate whether the displayed number is even or odd.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment displays should show \"00\", and both LEDs should be off.\nPotentiometer Interaction:\n1. The first potentiometer (pot1) controls the brightness of the first LED (led1). The value of pot1 is mapped to a PWM range (0-255) to adjust the LED's brightness.\n2. The second potentiometer (pot2) controls the brightness of the second LED (led2). The value of pot2 is mapped to a PWM range (0-255) to adjust the LED's brightness.\n3. The third potentiometer (pot3) controls the displayed number on the 7-segment displays. The value of pot3 is mapped to a range of 0-99, with the tens digit displayed on the first 7-segment display (sevseg1) and the units digit displayed on the second 7-segment display (sevseg2).\nLED Indication:\n1. If the displayed number is even, the first LED (led1) should be on, and the second LED (led2) should be off.\n2. If the displayed number is odd, the first LED (led1) should be off, and the second LED (led2) should be on.\nDisplay Update: The 7-segment displays and LEDs should update continuously based on the current values of the potentiometers.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -408.8,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int LED1_PIN = 2;   \nconst int LED2_PIN = 3;   \nconst int POT1_PIN = A3;  \nconst int POT2_PIN = A4;  \nconst int POT3_PIN = A5;  \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  displayNumber(0); \n}\nvoid loop() {\n  int pot1Value = analogRead(POT1_PIN);\n  int pot2Value = analogRead(POT2_PIN);\n  int pot3Value = analogRead(POT3_PIN);\n  int led1Brightness = map(pot1Value, 0, 1023, 0, 255);\n  int led2Brightness = map(pot2Value, 0, 1023, 0, 255);\n  int displayedNumber = map(pot3Value, 0, 1023, 0, 99);\n  displayNumber(displayedNumber);\n  if (displayedNumber % 2 == 0) {\n    if (pot1Value > 511)\n      digitalWrite(LED1_PIN, HIGH);\n    else\n      digitalWrite(LED1_PIN, LOW);\n    digitalWrite(LED2_PIN, LOW);\n  } else {\n    digitalWrite(LED1_PIN, LOW);\n    if (pot2Value > 511)\n      digitalWrite(LED2_PIN, HIGH);\n    else\n      digitalWrite(LED2_PIN, LOW);\n  }\n  delay(100); \n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            2,
            0,
            0,
            2,
            0,
            3,
            0,
            2,
            0
        ]
    },
    {
        "id": 105,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three LEDs (led1, led2, led3), two 7-segment displays (sevseg1, sevseg2), and a slide potentiometer (pot1). The potentiometer will determine the brightness level of the LEDs and the number displayed on the 7-segment displays. The LEDs will light up in sequence based on the potentiometer's value, and the 7-segment displays will show a two-digit number corresponding to the potentiometer's value.\n\n**Detail Rules**:\n1. **Initialization**: Upon powering on or resetting, all LEDs (led1, led2, led3) should be off, and the 7-segment displays (sevseg1, sevseg2) should show \"00\".\n2. **Potentiometer Interaction**:\n   - The potentiometer (pot1) value ranges from 0 to 1023. This value should be mapped to a range of 0 to 99 for display on the 7-segment displays.\n   - The mapped value should be displayed on the two 7-segment displays, with the tens digit on one display (sevseg1) and the units digit on the other (sevseg2).\n3. **LED Control**:\n   - If the mapped potentiometer value is between 0 and 33, only LED1 (led1) should light up.\n   - If the mapped value is between 34 and 66, LED1 (led1) and LED2 (led2) should light up.\n   - If the mapped value is between 67 and 99, all three LEDs (led1, led2, led3) should light up.\n4. **Display Update**: The 7-segment displays and LEDs should update continuously based on the potentiometer's current value.\n5. **State Maintenance**: Each state (LEDs and display) should be maintained for at least 2 seconds to allow for verification.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led3",
                        "top": -70.8,
                        "left": 128.6,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led3:C",
                        "black"
                    ],
                    [
                        "led3:A",
                        "mega:4",
                        "red"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int LED3_PIN = 4;  \nconst int SHCP_PIN = A2; \nconst int STCP_PIN = A1; \nconst int DS_PIN = A0;   \nconst int POT_PIN = A3;  \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nvoid setup() {\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  pinMode(LED3_PIN, OUTPUT);\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(POT_PIN, INPUT);\n  digitalWrite(LED1_PIN, LOW);\n  digitalWrite(LED2_PIN, LOW);\n  digitalWrite(LED3_PIN, LOW);\n  displayNumber(0); \n}\nvoid loop() {\n  int potValue = analogRead(POT_PIN);\n  int mappedValue = map(potValue, 0, 1023, 0, 99);\n  if (mappedValue <= 33) {\n    digitalWrite(LED1_PIN, HIGH);\n    digitalWrite(LED2_PIN, LOW);\n    digitalWrite(LED3_PIN, LOW);\n  } else if (mappedValue <= 66) {\n    digitalWrite(LED1_PIN, HIGH);\n    digitalWrite(LED2_PIN, HIGH);\n    digitalWrite(LED3_PIN, LOW);\n  } else {\n    digitalWrite(LED1_PIN, HIGH);\n    digitalWrite(LED2_PIN, HIGH);\n    digitalWrite(LED3_PIN, HIGH);\n  }\n  displayNumber(mappedValue);\n  delay(2000); \n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            3,
            0,
            0,
            2,
            0,
            1,
            0,
            2,
            0
        ]
    },
    {
        "id": 106,
        "problem": "\n\n**Task**:\nProgram the Arduino (uno) to control two 7-segment displays (sevseg1, sevseg2), a 10-segment LED bar graph (bargraph1), and two LEDs (led1, led2) using shift registers (sr1, sr2). The system displays an incrementing number from 00 to 99, visualizes its magnitude on the bar graph, and blinks the LEDs alternately every 2 seconds.\n\n**Detail Rules**:\n1. **Initialization**: \n   - 7-segment displays show \"00\".\n   - LED bar graph (bargraph1) lights up 1 segment.(PIN A1)\n   - Both LEDs (led1, led2) remain off.\n\n2. **Increment Cycle**:\n   - The displayed number increases by 1 every 2 seconds. After reaching 99, it resets to 00.\n   - The 7-segment displays update to show the tens digit on sevseg1 and the units digit on sevseg2.\n\n3. **Bar Graph Behavior**:\n   - The bar graph lights up a number of segments equal to the tens digit + 1 (e.g., 25 → 3 segments, 90 → 10 segments).(PIN A1-A10)\n\n4. **LED Blinking**:\n   - led1 and led2 alternate states every 2 seconds (e.g., led1 on/led2 off for 2 seconds, then led1 off/led2 on).\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;\nconst int STCP_PIN = A1;\nconst int DS_PIN = A0;\nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nint currentNumber = 0;\nbool ledState = false;\nvoid setup() {\n  for (int i = 2; i <= 13; i++) pinMode(i, OUTPUT);  \n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  displayNumber(0);\n  updateBarGraph(1);\n}\nvoid loop() {\n  delay(2000);\n  currentNumber = (currentNumber + 1) % 100;\n  displayNumber(currentNumber);\n  updateBarGraph((currentNumber / 10) + 1);\n  ledState = !ledState;\n  digitalWrite(2, ledState ? HIGH : LOW);  \n  digitalWrite(3, !ledState ? HIGH : LOW); \n}\nvoid displayNumber(int num) {\n  byte tensCode = segmentCodes[num / 10];\n  byte unitsCode = segmentCodes[num % 10];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, unitsCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateBarGraph(int segments) {\n  for (int i = 4; i <= 13; i++) {  \n    digitalWrite(i, (i < 4 + segments) ? HIGH : LOW);\n  }\n}",
        "hardware_lst": [
            2,
            0,
            0,
            2,
            1,
            0,
            0,
            2,
            0
        ]
    },
    {
        "id": 107,
        "problem": "\n  \n**Task**:  \nYou are tasked with programming an Arduino (uno) to synchronize a 7-segment display (sevseg1), two LEDs (led1, led2), and a 10-segment LED bar graph (bargraph1) using a shift register (sr1). The system will cycle through numbers 0–9, with the 7-segment display showing the current number, the bar graph indicating the number of active segments, and the LEDs signaling parity (even/odd).  \n\n**Detail Rules**:  \n1. **Initialization**:  \n   - The 7-segment display (sevseg1) starts at \"0\".  \n   - The bar graph (bargraph1) is fully off.  \n   - Both LEDs (led1, led2) are off.  \n\n2. **Cycle Behavior**:  \n   - Every 2 seconds, increment the displayed number from 0 to 9. After 9, reset to 0.  \n   - The 7-segment display (sevseg1) must show the current number.  \n   - The bar graph (bargraph1) lights up segments equal to the current number (e.g., 3 → PIN A1-A3).  \n   - **LED Rules**:  \n     - If the number is **even**, turn on led1 and turn off led2.  \n     - If the number is **odd**, turn on led2 and turn off led1.  \n\n3. **Timing**:  \n   - Each number must be displayed for **exactly 2 seconds** before incrementing.  \n   - All components must update simultaneously when the number changes.  \n\n4. **Hardware Usage**:  \n   - The shift register (sr1) must drive the 7-segment display (sevseg1).  \n   - The bar graph (bargraph1) must use direct GPIO pins for segment control.  \n   - Both LEDs (led1, led2) must be used to indicate parity.  \n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "mega:4",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Arduino.h>  \nconst int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;  \nconst int BAR_PINS[] = {4,5,6,7,8,9,10,11,12,13};  \nconst int LED_EVEN = 2;  \nconst int LED_ODD = 3;   \nconst byte SEGMENT_CODES[10] = {  \n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};  \nint currentNumber = 0;  \nunsigned long lastUpdate = 0;  \nvoid updateBarGraph(int num) {  \n  for (int i = 0; i < 10; i++) {  \n    digitalWrite(BAR_PINS[i], (i < num) ? HIGH : LOW);  \n  }  \n}  \nvoid updateLEDs(bool isEven) {  \n  digitalWrite(LED_EVEN, isEven ? HIGH : LOW);  \n  digitalWrite(LED_ODD, isEven ? LOW : HIGH);  \n}  \nvoid setup() {  \n  pinMode(SHCP_PIN, OUTPUT);  \n  pinMode(STCP_PIN, OUTPUT);  \n  pinMode(DS_PIN, OUTPUT);  \n  pinMode(LED_EVEN, OUTPUT);  \n  pinMode(LED_ODD, OUTPUT);  \n  for (int i = 0; i < 10; i++) {  \n    pinMode(BAR_PINS[i], OUTPUT);  \n    digitalWrite(BAR_PINS[i], LOW);  \n  }  \n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, SEGMENT_CODES[0]);  \n  digitalWrite(STCP_PIN, HIGH);  \n  digitalWrite(STCP_PIN, LOW);  \n  updateLEDs(currentNumber % 2 == 0);  \n}  \nvoid loop() {  \n  if (millis() - lastUpdate >= 2000) {  \n    currentNumber = (currentNumber + 1) % 10;  \n    shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, SEGMENT_CODES[currentNumber]);  \n    digitalWrite(STCP_PIN, HIGH);  \n    digitalWrite(STCP_PIN, LOW);  \n    updateBarGraph(currentNumber);  \n    updateLEDs(currentNumber % 2 == 0);  \n    lastUpdate = millis();  \n  }  \n}  ",
        "hardware_lst": [
            2,
            0,
            0,
            1,
            1,
            0,
            0,
            1,
            0
        ]
    },
    {
        "id": 108,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a single-color LED (led1) and three RGB LEDs (rgb1, rgb2, rgb3). The single-color LED will act as a status indicator, while the RGB LEDs will cycle through a sequence of colors. The single-color LED should blink at a fixed interval, and the RGB LEDs should transition through a predefined sequence of colors, with each color displayed for 2 seconds.\n\n**Detail Rules**:\n1. **Single-color LED (led1)**:\n   - The LED should blink on and off with a 2-second interval (2 second on, 2 second off).\n   - This blinking should continue indefinitely.\n\n2. **RGB LEDs (rgb1, rgb2, rgb3)**:\n   - All three RGB LEDs should synchronously cycle through the following sequence of colors:\n     - Red (R=255, G=0, B=0)\n     - Green (R=0, G=255, B=0)\n     - Blue (R=0, G=0, B=255)\n     - Yellow (R=255, G=255, B=0)\n     - Cyan (R=0, G=255, B=255)\n     - Magenta (R=255, G=0, B=255)\n     - White (R=255, G=255, B=255)\n   - Each color should be displayed for 2 seconds before transitioning to the next color.\n   - After reaching the last color (White), the sequence should restart from Red.\n\n3. **Synchronization**:\n   - The blinking of the single-color LED (led1) and the color transitions of the RGB LEDs should operate independently but simultaneously.\n\n4. **Initial State**:\n   - On startup, the single-color LED (led1) should be off, and the RGB LEDs (rgb1, rgb2, rgb3) should display the first color in the sequence (Red).\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb3",
                        "top": -130.4,
                        "left": 154.7,
                        "attrs": {
                            "common": "cathode"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:3",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:4",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:5",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:6",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:7",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:8",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb3:COM",
                        "black"
                    ],
                    [
                        "mega:9",
                        "rgb3:R",
                        "red"
                    ],
                    [
                        "mega:10",
                        "rgb3:G",
                        "green"
                    ],
                    [
                        "mega:11",
                        "rgb3:B",
                        "blue"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED_PIN = 2;  \nconst int RGB1_R = 3;   \nconst int RGB1_G = 4;   \nconst int RGB1_B = 5;   \nconst int RGB2_R = 6;   \nconst int RGB2_G = 7;   \nconst int RGB2_B = 8;   \nconst int RGB3_R = 9;   \nconst int RGB3_G = 10;   \nconst int RGB3_B = 11;   \nconst int COLOR_DURATION = 2000;  \nconst int BLINK_INTERVAL = 2000;  \nunsigned long lastBlinkTime = 0;\nunsigned long lastColorChangeTime = 0;\nbool ledState = LOW;\nint currentColorIndex = 0;\nconst int colors[7][3] = {\n  {255, 0, 0},    \n  {0, 255, 0},    \n  {0, 0, 255},    \n  {255, 255, 0},  \n  {0, 255, 255},  \n  {255, 0, 255},  \n  {255, 255, 255} \n};\nvoid setup() {\n  pinMode(LED_PIN, OUTPUT);\n  pinMode(RGB1_R, OUTPUT);\n  pinMode(RGB1_G, OUTPUT);\n  pinMode(RGB1_B, OUTPUT);\n  pinMode(RGB2_R, OUTPUT);\n  pinMode(RGB2_G, OUTPUT);\n  pinMode(RGB2_B, OUTPUT);\n  pinMode(RGB3_R, OUTPUT);\n  pinMode(RGB3_G, OUTPUT);\n  pinMode(RGB3_B, OUTPUT);\n  setRGBColor(colors[currentColorIndex][0], colors[currentColorIndex][1], colors[currentColorIndex][2]);\n}\nvoid loop() {\n  unsigned long currentTime = millis();\n  if (currentTime - lastBlinkTime >= BLINK_INTERVAL) {\n    ledState = !ledState;\n    digitalWrite(LED_PIN, ledState);\n    lastBlinkTime = currentTime;\n  }\n  if (currentTime - lastColorChangeTime >= COLOR_DURATION) {\n    currentColorIndex = (currentColorIndex + 1) % 7;\n    setRGBColor(colors[currentColorIndex][0], colors[currentColorIndex][1], colors[currentColorIndex][2]);\n    lastColorChangeTime = currentTime;\n  }\n}\nvoid setRGBColor(int red, int green, int blue) {\n  analogWrite(RGB1_R, red);\n  analogWrite(RGB1_G, green);\n  analogWrite(RGB1_B, blue);\n  analogWrite(RGB2_R, red);\n  analogWrite(RGB2_G, green);\n  analogWrite(RGB2_B, blue);\n  analogWrite(RGB3_R, red);\n  analogWrite(RGB3_G, green);\n  analogWrite(RGB3_B, blue);\n}",
        "hardware_lst": [
            1,
            0,
            3,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 109,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three LEDs (led1, led2, led3), an RGB LED (rgb1), and two servo motors (servo1, servo2). The LEDs will blink in sequence, the RGB LED will cycle through colors, and the servo motors will sweep back and forth in synchronization with the LED sequence.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, all LEDs (led1, led2, led3) should be off, the RGB LED (rgb1) should display red, and both servo motors (servo1, servo2) should be at their 0-degree position.\nServo Motors: The servo motors (servo1, servo2) should sweep from 0 degrees to 180 degrees and back to 0 degrees . Each sweep should take 2 seconds, and the servos should pause for 2 seconds at the 0-degree and 180-degree positions. This sequence should be infinitely repeated.\nLED Sequence: The LEDs (led1, led2, led3) should blink in sequence, each flicker occurs when the servo motor (servo 1, servo 2) reaches 0 degrees or 180 degrees in scanning seconds, and then the next LED turns on. This sequence should be infinitely repeated.\nRGB LED: The RGB LED (rgb1) should cycle through the colors red, green, and blue, each flicker occurs when the servo motor (servo 1, servo 2) reaches 0 degrees or 180 degrees in scanning seconds.\nRGB flicker should be synchronized with LED.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led3",
                        "top": -70.8,
                        "left": 128.6,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led3:C",
                        "black"
                    ],
                    [
                        "led3:A",
                        "mega:4",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:8",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:9",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nint ledPins[] = {2, 3, 4};  \nint rgbPins[] = {5, 6, 7};  \nint servoPins[] = {8, 9};   \nint currentLed = 0;\nint currentColor = 0;\nint servoPos = 0;\nint sweepDirection = -1;\nvoid setup() {\n  for (int i = 0; i < 3; i++) {\n    pinMode(ledPins[i], OUTPUT);\n    pinMode(rgbPins[i], OUTPUT);\n  }\n  servo1.attach(servoPins[0]);\n  servo2.attach(servoPins[1]);\n  servo1.write(0);\n  servo2.write(0);\n  setColor(0); \n}\nvoid loop() {\n  digitalWrite(ledPins[currentLed], HIGH);\n  setColor(currentColor);\n  sweepServos();\n  delay(200);\n  digitalWrite(ledPins[currentLed], LOW);\n  currentLed = (currentLed + 1) % 3;\n  currentColor = (currentColor + 1) % 3;\n}\nvoid setColor(int color) {\n  for (int i = 0; i < 3; i++) {\n    digitalWrite(rgbPins[i], LOW);\n  }\n  digitalWrite(rgbPins[color], HIGH);\n}\nvoid sweepServos() {\n  if (servoPos == 0 || servoPos == 180) {\n    sweepDirection *= -1;\n    delay(2000);\n  }\n  if (sweepDirection == 1 )\n  {    while(servoPos < 180)\n    {servoPos += sweepDirection * 10;\n    servo1.write(servoPos);\n    servo2.write(servoPos);\n    delay(100);}}\n  if (sweepDirection == -1 )\n  {  while(servoPos > 0 )\n    {servoPos += sweepDirection * 10;\n    servo1.write(servoPos);\n    servo2.write(servoPos);\n    delay(100);}}\n}",
        "hardware_lst": [
            3,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            2
        ]
    },
    {
        "id": 110,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a single-color LED (led1), two RGB LEDs (rgb1, rgb2), and three servo motors (servo1, servo2, servo3). The system should create a synchronized light and motion display. The LED and RGB LEDs will change their brightness and colors, while the servo motors will move to specific angles in a coordinated manner.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the LED (led1) should be off, the RGB LEDs (rgb1, rgb2) should display red light, and the servo motors (servo1, servo2, servo3) should be at their 0-degree position.\nOperation:\n1. The LED (led1) should blink on and off with a 2-second interval.\n2. The RGB LEDs (rgb1, rgb2) should cycle through the colors of the rainbow (red, green, blue, yellow, cyan, magenta, white) in sequence, with each color displayed for 2 seconds.\n3. The servo motors (servo 1, servo 2, servo 3) should move in synchronous mode:\n-If Servo1 is at 0 degrees, scan to 180 degrees; If at 180 degrees, scan to 0 degrees. (init at 0 degrees)\n-If Servo2 is at 180 degrees, it will scan to 0 degrees; If at 0 degrees, scan to 180 degrees. (init at 180 degrees)\n-If Servo3 is at 90 degrees, it will scan to 135 degrees; If it is at 135 degrees, scan to 90 degrees. (init at 90 degrees)\nEach scan should have a 2-second interval.\n4. The LED blinking, RGB color cycling, and servo movements should all be synchronized and repeat continuously.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo3",
                        "left": -201.6,
                        "top": 170.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:3",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:4",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:5",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:6",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:7",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:8",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:9",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:10",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ],
                    [
                        "mega:11",
                        "servo3:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo3:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo3:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nServo servo3;\nconst int LED_PIN = 2;  \nconst int RGB1_RED_PIN = 3;  \nconst int RGB1_GREEN_PIN = 4;  \nconst int RGB1_BLUE_PIN = 5;  \nconst int RGB2_RED_PIN = 6;  \nconst int RGB2_GREEN_PIN = 7;  \nconst int RGB2_BLUE_PIN = 8;  \nconst int SERVO1_PIN = 9;  \nconst int SERVO2_PIN = 10;  \nconst int SERVO3_PIN = 11;  \nconst int RAINBOW_COLORS[7][3] = {\n  {255, 0, 0},   \n  {0, 255, 0},   \n  {0, 0, 255},   \n  {255, 255, 0}, \n  {0, 255, 255}, \n  {255, 0, 255}, \n  {255, 255, 255}\n};\nint currentColorIndex = 0;\nint ledMillis = millis();\nint rgbMillis = millis();\nint servoMillis = millis();\nconst long interval = 2000;\nbool ledState = LOW;\nint servoDirection = 1;\nint pos = 0;\nvoid setup() {\n  pinMode(LED_PIN, OUTPUT);\n  pinMode(RGB1_RED_PIN, OUTPUT);\n  pinMode(RGB1_GREEN_PIN, OUTPUT);\n  pinMode(RGB1_BLUE_PIN, OUTPUT);\n  pinMode(RGB2_RED_PIN, OUTPUT);\n  pinMode(RGB2_GREEN_PIN, OUTPUT);\n  pinMode(RGB2_BLUE_PIN, OUTPUT);\n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  servo3.attach(SERVO3_PIN);\n  servo1.write(0);\n  servo2.write(180);\n  servo3.write(90);\n  setRGBColor(RAINBOW_COLORS[currentColorIndex][0], RAINBOW_COLORS[currentColorIndex][1], RAINBOW_COLORS[currentColorIndex][2]);\n  currentColorIndex = (currentColorIndex + 1) % 7;\n}\nvoid loop() {\n  if (millis() - ledMillis >= interval){\n    ledMillis = millis(); \n    ledState = !ledState; \n    digitalWrite(LED_PIN, ledState);\n  }\n  if (millis() - rgbMillis >= 2000){\n    rgbMillis = millis(); \n    setRGBColor(RAINBOW_COLORS[currentColorIndex][0], RAINBOW_COLORS[currentColorIndex][1], RAINBOW_COLORS[currentColorIndex][2]);\n    currentColorIndex = (currentColorIndex + 1) % 7;\n  }\n  if (millis() - servoMillis >= 2000) {\n    servoMillis = millis(); \n    if (servoDirection == 1){\n      servo1.write(180);\n      servo2.write(0);\n      servo3.write(135);\n    }\n    else{\n      servo1.write(0);\n      servo2.write(180);\n      servo3.write(90);\n    }\n    servoDirection *= -1; \n  }\n}\nvoid setRGBColor(int red, int green, int blue) {\n  analogWrite(RGB1_RED_PIN, red);\n  analogWrite(RGB1_GREEN_PIN, green);\n  analogWrite(RGB1_BLUE_PIN, blue);\n  analogWrite(RGB2_RED_PIN, red);\n  analogWrite(RGB2_GREEN_PIN, green);\n  analogWrite(RGB2_BLUE_PIN, blue);\n}",
        "hardware_lst": [
            1,
            0,
            2,
            0,
            0,
            0,
            0,
            0,
            3
        ]
    },
    {
        "id": 111,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three single-color LEDs (led1, led2, led3) and an RGB LED (rgb1) using a slide potentiometer (pot1). The potentiometer will determine the brightness of the RGB LED and the state of the single-color LEDs. The single-color LEDs will act as indicators for different brightness ranges of the RGB LED.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, all LEDs (led1, led2, led3, rgb1) should be off.\nPotentiometer Interaction:\n1. The slide potentiometer (pot1) will control the brightness of the RGB LED (rgb1). The value of the potentiometer is mapped to a brightness level between 0 and 255 for each color channel (R, G, B).\n2. The single-color LEDs (led1, led2, led3) will act as indicators for the brightness level of the RGB LED:\n   - If the potentiometer value is in the lower third (0-341), only led1 should be on.\n   - If the potentiometer value is in the middle third (342-682), only led2 should be on.\n   - If the potentiometer value is in the upper third (683-1023), only led3 should be on.\n3. The RGB LED (rgb1) should display a color based on the potentiometer value:\n   - The red channel should be at maximum brightness when the potentiometer is in the lower third.\n   - The green channel should be at maximum brightness when the potentiometer is in the middle third.\n   - The blue channel should be at maximum brightness when the potentiometer is in the upper third.\n4. The state of the LEDs should update continuously based on the potentiometer value.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led3",
                        "top": -70.8,
                        "left": 128.6,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led3:C",
                        "black"
                    ],
                    [
                        "led3:A",
                        "mega:4",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int LED3_PIN = 4;  \nconst int RGB_R_PIN = 5; \nconst int RGB_G_PIN = 6; \nconst int RGB_B_PIN = 7; \nconst int POT_PIN = A3;  \nvoid setup() {\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  pinMode(LED3_PIN, OUTPUT);\n  pinMode(RGB_R_PIN, OUTPUT);\n  pinMode(RGB_G_PIN, OUTPUT);\n  pinMode(RGB_B_PIN, OUTPUT);\n}\nvoid loop() {\n  int potValue = analogRead(POT_PIN);\n  if (potValue <= 341) {\n    digitalWrite(LED1_PIN, HIGH);\n    digitalWrite(LED2_PIN, LOW);\n    digitalWrite(LED3_PIN, LOW);\n    analogWrite(RGB_R_PIN, 255);\n    analogWrite(RGB_G_PIN, 0);\n    analogWrite(RGB_B_PIN, 0);\n  } else if (potValue <= 682) {\n    digitalWrite(LED1_PIN, LOW);\n    digitalWrite(LED2_PIN, HIGH);\n    digitalWrite(LED3_PIN, LOW);\n    analogWrite(RGB_R_PIN, 0);\n    analogWrite(RGB_G_PIN, 255);\n    analogWrite(RGB_B_PIN, 0);\n  } else {\n    digitalWrite(LED1_PIN, LOW);\n    digitalWrite(LED2_PIN, LOW);\n    digitalWrite(LED3_PIN, HIGH);\n    analogWrite(RGB_R_PIN, 0);\n    analogWrite(RGB_G_PIN, 0);\n    analogWrite(RGB_B_PIN, 255);\n  }\n}",
        "hardware_lst": [
            3,
            0,
            1,
            0,
            0,
            1,
            0,
            0,
            0
        ]
    },
    {
        "id": 112,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three single-color LEDs (led1, led2, led3) and two RGB LEDs (rgb1, rgb2) using two slide potentiometers (pot1, pot2). The slide potentiometers will control the brightness of the single-color LEDs and the color of the RGB LEDs. The single-color LEDs will act as indicators for the potentiometer values, while the RGB LEDs will display a color gradient based on the combined values of the potentiometers.\n\n**Detail Rules**:\n1. **Single-Color LEDs (led1, led2, led3)**:\n   - The brightness of each single-color LED is controlled by the value of one potentiometer.\n   - `led1` brightness is controlled by `pot1`.\n   - `led2` brightness is controlled by `pot2`.\n   - If both `pot1` and `pot2` are at their maximum value (1023),\n`led3` should be on.\n   - The brightness of each LED should be updated continuously based on the potentiometer values.\n\n2. **RGB LEDs (rgb1, rgb2)**:\n   - The color of both RGB LEDs is determined by the combined values of `pot1` and `pot2`.\n   - The red component is controlled by `pot1`.\n   - The green component is controlled by `pot2`.\n   - If both `pot1` and `pot2` are at their maximum value (1023), the RGB LEDs should display white.\n   - The RGB LEDs should display the same color gradient, updated continuously based on the potentiometer values.\n\n3. **Potentiometer Values**:\n   - The values of `pot1` and `pot2` range from 0 to 1023.\n   - These values should be mapped to appropriate ranges for controlling LED brightness (0-255) and RGB color components (0-255).\n\n4. **State Maintenance**:\n   - The system should continuously update the LED states based on the potentiometer values.\n\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led3",
                        "top": -70.8,
                        "left": 128.6,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led3:C",
                        "black"
                    ],
                    [
                        "led3:A",
                        "mega:4",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:8",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:9",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:10",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int LED3_PIN = 4;  \nconst int RGB1_R_PIN = 5;  \nconst int RGB1_G_PIN = 6;  \nconst int RGB1_B_PIN = 7;  \nconst int RGB2_R_PIN = 8;  \nconst int RGB2_G_PIN = 9;  \nconst int RGB2_B_PIN = 10;  \nconst int POT1_PIN = A3;  \nconst int POT2_PIN = A4;  \nvoid setup() {\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  pinMode(LED3_PIN, OUTPUT);\n  pinMode(RGB1_R_PIN, OUTPUT);\n  pinMode(RGB1_G_PIN, OUTPUT);\n  pinMode(RGB1_B_PIN, OUTPUT);\n  pinMode(RGB2_R_PIN, OUTPUT);\n  pinMode(RGB2_G_PIN, OUTPUT);\n  pinMode(RGB2_B_PIN, OUTPUT);\n}\nvoid loop() {\n  int pot1Value = analogRead(POT1_PIN);  \n  int pot2Value = analogRead(POT2_PIN);  \n  int led1Brightness = map(pot1Value, 0, 1023, 0, 255);  \n  int led2Brightness = map(pot2Value, 0, 1023, 0, 255);  \n  int led3Brightness = 0;\n  if (pot1Value+pot2Value==2046){\n    led3Brightness = 255;\n  }else{\n    led3Brightness = 0;\n  }\n  analogWrite(LED1_PIN, led1Brightness);  \n  analogWrite(LED2_PIN, led2Brightness);  \n  analogWrite(LED3_PIN, led3Brightness);  \n  int red = map(pot1Value, 0, 1023, 0, 255);  \n  int green = map(pot2Value, 0, 1023, 0, 255);  \n  int blue = 0;  \n  if(pot1Value+pot2Value==2046){\n    blue = 255;\n  }\n  else{\n    blue = 0;\n  }\n  analogWrite(RGB1_R_PIN, red);  \n  analogWrite(RGB1_G_PIN, green);  \n  analogWrite(RGB1_B_PIN, blue);  \n  analogWrite(RGB2_R_PIN, red);  \n  analogWrite(RGB2_G_PIN, green);  \n  analogWrite(RGB2_B_PIN, blue);  \n  delay(20);  \n}",
        "hardware_lst": [
            3,
            0,
            2,
            0,
            0,
            2,
            0,
            0,
            0
        ]
    },
    {
        "id": 113,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to create a synchronized light sequence using a regular LED (led1), three RGB LEDs (rgb1, rgb2, rgb3), and a 4-segment LED bar graph (bargraph1). The system must cycle through distinct stages where each hardware component exhibits specific behaviors.\n\n**Detail Rules**:\n1. **Initialization**: All LEDs must start in an off state.\n2. **Stage Cycling**:\n   - The system progresses through four stages, each lasting exactly 2 seconds.\n   - After completing Stage 4, the sequence repeats from Stage 1.\n3. **Stage 1 (0-2 seconds)**:\n   - The regular LED (led1) is turned off.\n   - RGB1 (rgb1) displays red; RGB2 (rgb2) and RGB3 (rgb3) remain off.\n   - The bar graph (bargraph1) lights up 1 segment.(PIN A1)\n4. **Stage 2 (2-4 seconds)**:\n   - The regular LED lights up.\n   - RGB1 displays green, RGB2 displays blue, and RGB3 remains off.\n   - The bar graph lights up 2 segments.(PIN A1-A2)\n5. **Stage 3 (4-6 seconds)**:\n   - The regular LED (led1) is turned off.\n   - RGB1 displays blue, RGB2 displays red, and RGB3 displays green.\n   - The bar graph lights up 3 segments.(PIN A1-A3)\n6. **Stage 4 (6-8 seconds)**:\n   - The regular LED lights up.\n   - All RGB LEDs display white (all colors activated).\n   - The bar graph lights up all 4 segments.(PIN A1-A4)\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb3",
                        "top": -130.4,
                        "left": 154.7,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:3",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:4",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:5",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:6",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:7",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:8",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb3:COM",
                        "black"
                    ],
                    [
                        "mega:9",
                        "rgb3:R",
                        "red"
                    ],
                    [
                        "mega:10",
                        "rgb3:G",
                        "green"
                    ],
                    [
                        "mega:11",
                        "rgb3:B",
                        "blue"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:45",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED_PIN = 2;  \nconst int RGB1_R = 3, RGB1_G = 4, RGB1_B = 5;  \nconst int RGB2_R = 6, RGB2_G = 7, RGB2_B = 8;  \nconst int RGB3_R = 9, RGB3_G = 10, RGB3_B = 11;  \nconst int BAR_PINS[] = {12, 13, 44, 45};  \nvoid setup() {\n  pinMode(LED_PIN, OUTPUT);\n  pinMode(RGB1_R, OUTPUT); pinMode(RGB1_G, OUTPUT); pinMode(RGB1_B, OUTPUT);\n  pinMode(RGB2_R, OUTPUT); pinMode(RGB2_G, OUTPUT); pinMode(RGB2_B, OUTPUT);\n  pinMode(RGB3_R, OUTPUT); pinMode(RGB3_G, OUTPUT); pinMode(RGB3_B, OUTPUT);\n  for (int i = 0; i < 4; i++) pinMode(BAR_PINS[i], OUTPUT);\n}\nvoid loop() {\n  unsigned long currentMillis = millis();\n  int stage = (currentMillis / 2000) % 4;\n  static unsigned long lastBlink = 0;\n  static bool ledState = LOW;\n  if (currentMillis - lastBlink >= 2000) {\n    lastBlink = currentMillis;\n    ledState = !ledState;\n    digitalWrite(LED_PIN, ledState);\n  }\n  switch (stage) {\n    case 0: \n      setRGB(RGB1_R, RGB1_G, RGB1_B, HIGH, LOW, LOW);\n      setRGB(RGB2_R, RGB2_G, RGB2_B, LOW, LOW, LOW);\n      setRGB(RGB3_R, RGB3_G, RGB3_B, LOW, LOW, LOW);\n      break;\n    case 1: \n      setRGB(RGB1_R, RGB1_G, RGB1_B, LOW, HIGH, LOW);\n      setRGB(RGB2_R, RGB2_G, RGB2_B, LOW, LOW, HIGH);\n      setRGB(RGB3_R, RGB3_G, RGB3_B, LOW, LOW, LOW);\n      break;\n    case 2: \n      setRGB(RGB1_R, RGB1_G, RGB1_B, LOW, LOW, HIGH);\n      setRGB(RGB2_R, RGB2_G, RGB2_B, HIGH, LOW, LOW);\n      setRGB(RGB3_R, RGB3_G, RGB3_B, LOW, HIGH, LOW);\n      break;\n    case 3: \n      setRGB(RGB1_R, RGB1_G, RGB1_B, HIGH, HIGH, HIGH);\n      setRGB(RGB2_R, RGB2_G, RGB2_B, HIGH, HIGH, HIGH);\n      setRGB(RGB3_R, RGB3_G, RGB3_B, HIGH, HIGH, HIGH);\n      break;\n  }\n  for (int i = 0; i < 4; i++) {\n    digitalWrite(BAR_PINS[i], (i <= stage) ? HIGH : LOW);\n  }\n}\nvoid setRGB(int r, int g, int b, bool rState, bool gState, bool bState) {\n  digitalWrite(r, rState);\n  digitalWrite(g, gState);\n  digitalWrite(b, bState);\n}",
        "hardware_lst": [
            1,
            0,
            3,
            0,
            1,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 114,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two single-color LEDs (led1, led2), two RGB LEDs (rgb1, rgb2), and a 6-segment LED bar graph (bargraph1). The system must cycle through three distinct lighting patterns, each lasting 2 seconds, using all components in every state.\n\n**Detail Rules**:\n1. **Initialization**: All LEDs and bar graph segments must be off when the system starts or resets.\n2. **State 1 (Duration: 2 seconds)**:\n   - The monochrome LED (led1) lights up and the monochrome LED (led2) goes out.\n   - RGB LED (rgb1) displays red.\n   - The first three segments of the bar graph (bargraph1) light up.(PIN A1-A3)\n3. **State 2 (Duration: 2 seconds)**:\n   - The monochrome LED (led2) lights up and the monochrome LED (led1) goes out.\n   - RGB LED (rgb2) displays green.\n   - The last three segments of the bar graph (bargraph1) light up.(PIN A4-A6)\n4. **State 3 (Duration: 2 seconds)**:\n   - Both monochrome LEDs (LED 1, LED 2) are lit up.\n   - Both RGB LEDs (rgb1, rgb2) display a cyan color (blue + green).\n   - All six segments of the bar graph (bargraph1) light up.(PIN A1-A6)\n5. **Cycle**: Repeat states 1-3 indefinitely.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:4",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:5",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:6",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:7",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:8",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:9",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:45",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int RGB1_R = 4, RGB1_G = 5, RGB1_B = 6;  \nconst int RGB2_R = 7, RGB2_G = 8, RGB2_B = 9;  \nconst int BAR_PINS[] = {10, 11, 12, 13, 44, 45};  \nunsigned long previousMillis = 0;\nint state = 0;\nbool ledState = false;\nvoid setup() {\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  pinMode(RGB1_R, OUTPUT);\n  pinMode(RGB1_G, OUTPUT);\n  pinMode(RGB1_B, OUTPUT);\n  pinMode(RGB2_R, OUTPUT);\n  pinMode(RGB2_G, OUTPUT);\n  pinMode(RGB2_B, OUTPUT);\n  for (int i = 0; i < 6; i++) {\n    pinMode(BAR_PINS[i], OUTPUT);\n  }\n}\nvoid loop() {\n  unsigned long currentMillis = millis();\n  if (currentMillis - previousMillis >= 2000) {\n    previousMillis = currentMillis;\n    state = (state + 1) % 3;\n    resetAll();\n  }\n  switch(state) {\n    case 0:  \n      digitalWrite(LED1_PIN, HIGH );\n      digitalWrite(RGB1_R, HIGH);\n      for (int i = 0; i < 3; i++) digitalWrite(BAR_PINS[i], HIGH);\n      break;\n    case 1:  \n      digitalWrite(LED2_PIN, HIGH);\n      digitalWrite(RGB2_G, HIGH);\n      for (int i = 3; i < 6; i++) digitalWrite(BAR_PINS[i], HIGH);\n      break;\n    case 2:  \n      digitalWrite(LED1_PIN, HIGH);\n      digitalWrite(LED2_PIN, HIGH);\n      digitalWrite(RGB1_B, HIGH);\n      digitalWrite(RGB1_G, HIGH);\n      digitalWrite(RGB2_B, HIGH);\n      digitalWrite(RGB2_G, HIGH);\n      for (int i = 0; i < 6; i++) digitalWrite(BAR_PINS[i], HIGH);\n      break;\n  }\n}\nvoid resetAll() {\n  digitalWrite(LED1_PIN, LOW);\n  digitalWrite(LED2_PIN, LOW);\n  digitalWrite(RGB1_R, LOW);\n  digitalWrite(RGB1_G, LOW);\n  digitalWrite(RGB1_B, LOW);\n  digitalWrite(RGB2_R, LOW);\n  digitalWrite(RGB2_G, LOW);\n  digitalWrite(RGB2_B, LOW);\n  for (int i = 0; i < 6; i++) digitalWrite(BAR_PINS[i], LOW);\n}",
        "hardware_lst": [
            2,
            0,
            2,
            0,
            1,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 115,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a system consisting of three single-color LEDs (led1, led2, led3), two RGB LEDs (rgb1, rgb2), and two 7-segment displays (sevseg1, sevseg2) using two shift registers (sr1, sr2). The system should display a countdown from 9 to 0 on the 7-segment displays, with the LEDs and RGB LEDs providing visual feedback during the countdown.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment displays should show \"99\", and all LEDs and RGB LEDs should be off.\nCountdown Sequence:\n1. The countdown starts at 9 and decrements by 1 every 2 seconds.\n2. The 7-segment displays should update to reflect the current countdown value, if the value is 8, 7-segment displays should show \"88\".\n3. During the countdown:\n   - The single-color LEDs (led1, led2, led3) should light up in sequence (led1, then led2, then led3) for each countdown step, with each LED staying on for 2 seconds.\n   - The RGB LEDs (rgb1, rgb2) should cycle through the colors red, green, and blue, changing color every 2 seconds.\n4. When the countdown reaches 0, the 7-segment displays should show \"00\", all single-color LEDs should turn off, and the RGB LEDs should display a steady white light.\n5. The system should then reset and restart the countdown from 9.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led3",
                        "top": -70.8,
                        "left": 128.6,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led3:C",
                        "black"
                    ],
                    [
                        "led3:A",
                        "mega:4",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:5",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:6",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:7",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:8",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:9",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:10",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int LED1_PIN = 2;   \nconst int LED2_PIN = 3;   \nconst int LED3_PIN = 4;   \nconst int RGB1_R_PIN = 5; \nconst int RGB1_G_PIN = 6; \nconst int RGB1_B_PIN = 7; \nconst int RGB2_R_PIN = 8; \nconst int RGB2_G_PIN = 9; \nconst int RGB2_B_PIN = 10; \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nint countdown = 9;\nint ledState = 0;\nint rgbColor = 0;\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  pinMode(LED3_PIN, OUTPUT);\n  pinMode(RGB1_R_PIN, OUTPUT);\n  pinMode(RGB1_G_PIN, OUTPUT);\n  pinMode(RGB1_B_PIN, OUTPUT);\n  pinMode(RGB2_R_PIN, OUTPUT);\n  pinMode(RGB2_G_PIN, OUTPUT);\n  pinMode(RGB2_B_PIN, OUTPUT);\n  displayNumber(99);\n}\nvoid loop() {\n  displayNumber(countdown * 11); \n  updateLEDs();\n  updateRGBs();\n  delay(2000);\n  countdown--;\n  if (countdown == 0) {\n    countdown = 9;\n    digitalWrite(LED1_PIN, LOW);\n    digitalWrite(LED2_PIN, LOW);\n    digitalWrite(LED3_PIN, LOW);\n    analogWrite(RGB1_R_PIN, 255);\n    analogWrite(RGB1_G_PIN, 255);\n    analogWrite(RGB1_B_PIN, 255);\n    analogWrite(RGB2_R_PIN, 255);\n    analogWrite(RGB2_G_PIN, 255);\n    analogWrite(RGB2_B_PIN, 255);\n    displayNumber(0); \n    delay(2000);\n  }\n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateLEDs() {\n  digitalWrite(LED1_PIN, ledState == 0 ? HIGH : LOW);\n  digitalWrite(LED2_PIN, ledState == 1 ? HIGH : LOW);\n  digitalWrite(LED3_PIN, ledState == 2 ? HIGH : LOW);\n  ledState = (ledState + 1) % 3;\n}\nvoid updateRGBs() {\n  switch (rgbColor) {\n    case 0:\n      analogWrite(RGB1_R_PIN, 255);\n      analogWrite(RGB1_G_PIN, 0);\n      analogWrite(RGB1_B_PIN, 0);\n      analogWrite(RGB2_R_PIN, 255);\n      analogWrite(RGB2_G_PIN, 0);\n      analogWrite(RGB2_B_PIN, 0);\n      break;\n    case 1:\n      analogWrite(RGB1_R_PIN, 0);\n      analogWrite(RGB1_G_PIN, 255);\n      analogWrite(RGB1_B_PIN, 0);\n      analogWrite(RGB2_R_PIN, 0);\n      analogWrite(RGB2_G_PIN, 255);\n      analogWrite(RGB2_B_PIN, 0);\n      break;\n    case 2:\n      analogWrite(RGB1_R_PIN, 0);\n      analogWrite(RGB1_G_PIN, 0);\n      analogWrite(RGB1_B_PIN, 255);\n      analogWrite(RGB2_R_PIN, 0);\n      analogWrite(RGB2_G_PIN, 0);\n      analogWrite(RGB2_B_PIN, 255);\n      break;\n  }\n  rgbColor = (rgbColor + 1) % 3;\n}",
        "hardware_lst": [
            3,
            0,
            2,
            2,
            0,
            0,
            0,
            2,
            0
        ]
    },
    {
        "id": 116,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a single-color LED (led1), an RGB LED (rgb1), and two 7-segment displays (sevseg1, sevseg2) using two shift registers (sr1, sr2). Monochrome LEDs will flash at 2-second intervals, RGB LEDs will cycle in a predefined color order, and 7-segment displays will repeat counting from 00 to 99. The 7-segment monitor should be updated every 2 seconds, and the RGB LED should change color every 2 seconds.\n\n**Detail Rules**:\n1. **Single-color LED (led1)**:\n   - The LED is initially turned off.\n   - The LED should flash at intervals of 2 seconds (2 seconds on, 2 seconds off).\n   - This blinking should continue indefinitely.\n\n2. **RGB LED (rgb1)**:\n   - The RGB LED should cycle through the following colors in sequence: Red, Green, Blue, Yellow, Cyan, Magenta, White.\n   - Each color should be displayed for 2 seconds before transitioning to the next color.\n   - The sequence should repeat indefinitely.\n\n3. **7-segment displays (sevseg1, sevseg2)**:\n   - The displays should show a two-digit number starting from 00 and incrementing by 1 every 2 second.\n   -When the count reaches 99, it should reset to 00 after two second and continue counting.\n   - The tens digit should be displayed on one 7-segment display (sevseg1), and the units digit should be displayed on the other (sevseg2).\n\n4. **Shift registers (sr1, sr2)**:\n   - The shift registers should be used to control the 7-segment displays.\n   - The Arduino should send the appropriate data to the shift registers to display the correct digits on the 7-segment displays.\n\n5. **Timing**:\n   - Monochrome LED, RGB LED, and 7-segment displays should be updated every 2 seconds.\n   - All timing should be precise and maintained for 2 seconds for verification purposes.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg2",
                        "top": -196.6,
                        "left": 494.7,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr2",
                        "top": -87.6,
                        "left": 494.7,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:3",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:4",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:5",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ],
                    [
                        "sr1:SHCP",
                        "sr2:SHCP",
                        "gray"
                    ],
                    [
                        "sr1:STCP",
                        "sr2:STCP",
                        "purple"
                    ],
                    [
                        "sr1:Q7S",
                        "sr2:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:MR",
                        "red"
                    ],
                    [
                        "sr1:VCC",
                        "sr2:VCC",
                        "red"
                    ],
                    [
                        "sr1:OE",
                        "sr2:OE",
                        "black"
                    ],
                    [
                        "sevseg1:COM.1",
                        "sevseg2:COM.1",
                        "red"
                    ],
                    [
                        "sr2:Q0",
                        "sevseg2:A",
                        "green"
                    ],
                    [
                        "sr2:Q1",
                        "sevseg2:B",
                        "green"
                    ],
                    [
                        "sr2:Q2",
                        "sevseg2:C",
                        "green"
                    ],
                    [
                        "sr2:Q3",
                        "sevseg2:D",
                        "green"
                    ],
                    [
                        "sr2:Q4",
                        "sevseg2:E",
                        "green"
                    ],
                    [
                        "sr2:Q5",
                        "sevseg2:F",
                        "green"
                    ],
                    [
                        "sr2:Q6",
                        "sevseg2:G",
                        "green"
                    ],
                    [
                        "sr1:GND",
                        "sr2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED_PIN = 2;          \nconst int RGB_RED_PIN = 3;      \nconst int RGB_GREEN_PIN = 4;    \nconst int RGB_BLUE_PIN = 5;     \nconst int SHCP_PIN = A2;        \nconst int STCP_PIN = A1;        \nconst int DS_PIN = A0;          \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000  \n};\nint currentNumber = 0;          \nunsigned long lastLedUpdate = 0;\nunsigned long lastRgbUpdate = 0;\nunsigned long lastDisplayUpdate = 0;\nint rgbState = 0;               \nvoid setup() {\n  pinMode(LED_PIN, OUTPUT);\n  pinMode(RGB_RED_PIN, OUTPUT);\n  pinMode(RGB_GREEN_PIN, OUTPUT);\n  pinMode(RGB_BLUE_PIN, OUTPUT);\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  displayNumber(0); \n  setRgbColor(rgbState);\n  rgbState = (rgbState + 1) % 7;\n  lastRgbUpdate = millis();\n}\nvoid loop() {\n  unsigned long currentTime = millis();\n  if (currentTime - lastLedUpdate >= 2000) {\n    digitalWrite(LED_PIN, !digitalRead(LED_PIN));\n    lastLedUpdate = currentTime;\n  }\n  if (currentTime - lastRgbUpdate >= 2000) {\n    setRgbColor(rgbState);\n    rgbState = (rgbState + 1) % 7;\n    lastRgbUpdate = currentTime;\n  }\n  if (currentTime - lastDisplayUpdate >= 2000) {\n    currentNumber = (currentNumber + 1) % 100;\n    displayNumber(currentNumber);\n    lastDisplayUpdate = currentTime;\n  }\n}\nvoid setRgbColor(int state) {\n  switch (state) {\n    case 0: \n      digitalWrite(RGB_RED_PIN, HIGH);\n      digitalWrite(RGB_GREEN_PIN, LOW);\n      digitalWrite(RGB_BLUE_PIN, LOW);\n      break;\n    case 1: \n      digitalWrite(RGB_RED_PIN, LOW);\n      digitalWrite(RGB_GREEN_PIN, HIGH);\n      digitalWrite(RGB_BLUE_PIN, LOW);\n      break;\n    case 2: \n      digitalWrite(RGB_RED_PIN, LOW);\n      digitalWrite(RGB_GREEN_PIN, LOW);\n      digitalWrite(RGB_BLUE_PIN, HIGH);\n      break;\n    case 3: \n      digitalWrite(RGB_RED_PIN, HIGH);\n      digitalWrite(RGB_GREEN_PIN, HIGH);\n      digitalWrite(RGB_BLUE_PIN, LOW);\n      break;\n    case 4: \n      digitalWrite(RGB_RED_PIN, LOW);\n      digitalWrite(RGB_GREEN_PIN, HIGH);\n      digitalWrite(RGB_BLUE_PIN, HIGH);\n      break;\n    case 5: \n      digitalWrite(RGB_RED_PIN, HIGH);\n      digitalWrite(RGB_GREEN_PIN, LOW);\n      digitalWrite(RGB_BLUE_PIN, HIGH);\n      break;\n    case 6: \n      digitalWrite(RGB_RED_PIN, HIGH);\n      digitalWrite(RGB_GREEN_PIN, HIGH);\n      digitalWrite(RGB_BLUE_PIN, HIGH);\n      break;\n  }\n}\nvoid displayNumber(int number) {\n  int tens = number / 10;\n  int ones = number % 10;\n  byte tensCode = segmentCodes[tens];\n  byte onesCode = segmentCodes[ones];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, onesCode);\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, tensCode);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}",
        "hardware_lst": [
            1,
            0,
            1,
            2,
            0,
            0,
            0,
            2,
            0
        ]
    },
    {
        "id": 117,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two LEDs (led1, led2) using three push buttons (btn1, btn2, btn3). The LEDs will act as indicators for specific button interactions. The first button (btn1) will toggle the state of the first LED (led1), the second button (btn2) will toggle the state of the second LED (led2), and the third button (btn3) will reset both LEDs to their off state.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, both LEDs (led1, led2) should be off.\nButton Interactions:\n1. Pressing the first button (btn1) should toggle the state of the first LED (led1). If the LED is off, it should turn on, and vice versa. The state should remain stable for 2 seconds after each toggle.\n2. Pressing the second button (btn2) should toggle the state of the second LED (led2). If the LED is off, it should turn on, and vice versa. The state should remain stable for 2 seconds after each toggle.\n3. Pressing the third button (btn3) should reset both LEDs (led1, led2) to their off state, regardless of their current state. The off state should remain stable for 2 seconds after the reset.\nDebouncing: Each button press should be debounced to avoid false triggers caused by mechanical vibrations.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn3",
                        "top": -195.4,
                        "left": 190.8,
                        "attrs": {
                            "color": "green"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:5",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn3:2.r",
                        "black"
                    ],
                    [
                        "mega:6",
                        "btn3:1.l",
                        "green"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int BTN1_PIN = 4;  \nconst int BTN2_PIN = 5;  \nconst int BTN3_PIN = 6;  \nconst unsigned long DEBOUNCE_DELAY = 150;  \nbool led1State = LOW;  \nbool led2State = LOW;  \nunsigned long lastDebounceTimeBtn1 = 0;  \nunsigned long lastDebounceTimeBtn2 = 0;  \nunsigned long lastDebounceTimeBtn3 = 0;  \nvoid setup() {\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  pinMode(BTN1_PIN, INPUT_PULLUP);\n  pinMode(BTN2_PIN, INPUT_PULLUP);\n  pinMode(BTN3_PIN, INPUT_PULLUP);\n  digitalWrite(LED1_PIN, led1State);\n  digitalWrite(LED2_PIN, led2State);\n}\nvoid loop() {\n  handleButton(BTN1_PIN, lastDebounceTimeBtn1, led1State, LED1_PIN);\n  handleButton(BTN2_PIN, lastDebounceTimeBtn2, led2State, LED2_PIN);\n  handleResetButton(BTN3_PIN, lastDebounceTimeBtn3);\n}\nvoid handleButton(int buttonPin, unsigned long &lastDebounceTime, bool &ledState, int ledPin) {\n  if (digitalRead(buttonPin) == LOW) {\n    if (millis() - lastDebounceTime > DEBOUNCE_DELAY) {\n      ledState = !ledState;\n      digitalWrite(ledPin, ledState);\n      lastDebounceTime = millis();\n      delay(2000);  \n    }\n  }\n}\nvoid handleResetButton(int buttonPin, unsigned long &lastDebounceTime) {\n  if (digitalRead(buttonPin) == LOW) {\n    if (millis() - lastDebounceTime > DEBOUNCE_DELAY) {\n      led1State = LOW;\n      led2State = LOW;\n      digitalWrite(LED1_PIN, led1State);\n      digitalWrite(LED2_PIN, led2State);\n      lastDebounceTime = millis();\n      delay(2000);  \n    }\n  }\n}",
        "hardware_lst": [
            2,
            3,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 118,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a servo motor (servo1) and an LED (led1) using two push buttons (btn1, btn2). The servo motor should rotate to specific angles based on the button presses, and the LED should indicate the state of the system. The first button (btn1) will increment the servo angle by 30 degrees, and the second button (btn2) will decrement the servo angle by 30 degrees. The LED should turn on when the servo start moving\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the servo motor (servo1) should be at 90 degrees, and the LED (led1) should be off.\nButton Interaction:\n1. When the first button (btn1) is pressed, the servo motor (servo1) should increment its angle by 30 degrees (up to a maximum of 180 degrees). The LED (led1) should turn on while the servo is moving and turn off once the servo reaches the new angle.\n2. When the second button (btn2) is pressed, the servo motor (servo1) should decrement its angle by 30 degrees (down to a minimum of 0 degrees). The LED (led1) should turn on while the servo is moving and turn off once the servo reaches the new angle.\n3. If the servo is already at the maximum or minimum angle, pressing the corresponding button should have no effect, and the LED (led1) should remain off.\nServo Movement: The servo motor (servo1) should move smoothly to the new angle, and the LED (led1) should remain on for at least 2 seconds during the movement.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:5",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nconst int LED_PIN = 2;\nconst int BTN1_PIN = 3;\nconst int BTN2_PIN = 4;\nconst int SERVO_PIN = 5;\nint currentAngle = 90;\nvoid setup() {\n  pinMode(LED_PIN, OUTPUT);\n  pinMode(BTN1_PIN, INPUT_PULLUP);\n  pinMode(BTN2_PIN, INPUT_PULLUP);\n  servo1.attach(SERVO_PIN);\n  servo1.write(currentAngle);\n  digitalWrite(LED_PIN, LOW);\n}\nvoid loop() {\n  if (digitalRead(BTN1_PIN) == LOW) {\n    delay(150); \n    if (digitalRead(BTN1_PIN) == LOW) {\n      if (currentAngle < 180) {\n        currentAngle += 30;\n        if (currentAngle > 180) currentAngle = 180;\n        digitalWrite(LED_PIN, HIGH);\n        servo1.write(currentAngle);\n        delay(2000); \n        digitalWrite(LED_PIN, LOW);\n      }\n      while (digitalRead(BTN1_PIN) == LOW); \n    }\n  }\n  if (digitalRead(BTN2_PIN) == LOW) {\n    delay(150); \n    if (digitalRead(BTN2_PIN) == LOW) {\n      if (currentAngle > 0) {\n        currentAngle -= 30;\n        if (currentAngle < 0) currentAngle = 0;\n        digitalWrite(LED_PIN, HIGH);\n        servo1.write(currentAngle);\n        delay(2000); \n        digitalWrite(LED_PIN, LOW);\n      }\n      while (digitalRead(BTN2_PIN) == LOW); \n    }\n  }\n}",
        "hardware_lst": [
            1,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            1
        ]
    },
    {
        "id": 119,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control two servos (servo1, servo2) and an LED (led1) using two push buttons (btn1, btn2). The servos will rotate to specific angles based on the button presses, and the LED will indicate the state of the system. The system should behave as follows:\n- Pressing btn1 will rotate servo1 to 90 degrees and turn on the LED.\n- Pressing btn2 will rotate servo2 to 180 degrees and turn off the LED.\n- -If one button has already been pressed and the other button is pressed, both servo systems will return to their initial position (0 degrees) and the LED will flash at a frequency of 0.25 Hz. (2 second on, one 2 off)\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, both servos should be at 0 degrees, and the LED should be off.\nButton Interaction:\n1. Pressing btn1 will rotate servo1 to 90 degrees and turn on the LED. This state should be maintained for at least 2 seconds.\n2. Pressing btn2 will rotate servo2 to 180 degrees and turn off the LED. This state should be maintained for at least 2 seconds.\n3. If one button has already been pressed and the other button is pressed, both servo systems will return to 0 degrees and the LED will flash at a frequency of 025 Hz (on for 2 second, off for 2 second). This state should be maintained until btn1 or btn2 is pressed again.\nState Maintenance: Each state (servo angles and LED state) should be maintained for at least 2 seconds to allow for verification.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo1",
                        "left": -201.6,
                        "top": -11.6,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-servo",
                        "id": "servo2",
                        "left": -201.6,
                        "top": 79.4,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:5",
                        "servo1:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo1:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo1:GND",
                        "black"
                    ],
                    [
                        "mega:6",
                        "servo2:PWM",
                        "orange"
                    ],
                    [
                        "mega:5V",
                        "servo2:V+",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "servo2:GND",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "#include <Servo.h>\nServo servo1;\nServo servo2;\nconst int LED_PIN = 2;\nconst int BTN1_PIN = 3;\nconst int BTN2_PIN = 4;\nconst int SERVO1_PIN = 5;\nconst int SERVO2_PIN = 6;\nunsigned long lastStateChangeTime = 0; \nbool isBlinking = false; \nbool btn1Active = false; \nbool btn2Active = false; \nbool led_date = LOW;\nvoid setup() {\n  pinMode(LED_PIN, OUTPUT);\n  pinMode(BTN1_PIN, INPUT_PULLUP);\n  pinMode(BTN2_PIN, INPUT_PULLUP);\n  servo1.attach(SERVO1_PIN);\n  servo2.attach(SERVO2_PIN);\n  servo1.write(0);\n  servo2.write(0);\n  digitalWrite(LED_PIN, LOW);\n}\nvoid loop() {\n  bool btn1Pressed = digitalRead(BTN1_PIN) == LOW;\n  bool btn2Pressed = digitalRead(BTN2_PIN) == LOW;\n  if (btn1Pressed && !btn2Active && !btn1Active) {\n    btn1Active = true;\n    btn2Active = false; \n    isBlinking = false;\n    servo1.write(90);\n    led_date = HIGH;\n    digitalWrite(LED_PIN, led_date);\n    lastStateChangeTime = millis();\n    delay(2000);\n  } else if (btn2Pressed && !btn1Active && !btn2Active) {\n    btn2Active = true;\n    btn1Active = false; \n    isBlinking = false;\n    servo2.write(180);\n    led_date = LOW;\n    digitalWrite(LED_PIN, led_date);\n    lastStateChangeTime = millis();\n    delay(2000);\n  }\n  if ((btn1Active && btn2Pressed) || (btn2Active && btn1Pressed)) {\n    servo1.write(0);\n    servo2.write(0);\n    isBlinking = true;\n    lastStateChangeTime = millis();\n  }\n  if (isBlinking) {\n    blinkLED();\n  }\n  else{\n    digitalWrite(LED_PIN, led_date);\n  }\n}\nvoid blinkLED() {\n  unsigned long currentTime = millis();\n  static unsigned long lastBlinkTime = 0;\n  if (currentTime - lastBlinkTime >= 2000) {\n    digitalWrite(LED_PIN, !digitalRead(LED_PIN));\n    lastBlinkTime = currentTime;\n  }\n}",
        "hardware_lst": [
            1,
            2,
            0,
            0,
            0,
            0,
            0,
            0,
            2
        ]
    },
    {
        "id": 120,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control the brightness and behavior of an LED (led1) using two push buttons (btn1, btn2) and three slide potentiometers (pot1, pot2, pot3). The LED's brightness will be controlled by the potentiometers, and the buttons will determine the mode of operation. The system should have two modes: Manual Mode and Auto Mode. In Manual Mode, the LED's brightness is directly controlled by one potentiometer. In Auto Mode, the LED's brightness cycles through a range determined by the other two potentiometers.\n\n**Detail Rules**:\n1. **Initialization**: Upon powering on or resetting, the LED (led1) should be off, and the system should start in Manual Mode.\n2. **Manual Mode**:\n   - The brightness of the LED (led1) is controlled by the value of the first potentiometer (pot1). The value of pot1 is mapped to the LED's brightness (0 to 255).\n   - The second potentiometer (pot2) and third potentiometer (pot3) are ignored in this mode.\n   - Pressing the first button (btn1) switches the system to Auto Mode.\n3. **Auto Mode**:\n   - The LED (led1) cycles through a brightness range determined by the second potentiometer (pot2) and third potentiometer (pot3). The minimum brightness is set by pot2, and the maximum brightness is set by pot3.\n   - The LED's brightness smoothly transitions between the minimum and maximum values, with each transition taking 2 seconds.\n   - Pressing the second button (btn2) switches the system back to Manual Mode.\n4. **Button Debouncing**: Both buttons (btn1, btn2) must be debounced to avoid false triggers caused by mechanical vibrations. A debounce delay of 150 milliseconds should be used.\n5. **Mode Indication**: The current mode (Manual or Auto) should be indicated by the LED's behavior:\n   - In Manual Mode, the LED's brightness is static and directly controlled by pot1.\n   - In Auto Mode, the LED's brightness cycles between the minimum and maximum values set by pot2 and pot3.\n6. **State Persistence**: Each state (Manual or Auto Mode) should persist for at least 2 seconds before switching to ensure proper verification.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -408.8,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED_PIN = 2;          \nconst int BTN1_PIN = 3;         \nconst int BTN2_PIN = 4;         \nconst int POT1_PIN = A3;        \nconst int POT2_PIN = A4;        \nconst int POT3_PIN = A5;        \nconst unsigned long DEBOUNCE_DELAY = 150;  \nbool manualMode = true;         \nunsigned long lastDebounceTime = 0;  \nint ledBrightness = 0;          \nint minBrightness = 0;          \nint maxBrightness = 0;          \nvoid setup() {\n  pinMode(LED_PIN, OUTPUT);\n  pinMode(BTN1_PIN, INPUT_PULLUP);\n  pinMode(BTN2_PIN, INPUT_PULLUP);\n  analogWrite(LED_PIN, 0);  \n}\nvoid loop() {\n  handleButtons();  \n  if (manualMode) {\n    manualModeOperation();\n  } else {\n    autoModeOperation();\n  }\n}\nvoid handleButtons() {\n  unsigned long currentTime = millis();\n  if (currentTime - lastDebounceTime > DEBOUNCE_DELAY) {\n    if (digitalRead(BTN1_PIN) == LOW) {\n      manualMode = false;  \n      lastDebounceTime = currentTime;\n    } else if (digitalRead(BTN2_PIN) == LOW) {\n      manualMode = true;   \n      lastDebounceTime = currentTime;\n    }\n  }\n}\nvoid manualModeOperation() {\n  int pot1Value = analogRead(POT1_PIN);\n  ledBrightness = map(pot1Value, 0, 1023, 0, 255);\n  analogWrite(LED_PIN, ledBrightness);\n}\nvoid autoModeOperation() {\n  minBrightness = map(analogRead(POT2_PIN), 0, 1023, 0, 255);\n  maxBrightness = map(analogRead(POT3_PIN), 0, 1023, 0, 255);\n  for (int i = minBrightness; i <= maxBrightness; i++) {\n    analogWrite(LED_PIN, i);\n    delay(20);  \n  }\n  for (int i = maxBrightness; i >= minBrightness; i--) {\n    analogWrite(LED_PIN, i);\n    delay(20);  \n  }\n}",
        "hardware_lst": [
            1,
            2,
            0,
            0,
            0,
            3,
            0,
            0,
            0
        ]
    },
    {
        "id": 121,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three LEDs (led1, led2, led3) using three push buttons (btn1, btn2, btn3) and three slide potentiometers (pot1, pot2, pot3). Each LED corresponds to a specific button and potentiometer. When a button is pressed, the corresponding LED's brightness will be set based on the value of its associated potentiometer. The brightness of each LED should remain stable for at least 2 seconds after a button press to allow for verification.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, all LEDs (led1, led2, led3) should be off.\nButton and Potentiometer Interaction:\n1. Each button (btn1, btn2, btn3) is associated with a specific LED (led1, led2, led3) and potentiometer (pot1, pot2, pot3).\n2. When a button is pressed, the corresponding LED's brightness should be set to a value proportional to the potentiometer's position. The potentiometer value ranges from 0 to 1023, and the LED brightness should range from 0 to 255.\n3. The brightness of the LED should remain stable for at least 2 seconds after the button is pressed.\n4. If no button is pressed, the LEDs should maintain their current brightness levels.\n5. Each button press should only affect its corresponding LED, leaving the other LEDs unchanged.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led3",
                        "top": -70.8,
                        "left": 128.6,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn3",
                        "top": -195.4,
                        "left": 190.8,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot1",
                        "top": -158,
                        "left": -178.4,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot2",
                        "top": -158,
                        "left": -293.6,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    },
                    {
                        "type": "wokwi-slide-potentiometer",
                        "id": "pot3",
                        "top": -158,
                        "left": -408.8,
                        "rotate": 270,
                        "attrs": {
                            "travelLength": "30"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led3:C",
                        "black"
                    ],
                    [
                        "led3:A",
                        "mega:4",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:5",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:6",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn3:2.r",
                        "black"
                    ],
                    [
                        "mega:7",
                        "btn3:1.l",
                        "green"
                    ],
                    [
                        "pot1:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot1:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot1:SIG",
                        "mega:A3",
                        "black"
                    ],
                    [
                        "pot2:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot2:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot2:SIG",
                        "mega:A4",
                        "black"
                    ],
                    [
                        "pot3:GND",
                        "mega:GND.1",
                        "black"
                    ],
                    [
                        "pot3:VCC",
                        "mega:5V",
                        "red"
                    ],
                    [
                        "pot3:SIG",
                        "mega:A5",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int LED3_PIN = 4;  \nconst int BUTTON1_PIN = 5;  \nconst int BUTTON2_PIN = 6;  \nconst int BUTTON3_PIN = 7;  \nconst int POT1_PIN = A3;  \nconst int POT2_PIN = A4;  \nconst int POT3_PIN = A5;  \nint led1Brightness = 0;\nint led2Brightness = 0;\nint led3Brightness = 0;\nvoid setup() {\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  pinMode(LED3_PIN, OUTPUT);\n  pinMode(BUTTON1_PIN, INPUT_PULLUP);\n  pinMode(BUTTON2_PIN, INPUT_PULLUP);\n  pinMode(BUTTON3_PIN, INPUT_PULLUP);\n  analogWrite(LED1_PIN, led1Brightness);\n  analogWrite(LED2_PIN, led2Brightness);\n  analogWrite(LED3_PIN, led3Brightness);\n}\nvoid loop() {\n  if (digitalRead(BUTTON1_PIN) == LOW) {\n    delay(20);  \n    if (digitalRead(BUTTON1_PIN) == LOW) {\n      led1Brightness = map(analogRead(POT1_PIN), 0, 1023, 0, 255);\n      analogWrite(LED1_PIN, led1Brightness);\n      delay(150);  \n      while (digitalRead(BUTTON1_PIN) == LOW);  \n    }\n  }\n  if (digitalRead(BUTTON2_PIN) == LOW) {\n    delay(20);  \n    if (digitalRead(BUTTON2_PIN) == LOW) {\n      led2Brightness = map(analogRead(POT2_PIN), 0, 1023, 0, 255);\n      analogWrite(LED2_PIN, led2Brightness);\n      delay(150);  \n      while (digitalRead(BUTTON2_PIN) == LOW);  \n    }\n  }\n  if (digitalRead(BUTTON3_PIN) == LOW) {\n    delay(20);  \n    if (digitalRead(BUTTON3_PIN) == LOW) {\n      led3Brightness = map(analogRead(POT3_PIN), 0, 1023, 0, 255);\n      analogWrite(LED3_PIN, led3Brightness);\n      delay(150);  \n      while (digitalRead(BUTTON3_PIN) == LOW);  \n    }\n  }\n}",
        "hardware_lst": [
            3,
            3,
            0,
            0,
            0,
            3,
            0,
            0,
            0
        ]
    },
    {
        "id": 122,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to create a 3-bit binary input system using three push buttons (btn1, btn2, btn3), three LEDs (led1, led2, led3), and an 8-segment LED bar graph (bargraph1). The LED represents a single bit, and the bar graph displays the decimal equivalent of the binary value by illuminating a corresponding segment. The binary value is determined by three buttons (btn1, btn2, btn3).\n\n**Detail Rules**:\n1. **Initialization**: All LEDs and bar graph segments must be off when the system starts or resets.\n2. **Button Interaction**:\n    -Pressing btn1 will light up LED1, and the lowest bit of the binary number will switch to 1. Pressing btn1 again will switch the state of LED1 and the lowest bit of the binary number.\n    -Pressing btn1 will light up LED2, and the middle bit of the binary number will switch to 1. Pressing btn2 again will switch the state of LED1 and the middle bit of the binary number.\n    -Pressing btn1 will light up LED3, and the highest bit of the binary number will switch to 1. Pressing btn3 again will switch the state of LED1 and the highest bit of the binary number.\n3. **Bar Graph Display**:\n   - The bar graph lights up the segment corresponding to the 3-bit binary value (0-7).(PIN A1-A7) For example, binary `101` (decimal 5) lights segment 5.(PIN A5)\n4. **State Stability**:\n   - The system must ignore button presses shorter than 0.15 seconds to avoid false triggers.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led3",
                        "top": -70.8,
                        "left": 128.6,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn3",
                        "top": -195.4,
                        "left": 190.8,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led3:C",
                        "black"
                    ],
                    [
                        "led3:A",
                        "mega:4",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:5",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:6",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn3:2.r",
                        "black"
                    ],
                    [
                        "mega:7",
                        "btn3:1.l",
                        "green"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:45",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int BUTTON_PINS[] = {5, 6, 7};\nconst int LED_PINS[] = {2, 3, 4};\nconst int BARGRAPH_PINS[] = {8, 9, 10, 11, 12, 13, 44, 45};\nbool ledStates[] = {LOW, LOW, LOW};\nint lastButtonStates[] = {HIGH, HIGH, HIGH};\nunsigned long lastDebounceTime[] = {0, 0, 0};\nconst long DEBOUNCE_DELAY = 150;\nvoid setup() {\n  for (int i = 0; i < 3; i++) {\n    pinMode(BUTTON_PINS[i], INPUT_PULLUP);\n    pinMode(LED_PINS[i], OUTPUT);\n    digitalWrite(LED_PINS[i], LOW);\n  }\n  for (int i = 0; i < 8; i++) {\n    pinMode(BARGRAPH_PINS[i], OUTPUT);\n    digitalWrite(BARGRAPH_PINS[i], LOW);\n  }\n}\nvoid loop() {\n  for (int i = 0; i < 3; i++) {\n    if (digitalRead(BUTTON_PINS[i]) == LOW) {\n      delay(20);  \n      if (digitalRead(BUTTON_PINS[i]) == LOW) {\n        ledStates[i] = !ledStates[i];\n        digitalWrite(LED_PINS[i], ledStates[i]);\n        updateBargraph();\n        while (digitalRead(BUTTON_PINS[i]) == LOW) {\n          delay(10);  \n        }\n        delay(20);  \n      }\n    }\n  }\n}\nvoid updateBargraph() {\n  int value = 0;\n  for (int i = 0; i < 3; i++) {\n    if (ledStates[i]) {\n      value += (1 << i);\n    }\n  }\n  value -= 1;\n  for (int i = 0; i < 8; i++) {\n    digitalWrite(BARGRAPH_PINS[i], (i == value) ? HIGH : LOW);\n  }\n}",
        "hardware_lst": [
            3,
            3,
            0,
            0,
            1,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 123,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 10-segment LED bar graph (bargraph1), two individual LEDs (led1, led2), and a push button (btn1). The bar graph will display a counter value that increases with each button press, while the LEDs will show how many times the counter has overflowed in binary format.\n\n**Detail Rules**:\nInitialization: All components must start in an off state (bar graph segments unlit, LEDs off).\nButton Interaction:\n1. Each valid button press increments the counter by 1.\n2. The bar graph (bargraph1) must light up segments corresponding to the current counter value (1-10 segments,PIN A1-A10).\n3. When the counter exceeds 10, it resets to 0 and the overflow counter (shown by LEDs) increments by 1.\n4. The LEDs (led1, led2) display the overflow counter in binary:\n   - 00: 0 overflows\n   - 01: 1 overflow\n   - 10: 2 overflows\n   - 11: 3 overflows (then wraps back to 00)\n5. Button presses must be debounced to prevent false triggers (minimum 0.15-second stable press detection).\n6. The system must maintain each valid state (combination of bar graph segments and LED states) until the next valid button press.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-led-bar-graph",
                        "id": "bargraph1",
                        "left": 417.6,
                        "top": -14.2,
                        "attrs": {
                            "color": "lime"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:5",
                        "bargraph1:A1",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C1",
                        "black"
                    ],
                    [
                        "mega:6",
                        "bargraph1:A2",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C2",
                        "black"
                    ],
                    [
                        "mega:7",
                        "bargraph1:A3",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C3",
                        "black"
                    ],
                    [
                        "mega:8",
                        "bargraph1:A4",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C4",
                        "black"
                    ],
                    [
                        "mega:9",
                        "bargraph1:A5",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C5",
                        "black"
                    ],
                    [
                        "mega:10",
                        "bargraph1:A6",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C6",
                        "black"
                    ],
                    [
                        "mega:11",
                        "bargraph1:A7",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C7",
                        "black"
                    ],
                    [
                        "mega:12",
                        "bargraph1:A8",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C8",
                        "black"
                    ],
                    [
                        "mega:13",
                        "bargraph1:A9",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C9",
                        "black"
                    ],
                    [
                        "mega:44",
                        "bargraph1:A10",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "bargraph1:C10",
                        "black"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int BUTTON_PIN = 4;  \nint currentCount = 0;\nint overflowCount = 0;\nvoid setup() {\n  for (int pin = 5; pin <= 13; pin++) {  \n    pinMode(pin, OUTPUT);\n    digitalWrite(pin, LOW);\n  }\n  pinMode(44, OUTPUT);  \n  digitalWrite(44, LOW);\n  pinMode(BUTTON_PIN, INPUT_PULLUP);\n}\nvoid updateDisplay() {\n  for (int seg = 5; seg <= 13; seg++) {\n    digitalWrite(seg, (seg - 5) < currentCount ? HIGH : LOW);\n  }\n  digitalWrite(44, (9 < currentCount) ? HIGH : LOW);  \n  digitalWrite(2, overflowCount & 0b01);  \n  digitalWrite(3, overflowCount & 0b10);  \n}\nvoid loop() {\n  if (digitalRead(BUTTON_PIN) == LOW) {\n    delay(150); \n    if (digitalRead(BUTTON_PIN) == LOW) {\n      currentCount++;\n      if (currentCount > 10) {\n        currentCount = 0;\n        overflowCount = (overflowCount + 1) % 4;\n      }\n      updateDisplay();\n      while (digitalRead(BUTTON_PIN) == LOW);\n    }\n  }\n}",
        "hardware_lst": [
            2,
            1,
            0,
            0,
            1,
            0,
            0,
            0,
            0
        ]
    },
    {
        "id": 124,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control a 7-segment display (sevseg1) using a shift register (sr1), two push buttons (btn1, btn2), and an LED (led1). The 7-segment display will show a single-digit number that can be incremented or decremented using the push buttons. The LED will indicate whether the number is even or odd. \n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, the 7-segment display should show \"0\", and the LED (led1) should be off.\nButton Interaction:\n1. The first push button (btn1) increments the displayed number by 1. If the number exceeds 9, it should reset to 0.\n2. The second push button (btn2) decrements the displayed number by 1. If the number goes below 0, it should reset to 9.\nLED State:\n1. If the displayed number is even, the LED (led1) should turn on.\n2. If the displayed number is odd, the LED (led1) should turn off.\nDisplay Update: The 7-segment display and LED should immediately update to reflect the new number and its parity after each button press.\nDebouncing: Ensure that each button press is debounced to avoid false triggers caused by mechanical vibrations.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn2",
                        "top": -195.4,
                        "left": 105.0,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-7segment",
                        "id": "sevseg1",
                        "top": -196.6,
                        "left": 408.3,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-74hc595",
                        "id": "sr1",
                        "top": -87.6,
                        "left": 408.3,
                        "attrs": {}
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:3",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "btn2:2.r",
                        "black"
                    ],
                    [
                        "mega:4",
                        "btn2:1.l",
                        "green"
                    ],
                    [
                        "mega:5V",
                        "sr1:VCC",
                        "red"
                    ],
                    [
                        "mega:A2",
                        "sr1:SHCP",
                        "gray"
                    ],
                    [
                        "mega:A1",
                        "sr1:STCP",
                        "purple"
                    ],
                    [
                        "mega:A0",
                        "sr1:DS",
                        "blue"
                    ],
                    [
                        "sr1:VCC",
                        "sr1:MR",
                        "red"
                    ],
                    [
                        "sr1:MR",
                        "sevseg1:COM.1",
                        "red"
                    ],
                    [
                        "sr1:Q1",
                        "sevseg1:B",
                        "green"
                    ],
                    [
                        "sr1:Q2",
                        "sevseg1:C",
                        "green"
                    ],
                    [
                        "sr1:Q3",
                        "sevseg1:D",
                        "green"
                    ],
                    [
                        "sr1:Q4",
                        "sevseg1:E",
                        "green"
                    ],
                    [
                        "mega:GND.3",
                        "sr1:GND",
                        "black"
                    ],
                    [
                        "sr1:GND",
                        "sr1:OE",
                        "black"
                    ],
                    [
                        "sr1:Q0",
                        "sevseg1:A",
                        "green"
                    ],
                    [
                        "sr1:Q5",
                        "sevseg1:F",
                        "green"
                    ],
                    [
                        "sr1:Q6",
                        "sevseg1:G",
                        "green"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int SHCP_PIN = A2;  \nconst int STCP_PIN = A1;  \nconst int DS_PIN = A0;    \nconst int BUTTON1_PIN = 3;  \nconst int BUTTON2_PIN = 4;  \nconst int LED_PIN = 2;      \nconst byte segmentCodes[] = {\n  0b11000000, \n  0b11111001, \n  0b10100100, \n  0b10110000, \n  0b10011001, \n  0b10010010, \n  0b10000010, \n  0b11111000, \n  0b10000000, \n  0b10010000, \n};\nint currentNumber = 0;\nbool lastButton1State = HIGH;\nbool lastButton2State = HIGH;\nunsigned long lastDebounceTime1 = 0;\nunsigned long lastDebounceTime2 = 0;\nconst unsigned long debounceDelay = 150; \nbool lastStableButton1State = HIGH;\nbool lastStableButton2State = HIGH;\nvoid setup() {\n  pinMode(SHCP_PIN, OUTPUT);\n  pinMode(STCP_PIN, OUTPUT);\n  pinMode(DS_PIN, OUTPUT);\n  pinMode(BUTTON1_PIN, INPUT_PULLUP);\n  pinMode(BUTTON2_PIN, INPUT_PULLUP);\n  pinMode(LED_PIN, OUTPUT);\n  displayNumber(currentNumber);\n  updateLED();\n}\nvoid loop() {\n  bool button1State = digitalRead(BUTTON1_PIN);\n  if (button1State != lastButton1State) {\n    lastDebounceTime1 = millis(); \n  }\n  if ((millis() - lastDebounceTime1) > debounceDelay) {\n    if (button1State == LOW && lastStableButton1State == HIGH) {\n      currentNumber = (currentNumber + 1) % 10; \n      displayNumber(currentNumber);\n      updateLED();\n    }\n    lastStableButton1State = button1State;\n  }\n  lastButton1State = button1State; \n  bool button2State = digitalRead(BUTTON2_PIN);\n  if (button2State != lastButton2State) {\n    lastDebounceTime2 = millis();\n  }\n  if ((millis() - lastDebounceTime2) > debounceDelay) {\n    if (button2State == LOW && lastStableButton2State == HIGH) {\n      currentNumber = (currentNumber - 1 + 10) % 10; \n      displayNumber(currentNumber);\n      updateLED();\n    }\n    lastStableButton2State = button2State;\n  }\n  lastButton2State = button2State; \n}\nvoid displayNumber(int number) {\n  byte code = segmentCodes[number];\n  shiftOut(DS_PIN, SHCP_PIN, MSBFIRST, code);\n  digitalWrite(STCP_PIN, HIGH);\n  digitalWrite(STCP_PIN, LOW);\n}\nvoid updateLED() {\n  if (currentNumber % 2 == 0) {\n    digitalWrite(LED_PIN, HIGH); \n  } else {\n    digitalWrite(LED_PIN, LOW);  \n  }\n}",
        "hardware_lst": [
            1,
            2,
            0,
            1,
            0,
            0,
            0,
            1,
            0
        ]
    },
    {
        "id": 125,
        "problem": "\n\n**Task**:\nYou are tasked with programming an Arduino (uno) to control three single-color LEDs (led1, led2, led3) and three RGB LEDs (rgb1, rgb2, rgb3) using a push button (btn1). The single-color LEDs will act as indicators for the state of the RGB LEDs, and the push button will cycle through different lighting modes for the RGB LEDs. Each mode will display a unique color combination on the RGB LEDs, and the single-color LEDs will indicate the current mode.\n\n**Detail Rules**:\nInitialization: Upon powering on or resetting, all LEDs (single-color and RGB) should be off.\nButton Interaction:\n1. Each press of the button (btn1) will cycle through four modes:\n   - Mode 1: RGB LEDs display red, green, and blue colors respectively. led1 will turn on in sequence to indicate the mode.\n   - Mode 2: RGB LEDs display a rainbow effect (yellow, cyan, purple)\n   - Mode 3: RGB LEDs display a warm white color (equal red, green, and blue values). led3 will turn on in sequence to indicate the mode.\n   - Mode 4: All LEDs (single-color and RGB) turn off. Single-color LEDs will remain off to indicate the mode.\n2. Each mode should be maintained for at least 2 seconds before the button can cycle to the next mode.\n3. The RGB LEDs should smoothly transition between colors in Mode 2 (rainbow effect).\n4. The single-color LEDs should clearly indicate the current mode as described above.\n\n",
        "diagram": {
            "Arduino Mega": {
                "version": 1,
                "author": "Anonymous maker",
                "editor": "wokwi",
                "parts": [
                    {
                        "type": "wokwi-arduino-mega",
                        "id": "mega",
                        "top": 0,
                        "left": 0,
                        "attrs": {}
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led1",
                        "top": -70.8,
                        "left": 13.4,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led2",
                        "top": -70.8,
                        "left": 71.0,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-led",
                        "id": "led3",
                        "top": -70.8,
                        "left": 128.6,
                        "attrs": {
                            "color": "red"
                        }
                    },
                    {
                        "type": "wokwi-pushbutton",
                        "id": "btn1",
                        "top": -195.4,
                        "left": 19.2,
                        "attrs": {
                            "color": "green"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb1",
                        "top": -130.4,
                        "left": 39.5,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb2",
                        "top": -130.4,
                        "left": 97.1,
                        "attrs": {
                            "common": "cathode"
                        }
                    },
                    {
                        "type": "wokwi-rgb-led",
                        "id": "rgb3",
                        "top": -130.4,
                        "left": 154.7,
                        "attrs": {
                            "common": "cathode"
                        }
                    }
                ],
                "connections": [
                    [
                        "mega:GND.1",
                        "led1:C",
                        "black"
                    ],
                    [
                        "led1:A",
                        "mega:2",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led2:C",
                        "black"
                    ],
                    [
                        "led2:A",
                        "mega:3",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "led3:C",
                        "black"
                    ],
                    [
                        "led3:A",
                        "mega:4",
                        "red"
                    ],
                    [
                        "mega:GND.1",
                        "btn1:2.r",
                        "black"
                    ],
                    [
                        "mega:5",
                        "btn1:1.l",
                        "green"
                    ],
                    [
                        "mega:GND.1",
                        "rgb1:COM",
                        "black"
                    ],
                    [
                        "mega:6",
                        "rgb1:R",
                        "red"
                    ],
                    [
                        "mega:7",
                        "rgb1:G",
                        "green"
                    ],
                    [
                        "mega:8",
                        "rgb1:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb2:COM",
                        "black"
                    ],
                    [
                        "mega:9",
                        "rgb2:R",
                        "red"
                    ],
                    [
                        "mega:10",
                        "rgb2:G",
                        "green"
                    ],
                    [
                        "mega:11",
                        "rgb2:B",
                        "blue"
                    ],
                    [
                        "mega:GND.1",
                        "rgb3:COM",
                        "black"
                    ],
                    [
                        "mega:12",
                        "rgb3:R",
                        "red"
                    ],
                    [
                        "mega:13",
                        "rgb3:G",
                        "green"
                    ],
                    [
                        "mega:44",
                        "rgb3:B",
                        "blue"
                    ]
                ],
                "dependencies": {}
            }
        },
        "sketch": "const int LED1_PIN = 2;  \nconst int LED2_PIN = 3;  \nconst int LED3_PIN = 4;  \nconst int BUTTON_PIN = 5;  \nconst int RGB1_R_PIN = 6;  \nconst int RGB1_G_PIN = 7;  \nconst int RGB1_B_PIN = 8;  \nconst int RGB2_R_PIN = 9;  \nconst int RGB2_G_PIN = 10;  \nconst int RGB2_B_PIN = 11;  \nconst int RGB3_R_PIN = 12;  \nconst int RGB3_G_PIN = 13;  \nconst int RGB3_B_PIN = 44;  \nint mode = 0;\nunsigned long lastModeChange = 0;\nbool buttonPressed = false;\nvoid setup() {\n  pinMode(LED1_PIN, OUTPUT);\n  pinMode(LED2_PIN, OUTPUT);\n  pinMode(LED3_PIN, OUTPUT);\n  pinMode(BUTTON_PIN, INPUT_PULLUP);\n  pinMode(RGB1_R_PIN, OUTPUT);\n  pinMode(RGB1_G_PIN, OUTPUT);\n  pinMode(RGB1_B_PIN, OUTPUT);\n  pinMode(RGB2_R_PIN, OUTPUT);\n  pinMode(RGB2_G_PIN, OUTPUT);\n  pinMode(RGB2_B_PIN, OUTPUT);\n  pinMode(RGB3_R_PIN, OUTPUT);\n  pinMode(RGB3_G_PIN, OUTPUT);\n  pinMode(RGB3_B_PIN, OUTPUT);\n}\nvoid loop() {\n  if (digitalRead(BUTTON_PIN) == LOW && millis() - lastModeChange > 2000) {\n    mode = (mode + 1) % 4;\n    lastModeChange = millis();\n    updateLEDs();\n    delay(200); \n  }\n  switch (mode) {\n    case 0:\n      setRGBColor(RGB1_R_PIN, RGB1_G_PIN, RGB1_B_PIN, 255, 0, 0); \n      setRGBColor(RGB2_R_PIN, RGB2_G_PIN, RGB2_B_PIN, 0, 255, 0); \n      setRGBColor(RGB3_R_PIN, RGB3_G_PIN, RGB3_B_PIN, 0, 0, 255); \n      digitalWrite(LED1_PIN, HIGH); \n      digitalWrite(LED2_PIN, LOW);\n      digitalWrite(LED3_PIN, LOW);\n      break;\n    case 1:\n      setRGBColor(RGB1_R_PIN, RGB1_G_PIN, RGB1_B_PIN, 255, 255, 0); \n      setRGBColor(RGB2_R_PIN, RGB2_G_PIN, RGB2_B_PIN, 0, 255, 255); \n      setRGBColor(RGB3_R_PIN, RGB3_G_PIN, RGB3_B_PIN, 255, 0, 255); \n      digitalWrite(LED1_PIN, LOW);\n      digitalWrite(LED2_PIN, HIGH); \n      digitalWrite(LED3_PIN, LOW);\n      break;\n    case 2:\n      setRGBColor(RGB1_R_PIN, RGB1_G_PIN, RGB1_B_PIN, 255, 200, 150); \n      setRGBColor(RGB2_R_PIN, RGB2_G_PIN, RGB2_B_PIN, 255, 200, 150);\n      setRGBColor(RGB3_R_PIN, RGB3_G_PIN, RGB3_B_PIN, 255, 200, 150);\n      digitalWrite(LED1_PIN, LOW);\n      digitalWrite(LED2_PIN, LOW);\n      digitalWrite(LED3_PIN, HIGH); \n      break;\n    case 3:\n      setRGBColor(RGB1_R_PIN, RGB1_G_PIN, RGB1_B_PIN, 0, 0, 0); \n      setRGBColor(RGB2_R_PIN, RGB2_G_PIN, RGB2_B_PIN, 0, 0, 0);\n      setRGBColor(RGB3_R_PIN, RGB3_G_PIN, RGB3_B_PIN, 0, 0, 0);\n      digitalWrite(LED1_PIN, LOW);\n      digitalWrite(LED2_PIN, LOW);\n      digitalWrite(LED3_PIN, LOW); \n      break;\n  }\n}\nvoid setRGBColor(int rPin, int gPin, int bPin, int r, int g, int b) {\n  analogWrite(rPin, r);\n  analogWrite(gPin, g);\n  analogWrite(bPin, b);\n}\nvoid updateLEDs() {\n  digitalWrite(LED1_PIN, LOW);\n  digitalWrite(LED2_PIN, LOW);\n  digitalWrite(LED3_PIN, LOW);\n  setRGBColor(RGB1_R_PIN, RGB1_G_PIN, RGB1_B_PIN, 0, 0, 0);\n  setRGBColor(RGB2_R_PIN, RGB2_G_PIN, RGB2_B_PIN, 0, 0, 0);\n  setRGBColor(RGB3_R_PIN, RGB3_G_PIN, RGB3_B_PIN, 0, 0, 0);\n}",
        "hardware_lst": [
            3,
            1,
            3,
            0,
            0,
            0,
            0,
            0,
            0
        ]
    }
]